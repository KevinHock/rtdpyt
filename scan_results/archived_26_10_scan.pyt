maxcountryman/flask-uploads
https://github.com/maxcountryman/flask-uploads
Entry file: flask-uploads/tests.py
Scanned: 2016-10-25 14:55:15.361457
No vulnerabilities found.


masonicGIT/21-Flask-Boilerplate
https://github.com/masonicGIT/21-Flask-Boilerplate
Entry file: 21-Flask-Boilerplate/app/__init__.py
Scanned: 2016-10-25 14:55:21.213012
Vulnerability 1:
File: 21-Flask-Boilerplate/app/views/main.py
 > User input at line 64, trigger word ".data": 
	tx = multisig_wallet.send_bitcoin(username, form.address.data, form.amount.data, user.password)
Reassigned in: 
	File: 21-Flask-Boilerplate/app/views/main.py
	 > Line 67: message = 'You just sent ' + str(form.amount.data) + ' Satoshis to: ' + str(form.address.data) + ' - You may view your transaction at: https://btc.blockr.io/tx/info/' + str(tx)
File: 21-Flask-Boilerplate/app/views/main.py
 > reaches line 68, trigger word "flash(": 
	flash(message, 'positive')

Vulnerability 2:
File: 21-Flask-Boilerplate/app/views/main.py
 > User input at line 67, trigger word ".data": 
	message = 'You just sent ' + str(form.amount.data) + ' Satoshis to: ' + str(form.address.data) + ' - You may view your transaction at: https://btc.blockr.io/tx/info/' + str(tx)
File: 21-Flask-Boilerplate/app/views/main.py
 > reaches line 68, trigger word "flash(": 
	flash(message, 'positive')

Vulnerability 3:
File: 21-Flask-Boilerplate/app/views/main.py
 > User input at line 64, trigger word ".data": 
	tx = multisig_wallet.send_bitcoin(username, form.address.data, form.amount.data, user.password)
Reassigned in: 
	File: 21-Flask-Boilerplate/app/views/main.py
	 > Line 67: message = 'You just sent ' + str(form.amount.data) + ' Satoshis to: ' + str(form.address.data) + ' - You may view your transaction at: https://btc.blockr.io/tx/info/' + str(tx)
File: 21-Flask-Boilerplate/app/views/main.py
 > reaches line 72, trigger word "flash(": 
	flash(tx['message'], 'negative')

Vulnerability 4:
File: 21-Flask-Boilerplate/app/views/main.py
 > User input at line 78, trigger word "form(": 
	points = [(random.uniform(48.84341, 48.86341), random.uniform(2.3388, 2.3588)) for _ in range(random.randint(2, 9))]
File: 21-Flask-Boilerplate/app/views/main.py
 > reaches line 81, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('points'points)

Vulnerability 5:
File: 21-Flask-Boilerplate/app/views/user.py
 > User input at line 24, trigger word ".data": 
	user = models.User(name=form.name.data, surname=form.surname.data, phone=form.phone.data, email=form.email.data, confirmation=False, password=form.password.data)
Reassigned in: 
	File: 21-Flask-Boilerplate/app/views/user.py
	 > Line 39: token = ts.dumps(user.email,salt='email-confirm-key')
File: 21-Flask-Boilerplate/app/views/user.py
 > reaches line 41, trigger word "url_for(": 
	confirmUrl = url_for('userbp.confirm',token=token, _external=True)

Vulnerability 6:
File: 21-Flask-Boilerplate/app/views/user.py
 > User input at line 24, trigger word ".data": 
	user = models.User(name=form.name.data, surname=form.surname.data, phone=form.phone.data, email=form.email.data, confirmation=False, password=form.password.data)
Reassigned in: 
	File: 21-Flask-Boilerplate/app/views/user.py
	 > Line 39: token = ts.dumps(user.email,salt='email-confirm-key')
File: 21-Flask-Boilerplate/app/views/user.py
 > reaches line 43, trigger word "render_template(": 
	html = render_template('email/confirm.html',confirm_url=confirmUrl)

Vulnerability 7:
File: 21-Flask-Boilerplate/app/views/user.py
 > User input at line 118, trigger word ".data": 
	user = models.User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: 21-Flask-Boilerplate/app/views/user.py
	 > Line 124: token = ts.dumps(user.email,salt='password-reset-key')
File: 21-Flask-Boilerplate/app/views/user.py
 > reaches line 126, trigger word "url_for(": 
	resetUrl = url_for('userbp.reset',token=token, _external=True)

Vulnerability 8:
File: 21-Flask-Boilerplate/app/views/user.py
 > User input at line 118, trigger word ".data": 
	user = models.User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: 21-Flask-Boilerplate/app/views/user.py
	 > Line 124: token = ts.dumps(user.email,salt='password-reset-key')
File: 21-Flask-Boilerplate/app/views/user.py
 > reaches line 128, trigger word "render_template(": 
	html = render_template('email/reset.html',reset_url=resetUrl)

Vulnerability 9:
File: 21-Flask-Boilerplate/app/forms/user.py
 > User input at line 25, trigger word ".data": 
	check = self.model.query.filter(self.field == field.data).first()
File: 21-Flask-Boilerplate/app/forms/user.py
 > reaches line 25, trigger word "filter(": 
	check = self.model.query.filter(self.field == field.data).first()



ChinaChou/Flask
https://github.com/ChinaChou/Flask
Entry file: Flask/application/debugs.py
Scanned: 2016-10-25 14:55:22.541094
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

extranjero/flask
https://github.com/extranjero/flask
Entry file: flask/app/__init__.py
Scanned: 2016-10-25 14:55:23.878824
Vulnerability 1:
File: flask/app/handlers/subjects.py
 > User input at line 22, trigger word "get(": 
	subject = Subject.query.get(id)
Reassigned in: 
	File: flask/app/handlers/subjects.py
	 > Line 23: subject.name = request.json.get('name', subject.name)
File: flask/app/handlers/subjects.py
 > reaches line 25, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(subject.dict())

Vulnerability 2:
File: flask/app/handlers/students.py
 > User input at line 22, trigger word "get(": 
	student = Student.query.get(id)
Reassigned in: 
	File: flask/app/handlers/students.py
	 > Line 23: student.name = request.json.get('name', student.name)
File: flask/app/handlers/students.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(student.dict())

Vulnerability 3:
File: flask/app/handlers/marks.py
 > User input at line 15, trigger word "get(": 
	mark = Mark.query.get(id)
File: flask/app/handlers/marks.py
 > reaches line 16, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(mark.dict())

Vulnerability 4:
File: flask/app/handlers/marks.py
 > User input at line 20, trigger word "get(": 
	mark = Mark.query.get(id)
Reassigned in: 
	File: flask/app/handlers/marks.py
	 > Line 21: mark.student_id = request.json.get('student_id', mark.student_id)
	File: flask/app/handlers/marks.py
	 > Line 22: mark.subject_id = request.json.get('subject_id', mark.subject_id)
	File: flask/app/handlers/marks.py
	 > Line 23: mark.mark = request.json.get('mark', mark.mark)
File: flask/app/handlers/marks.py
 > reaches line 25, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(mark.dict())



aolSvt/flask
https://github.com/aolSvt/flask
Entry file: flask/flask/xmas.py
Scanned: 2016-10-25 14:55:25.257430
Vulnerability 1:
File: flask/flask/route.py
 > User input at line 16, trigger word "form[": 
	santa_name = request.form['name']
Reassigned in: 
	File: flask/flask/route.py
	 > Line 21: santa_dict = 'name''index''address''email'santa_namesanta_indexsanta_addresssanta_email
File: flask/flask/route.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify(santa_dict), 200)

Vulnerability 2:
File: flask/flask/route.py
 > User input at line 17, trigger word "form[": 
	santa_index = request.form['index']
Reassigned in: 
	File: flask/flask/route.py
	 > Line 21: santa_dict = 'name''index''address''email'santa_namesanta_indexsanta_addresssanta_email
File: flask/flask/route.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify(santa_dict), 200)

Vulnerability 3:
File: flask/flask/route.py
 > User input at line 18, trigger word "form[": 
	santa_address = request.form['address']
Reassigned in: 
	File: flask/flask/route.py
	 > Line 21: santa_dict = 'name''index''address''email'santa_namesanta_indexsanta_addresssanta_email
File: flask/flask/route.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify(santa_dict), 200)

Vulnerability 4:
File: flask/flask/route.py
 > User input at line 19, trigger word "form[": 
	santa_email = request.form['email']
Reassigned in: 
	File: flask/flask/route.py
	 > Line 21: santa_dict = 'name''index''address''email'santa_namesanta_indexsanta_addresssanta_email
File: flask/flask/route.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify(santa_dict), 200)



ShoJinto/flask
https://github.com/ShoJinto/flask
Entry file: flask/flaskr/flaskr.py
Scanned: 2016-10-25 14:55:26.514529
No vulnerabilities found.


jhn316/Flask
https://github.com/jhn316/Flask
Entry file: None
Scanned: 2016-10-25 14:55:33.690747
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bh45k4r/flask
https://github.com/bh45k4r/flask
Entry file: flask/http_echo_server/http_echo_server.py
Scanned: 2016-10-25 14:55:34.977119
No vulnerabilities found.


lhw4d4/flask
https://github.com/lhw4d4/flask
Entry file: None
Scanned: 2016-10-25 14:55:44.709996
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chenyuntc/flask
https://github.com/chenyuntc/flask
Entry file: None
Scanned: 2016-10-25 14:55:45.230521
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Gmingming/Flask
https://github.com/Gmingming/Flask
Entry file: None
Scanned: 2016-10-25 14:55:46.265450
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gd452/flask
https://github.com/gd452/flask
Entry file: None
Scanned: 2016-10-25 14:55:46.798446
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

llh335/flask
https://github.com/llh335/flask
Entry file: None
Scanned: 2016-10-25 14:55:47.328446
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tahmidshahriar/flask
https://github.com/tahmidshahriar/flask
Entry file: None
Scanned: 2016-10-25 14:55:47.841934
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

vstorm/Flask
https://github.com/vstorm/Flask
Entry file: None
Scanned: 2016-10-25 14:55:48.385942
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Neo0/flask
https://github.com/Neo0/flask
Entry file: None
Scanned: 2016-10-25 14:55:48.919458
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Berarik/Flask
https://github.com/Berarik/Flask
Entry file: None
Scanned: 2016-10-25 14:55:49.453921
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

seeInside/Flask
https://github.com/seeInside/Flask
Entry file: None
Scanned: 2016-10-25 14:55:50.082534
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

paulmin55/flask
https://github.com/paulmin55/flask
Entry file: None
Scanned: 2016-10-25 14:55:50.594947
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

TwilioDevEd/airtng-flask
https://github.com/TwilioDevEd/airtng-flask
Entry file: airtng-flask/airtng_flask/__init__.py
Scanned: 2016-10-25 14:55:55.948136
Vulnerability 1:
File: airtng-flask/airtng_flask/views.py
 > User input at line 51, trigger word ".data": 
	candidate_user = User.query.filter(User.email == form.email.data).first()
File: airtng-flask/airtng_flask/views.py
 > reaches line 51, trigger word "filter(": 
	candidate_user = User.query.filter(User.email == form.email.data).first()

Vulnerability 2:
File: airtng-flask/airtng_flask/views.py
 > User input at line 131, trigger word ".data": 
	user = User.query.filter(User.phone_number == form.From.data).first()
File: airtng-flask/airtng_flask/views.py
 > reaches line 131, trigger word "filter(": 
	user = User.query.filter(User.phone_number == form.From.data).first()

Vulnerability 3:
File: airtng-flask/airtng_flask/views.py
 > User input at line 131, trigger word ".data": 
	user = User.query.filter(User.phone_number == form.From.data).first()
File: airtng-flask/airtng_flask/views.py
 > reaches line 132, trigger word "filter(": 
	reservation = Reservation.query.filter(Reservation.status == 'pending' and Reservation.vacation_property.host.id == user.id).first()



tilda-center/flask-tutorial
https://github.com/tilda-center/flask-tutorial
Entry file: flask-tutorial/manage.py
Scanned: 2016-10-25 14:55:57.390206
No vulnerabilities found.


smoqadam/PyFladesk
https://github.com/smoqadam/PyFladesk
Entry file: PyFladesk/routes.py
Scanned: 2016-10-25 14:55:58.835770
No vulnerabilities found.


CarlEkerot/flask-orm
https://github.com/CarlEkerot/flask-orm
Entry file: flask-orm/webapp/__init__.py
Scanned: 2016-10-25 14:56:00.938781
No vulnerabilities found.


Maru-zhang/iCCUT-Server-Flask
https://github.com/Maru-zhang/iCCUT-Server-Flask
Entry file: None
Scanned: 2016-10-25 14:56:02.716911
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jeffwidman/flask-uploads
https://github.com/jeffwidman/flask-uploads
Entry file: flask-uploads/tests.py
Scanned: 2016-10-25 14:56:04.402423
No vulnerabilities found.


wdm0006/gitnoc
https://github.com/wdm0006/gitnoc
Entry file: gitnoc/gitnoc/app.py
Scanned: 2016-10-25 14:56:10.248676
Vulnerability 1:
File: gitnoc/gitnoc/services/metrics.py
 > User input at line 65, trigger word "get(": 
	extensions = settings.get('extensions', None)
Reassigned in: 
	File: gitnoc/gitnoc/services/metrics.py
	 > Line 71: df = repo.file_detail(extensions=extensions, ignore_dir=ignore_dir)
	File: gitnoc/gitnoc/services/metrics.py
	 > Line 72: df = df.reset_index(level=2)
	File: gitnoc/gitnoc/services/metrics.py
	 > Line 73: df = df.sort_values(by=['loc'], ascending=False)
File: gitnoc/gitnoc/services/metrics.py
 > reaches line 76, trigger word "replace(": 
	out.append('file_name''loc''owner''extension''last_edit''clean_file_name'df.loc[(idx, 'file')]df.loc[(idx, 'loc')]df.loc[(idx, 'file_owner')]df.loc[(idx, 'ext')]df.loc[(idx, 'last_edit_date')].strftime('%H:%M %d-%m-%Y')df.loc[(idx, 'file')].replace('/', '-'))

Vulnerability 2:
File: gitnoc/gitnoc/services/metrics.py
 > User input at line 66, trigger word "get(": 
	ignore_dir = settings.get('ignore_dir', None)
Reassigned in: 
	File: gitnoc/gitnoc/services/metrics.py
	 > Line 71: df = repo.file_detail(extensions=extensions, ignore_dir=ignore_dir)
	File: gitnoc/gitnoc/services/metrics.py
	 > Line 72: df = df.reset_index(level=2)
	File: gitnoc/gitnoc/services/metrics.py
	 > Line 73: df = df.sort_values(by=['loc'], ascending=False)
File: gitnoc/gitnoc/services/metrics.py
 > reaches line 76, trigger word "replace(": 
	out.append('file_name''loc''owner''extension''last_edit''clean_file_name'df.loc[(idx, 'file')]df.loc[(idx, 'loc')]df.loc[(idx, 'file_owner')]df.loc[(idx, 'ext')]df.loc[(idx, 'last_edit_date')].strftime('%H:%M %d-%m-%Y')df.loc[(idx, 'file')].replace('/', '-'))



parulsingh/FlaskAppCS194
https://github.com/parulsingh/FlaskAppCS194
Entry file: FlaskAppCS194/yelpapp.py
Scanned: 2016-10-25 14:56:21.372166
Vulnerability 1:
File: FlaskAppCS194/yelpapp.py
 > User input at line 89, trigger word "form[": 
	reviews = request.form['reviews']
Reassigned in: 
	File: FlaskAppCS194/yelpapp.py
	 > Line 90: rating = clf.predictRating(reviews)
File: FlaskAppCS194/yelpapp.py
 > reaches line 95, trigger word "execute(": 
	db.execute('INSERT INTO predictions (lyrics, artist) values (?, ?)', [reviews, str(rating)])



BeginMan/flask-timing
https://github.com/BeginMan/flask-timing
Entry file: flask-timing/app.py
Scanned: 2016-10-25 14:56:27.593268
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ibininja/upload_file_python
https://github.com/ibininja/upload_file_python
Entry file: upload_file_python/src/app_display_multiple_images.py
Scanned: 2016-10-25 14:56:28.901590
No vulnerabilities found.


fraoustin/flaskserver
https://github.com/fraoustin/flaskserver
Entry file: None
Scanned: 2016-10-25 14:56:30.275553
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/fraoustin/flaskserver.

yaojf/python3
https://github.com/yaojf/python3
Entry file: python3/app.py
Scanned: 2016-10-25 14:56:32.390376
Vulnerability 1:
File: python3/app.py
 > User input at line 17, trigger word "form[": 
	username = request.form['username']
File: python3/app.py
 > reaches line 20, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('signin-ok.html',username=username)

Vulnerability 2:
File: python3/app.py
 > User input at line 17, trigger word "form[": 
	username = request.form['username']
File: python3/app.py
 > reaches line 21, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('form.html',message='Bad username or password', username=username)



pdonorio/restangulask
https://github.com/pdonorio/restangulask
Entry file: restangulask/frontend/felask/server.py
Scanned: 2016-10-25 14:56:38.036810
Vulnerability 1:
File: restangulask/frontend/felask/forms.py
 > User input at line 50, trigger word "get(": 
	target = get_redirect_target()
Reassigned in: 
	File: restangulask/frontend/felask/forms.py
	 > Line 49: ret_MAYBE_FUNCTION_NAME = redirect(self.next.data)
File: restangulask/frontend/felask/forms.py
 > reaches line 51, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(target or url_for(endpoint,values))

Vulnerability 2:
File: restangulask/frontend/felask/forms.py
 > User input at line 50, trigger word "get(": 
	target = get_redirect_target()
Reassigned in: 
	File: restangulask/frontend/felask/forms.py
	 > Line 49: ret_MAYBE_FUNCTION_NAME = redirect(self.next.data)
File: restangulask/frontend/felask/forms.py
 > reaches line 51, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(target or url_for(endpoint,values))



CodeSelfStudy/flask_mongoengine_example
https://github.com/CodeSelfStudy/flask_mongoengine_example
Entry file: flask_mongoengine_example/app.py
Scanned: 2016-10-25 14:56:39.361239
Vulnerability 1:
File: flask_mongoengine_example/app.py
 > User input at line 20, trigger word "get(": 
	page = Page.objects.get(id=page_id)
File: flask_mongoengine_example/app.py
 > reaches line 21, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('page.html',page=page)

Vulnerability 2:
File: flask_mongoengine_example/app.py
 > User input at line 34, trigger word "get(": 
	profile = Profile.objects.get(id=profile_id)
File: flask_mongoengine_example/app.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('profiles/profile.html',profile=profile)



brennv/flaskr-dataset
https://github.com/brennv/flaskr-dataset
Entry file: flaskr-dataset/flaskr.py
Scanned: 2016-10-25 14:56:41.295474
No vulnerabilities found.


weex/basic-flask21
https://github.com/weex/basic-flask21
Entry file: basic-flask21/server.py
Scanned: 2016-10-25 14:56:42.562274
No vulnerabilities found.


c0deTalk/flask-deploy
https://github.com/c0deTalk/flask-deploy
Entry file: None
Scanned: 2016-10-25 14:56:43.816258
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/c0deTalk/flask-deploy.

jinpark/flask-fts
https://github.com/jinpark/flask-fts
Entry file: flask-fts/app.py
Scanned: 2016-10-25 14:56:46.107264
Vulnerability 1:
File: flask-fts/app.py
 > User input at line 65, trigger word "form[": 
	search_term = request.form['search_term']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 66: results = Document.query.search(search_term)
	File: flask-fts/app.py
	 > Line 69: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
File: flask-fts/app.py
 > reaches line 67, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search_results.html',results=results, search_term=search_term)

Vulnerability 2:
File: flask-fts/app.py
 > User input at line 74, trigger word "form[": 
	search_term = request.form['search_term']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 79, trigger word "filter(": 
	results = search(db.session.query(Place).filter(func.ST_DWithin(Place.point, point, float(distance))), search_term)

Vulnerability 3:
File: flask-fts/app.py
 > User input at line 75, trigger word "form[": 
	distance = request.form['distance']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 79, trigger word "filter(": 
	results = search(db.session.query(Place).filter(func.ST_DWithin(Place.point, point, float(distance))), search_term)

Vulnerability 4:
File: flask-fts/app.py
 > User input at line 76, trigger word "form[": 
	latitude = request.form['latitude']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 78: point = WKTElement('POINT({0} {1})'.format(latitude, longitude),srid=4326)
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 79, trigger word "filter(": 
	results = search(db.session.query(Place).filter(func.ST_DWithin(Place.point, point, float(distance))), search_term)

Vulnerability 5:
File: flask-fts/app.py
 > User input at line 77, trigger word "form[": 
	longitude = request.form['longitude']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 78: point = WKTElement('POINT({0} {1})'.format(latitude, longitude),srid=4326)
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 79, trigger word "filter(": 
	results = search(db.session.query(Place).filter(func.ST_DWithin(Place.point, point, float(distance))), search_term)

Vulnerability 6:
File: flask-fts/app.py
 > User input at line 74, trigger word "form[": 
	search_term = request.form['search_term']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 80, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search_place_results.html',results=results, search_term=search_term, distance=distance, latitude=latitude, longitude=longitude)

Vulnerability 7:
File: flask-fts/app.py
 > User input at line 75, trigger word "form[": 
	distance = request.form['distance']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 80, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search_place_results.html',results=results, search_term=search_term, distance=distance, latitude=latitude, longitude=longitude)

Vulnerability 8:
File: flask-fts/app.py
 > User input at line 76, trigger word "form[": 
	latitude = request.form['latitude']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 78: point = WKTElement('POINT({0} {1})'.format(latitude, longitude),srid=4326)
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 80, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search_place_results.html',results=results, search_term=search_term, distance=distance, latitude=latitude, longitude=longitude)

Vulnerability 9:
File: flask-fts/app.py
 > User input at line 77, trigger word "form[": 
	longitude = request.form['longitude']
Reassigned in: 
	File: flask-fts/app.py
	 > Line 78: point = WKTElement('POINT({0} {1})'.format(latitude, longitude),srid=4326)
	File: flask-fts/app.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('search_place.html')
File: flask-fts/app.py
 > reaches line 80, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search_place_results.html',results=results, search_term=search_term, distance=distance, latitude=latitude, longitude=longitude)



breakbase/flask-cent
https://github.com/breakbase/flask-cent
Entry file: flask-cent/tests.py
Scanned: 2016-10-25 14:56:47.500942
No vulnerabilities found.


ecerami/hello_flask
https://github.com/ecerami/hello_flask
Entry file: hello_flask/app.py
Scanned: 2016-10-25 14:56:48.764316
No vulnerabilities found.


wq1308786830/flaskr
https://github.com/wq1308786830/flaskr
Entry file: None
Scanned: 2016-10-25 14:56:50.635410
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/wq1308786830/flaskr.

danparshall/flaskmilestone
https://github.com/danparshall/flaskmilestone
Entry file: flaskmilestone/app.py
Scanned: 2016-10-25 14:56:52.000179
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sabertwilight/flasky
https://github.com/sabertwilight/flasky
Entry file: flasky/flasky/app/__init__.py
Scanned: 2016-10-25 14:56:55.881811
No vulnerabilities found.


jj199611/flaskr
https://github.com/jj199611/flaskr
Entry file: None
Scanned: 2016-10-25 14:56:56.424576
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jj199611/flaskr.

goosling/flaskapp
https://github.com/goosling/flaskapp
Entry file: flaskapp/urltest.py
Scanned: 2016-10-25 14:56:57.719744
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

FredericoVieira/flaskapp
https://github.com/FredericoVieira/flaskapp
Entry file: flaskapp/app/__init__.py
Scanned: 2016-10-25 14:56:59.177336
Vulnerability 1:
File: flaskapp/app/insertdata/views.py
 > User input at line 21, trigger word ".data": 
	firstName = str(form.firstName.data)
File: flaskapp/app/insertdata/views.py
 > reaches line 27, trigger word "execute(": 
	cursor.execute('INSERT INTO users (firstName, lastName, phone) VALUES ('%s', '%s', '%s')' % (firstName, lastName, phone))

Vulnerability 2:
File: flaskapp/app/insertdata/views.py
 > User input at line 22, trigger word ".data": 
	lastName = str(form.lastName.data)
File: flaskapp/app/insertdata/views.py
 > reaches line 27, trigger word "execute(": 
	cursor.execute('INSERT INTO users (firstName, lastName, phone) VALUES ('%s', '%s', '%s')' % (firstName, lastName, phone))

Vulnerability 3:
File: flaskapp/app/insertdata/views.py
 > User input at line 23, trigger word ".data": 
	phone = str(form.phone.data)
File: flaskapp/app/insertdata/views.py
 > reaches line 27, trigger word "execute(": 
	cursor.execute('INSERT INTO users (firstName, lastName, phone) VALUES ('%s', '%s', '%s')' % (firstName, lastName, phone))

Vulnerability 4:
File: flaskapp/app/insertdata/views.py
 > User input at line 21, trigger word ".data": 
	firstName = str(form.firstName.data)
File: flaskapp/app/insertdata/views.py
 > reaches line 30, trigger word "flash(": 
	flash('Dados inseridos com sucesso! First Name = "%s", Last Name = "%s", Phone = "%s"' % (firstName, lastName, phone))

Vulnerability 5:
File: flaskapp/app/insertdata/views.py
 > User input at line 22, trigger word ".data": 
	lastName = str(form.lastName.data)
File: flaskapp/app/insertdata/views.py
 > reaches line 30, trigger word "flash(": 
	flash('Dados inseridos com sucesso! First Name = "%s", Last Name = "%s", Phone = "%s"' % (firstName, lastName, phone))

Vulnerability 6:
File: flaskapp/app/insertdata/views.py
 > User input at line 23, trigger word ".data": 
	phone = str(form.phone.data)
File: flaskapp/app/insertdata/views.py
 > reaches line 30, trigger word "flash(": 
	flash('Dados inseridos com sucesso! First Name = "%s", Last Name = "%s", Phone = "%s"' % (firstName, lastName, phone))



dogom/flasky
https://github.com/dogom/flasky
Entry file: flasky/hello.py
Scanned: 2016-10-25 14:57:00.497624
No vulnerabilities found.


alex-marmot/flaskr
https://github.com/alex-marmot/flaskr
Entry file: None
Scanned: 2016-10-25 14:57:01.058126
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/alex-marmot/flaskr.

kai1/flasktest
https://github.com/kai1/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 14:57:02.627573
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

willianribeiro/flaskr
https://github.com/willianribeiro/flaskr
Entry file: None
Scanned: 2016-10-25 14:57:03.174986
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/willianribeiro/flaskr.

lz1988/flaskweb
https://github.com/lz1988/flaskweb
Entry file: flaskweb/flaskr/flaskr.py
Scanned: 2016-10-25 14:57:09.411711
No vulnerabilities found.


StuartChristie/Flasky
https://github.com/StuartChristie/Flasky
Entry file: Flasky/untitled.py
Scanned: 2016-10-25 14:57:10.701712
No vulnerabilities found.


buchenglei/flaskr
https://github.com/buchenglei/flaskr
Entry file: None
Scanned: 2016-10-25 14:57:11.223012
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/buchenglei/flaskr.

cteeeri/flaskblueprint
https://github.com/cteeeri/flaskblueprint
Entry file: flaskblueprint/app/__init__.py
Scanned: 2016-10-25 14:57:12.457312
No vulnerabilities found.


KevinFuU/flasky
https://github.com/KevinFuU/flasky
Entry file: flasky/hello1.py
Scanned: 2016-10-25 14:57:14.294197
Vulnerability 1:
File: flasky/tests/test_client.py
 > User input at line 22, trigger word "get(": 
	response = self.client.get(url_for('main.index'))
File: flasky/tests/test_client.py
 > reaches line 22, trigger word "url_for(": 
	response = self.client.get(url_for('main.index'))

Vulnerability 2:
File: flasky/tests/test_client.py
 > User input at line 47, trigger word "get(": 
	response = self.client.get(url_for('auth.confirm',token=token),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 27, trigger word "url_for(": 
	response = self.client.post(url_for('auth.register'),data='email''username''password''password2''john@example.com''john''cat''cat')

Vulnerability 3:
File: flasky/tests/test_client.py
 > User input at line 53, trigger word "get(": 
	response = self.client.get(url_for('auth.logout'),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 27, trigger word "url_for(": 
	response = self.client.post(url_for('auth.register'),data='email''username''password''password2''john@example.com''john''cat''cat')

Vulnerability 4:
File: flasky/tests/test_client.py
 > User input at line 47, trigger word "get(": 
	response = self.client.get(url_for('auth.confirm',token=token),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 36, trigger word "url_for(": 
	response = self.client.post(url_for('auth.login'),data='email''password''john@example.com''cat', follow_redirects=True)

Vulnerability 5:
File: flasky/tests/test_client.py
 > User input at line 53, trigger word "get(": 
	response = self.client.get(url_for('auth.logout'),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 36, trigger word "url_for(": 
	response = self.client.post(url_for('auth.login'),data='email''password''john@example.com''cat', follow_redirects=True)

Vulnerability 6:
File: flasky/tests/test_client.py
 > User input at line 47, trigger word "get(": 
	response = self.client.get(url_for('auth.confirm',token=token),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 47, trigger word "url_for(": 
	response = self.client.get(url_for('auth.confirm',token=token),follow_redirects=True)

Vulnerability 7:
File: flasky/tests/test_client.py
 > User input at line 53, trigger word "get(": 
	response = self.client.get(url_for('auth.logout'),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 47, trigger word "url_for(": 
	response = self.client.get(url_for('auth.confirm',token=token),follow_redirects=True)

Vulnerability 8:
File: flasky/tests/test_client.py
 > User input at line 47, trigger word "get(": 
	response = self.client.get(url_for('auth.confirm',token=token),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 53, trigger word "url_for(": 
	response = self.client.get(url_for('auth.logout'),follow_redirects=True)

Vulnerability 9:
File: flasky/tests/test_client.py
 > User input at line 53, trigger word "get(": 
	response = self.client.get(url_for('auth.logout'),follow_redirects=True)
File: flasky/tests/test_client.py
 > reaches line 53, trigger word "url_for(": 
	response = self.client.get(url_for('auth.logout'),follow_redirects=True)

Vulnerability 10:
File: flasky/tests/test_api.py
 > User input at line 41, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),content_type='application/json')
File: flasky/tests/test_api.py
 > reaches line 41, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),content_type='application/json')

Vulnerability 11:
File: flasky/tests/test_api.py
 > User input at line 55, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('john@example.com', 'dog'))
File: flasky/tests/test_api.py
 > reaches line 55, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('john@example.com', 'dog'))

Vulnerability 12:
File: flasky/tests/test_api.py
 > User input at line 70, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))
File: flasky/tests/test_api.py
 > reaches line 70, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))

Vulnerability 13:
File: flasky/tests/test_api.py
 > User input at line 76, trigger word "get(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 70, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))

Vulnerability 14:
File: flasky/tests/test_api.py
 > User input at line 80, trigger word ".data": 
	json_response = json.loads(response.data.decode('utf-8'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 82: token = json_response['token']
File: flasky/tests/test_api.py
 > reaches line 70, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))

Vulnerability 15:
File: flasky/tests/test_api.py
 > User input at line 85, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))
File: flasky/tests/test_api.py
 > reaches line 70, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))

Vulnerability 16:
File: flasky/tests/test_api.py
 > User input at line 70, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))
File: flasky/tests/test_api.py
 > reaches line 76, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 17:
File: flasky/tests/test_api.py
 > User input at line 76, trigger word "get(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 76, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 18:
File: flasky/tests/test_api.py
 > User input at line 80, trigger word ".data": 
	json_response = json.loads(response.data.decode('utf-8'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 82: token = json_response['token']
File: flasky/tests/test_api.py
 > reaches line 76, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 19:
File: flasky/tests/test_api.py
 > User input at line 85, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))
File: flasky/tests/test_api.py
 > reaches line 76, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 20:
File: flasky/tests/test_api.py
 > User input at line 70, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('bad-token', ''))
File: flasky/tests/test_api.py
 > reaches line 85, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))

Vulnerability 21:
File: flasky/tests/test_api.py
 > User input at line 76, trigger word "get(": 
	response = self.client.get(url_for('api.get_token'),headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 85, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))

Vulnerability 22:
File: flasky/tests/test_api.py
 > User input at line 80, trigger word ".data": 
	json_response = json.loads(response.data.decode('utf-8'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 82: token = json_response['token']
File: flasky/tests/test_api.py
 > reaches line 85, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))

Vulnerability 23:
File: flasky/tests/test_api.py
 > User input at line 85, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))
File: flasky/tests/test_api.py
 > reaches line 85, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers(token, ''))

Vulnerability 24:
File: flasky/tests/test_api.py
 > User input at line 91, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('', ''))
File: flasky/tests/test_api.py
 > reaches line 91, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('', ''))

Vulnerability 25:
File: flasky/tests/test_api.py
 > User input at line 106, trigger word "get(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 106, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_posts'),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 26:
File: flasky/tests/test_api.py
 > User input at line 133, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 121, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body'''))

Vulnerability 27:
File: flasky/tests/test_api.py
 > User input at line 137, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 121, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body'''))

Vulnerability 28:
File: flasky/tests/test_api.py
 > User input at line 149, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 121, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body'''))

Vulnerability 29:
File: flasky/tests/test_api.py
 > User input at line 159, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 121, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body'''))

Vulnerability 30:
File: flasky/tests/test_api.py
 > User input at line 133, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 128, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''body of the *blog* post'))

Vulnerability 31:
File: flasky/tests/test_api.py
 > User input at line 137, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 128, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''body of the *blog* post'))

Vulnerability 32:
File: flasky/tests/test_api.py
 > User input at line 149, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 128, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''body of the *blog* post'))

Vulnerability 33:
File: flasky/tests/test_api.py
 > User input at line 159, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 128, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post'),headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''body of the *blog* post'))

Vulnerability 34:
File: flasky/tests/test_api.py
 > User input at line 133, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 149, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 35:
File: flasky/tests/test_api.py
 > User input at line 137, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 149, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 36:
File: flasky/tests/test_api.py
 > User input at line 149, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 149, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 37:
File: flasky/tests/test_api.py
 > User input at line 159, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 149, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 38:
File: flasky/tests/test_api.py
 > User input at line 133, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 159, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 39:
File: flasky/tests/test_api.py
 > User input at line 137, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 159, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 40:
File: flasky/tests/test_api.py
 > User input at line 149, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 159, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 41:
File: flasky/tests/test_api.py
 > User input at line 159, trigger word "get(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 137: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
	File: flasky/tests/test_api.py
	 > Line 169: response = self.client.put(url,headers=self.get_api_headers('john@example.com', 'cat'), data=json.dumps('body''updated body'))
File: flasky/tests/test_api.py
 > reaches line 159, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user_followed_posts',id=u.id),headers=self.get_api_headers('john@example.com', 'cat'))

Vulnerability 42:
File: flasky/tests/test_api.py
 > User input at line 191, trigger word "get(": 
	response = self.client.get(url_for('api.get_user',id=u1.id),headers=self.get_api_headers('susan@example.com', 'dog'))
File: flasky/tests/test_api.py
 > reaches line 191, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user',id=u1.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 43:
File: flasky/tests/test_api.py
 > User input at line 197, trigger word "get(": 
	response = self.client.get(url_for('api.get_user',id=u2.id),headers=self.get_api_headers('susan@example.com', 'dog'))
File: flasky/tests/test_api.py
 > reaches line 191, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user',id=u1.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 44:
File: flasky/tests/test_api.py
 > User input at line 191, trigger word "get(": 
	response = self.client.get(url_for('api.get_user',id=u1.id),headers=self.get_api_headers('susan@example.com', 'dog'))
File: flasky/tests/test_api.py
 > reaches line 197, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user',id=u2.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 45:
File: flasky/tests/test_api.py
 > User input at line 197, trigger word "get(": 
	response = self.client.get(url_for('api.get_user',id=u2.id),headers=self.get_api_headers('susan@example.com', 'dog'))
File: flasky/tests/test_api.py
 > reaches line 197, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_user',id=u2.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 46:
File: flasky/tests/test_api.py
 > User input at line 227, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 221, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post_comment',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'), data=json.dumps('body''Good [post](http://example.com)!'))

Vulnerability 47:
File: flasky/tests/test_api.py
 > User input at line 235, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 221, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post_comment',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'), data=json.dumps('body''Good [post](http://example.com)!'))

Vulnerability 48:
File: flasky/tests/test_api.py
 > User input at line 250, trigger word "get(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 221, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post_comment',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'), data=json.dumps('body''Good [post](http://example.com)!'))

Vulnerability 49:
File: flasky/tests/test_api.py
 > User input at line 259, trigger word "get(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 221, trigger word "url_for(": 
	response = self.client.post(url_for('api.new_post_comment',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'), data=json.dumps('body''Good [post](http://example.com)!'))

Vulnerability 50:
File: flasky/tests/test_api.py
 > User input at line 227, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 250, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 51:
File: flasky/tests/test_api.py
 > User input at line 235, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 250, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 52:
File: flasky/tests/test_api.py
 > User input at line 250, trigger word "get(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 250, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 53:
File: flasky/tests/test_api.py
 > User input at line 259, trigger word "get(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 250, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 54:
File: flasky/tests/test_api.py
 > User input at line 227, trigger word "get(": 
	url = response.headers.get('Location')
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 259, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 55:
File: flasky/tests/test_api.py
 > User input at line 235, trigger word "get(": 
	response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 259, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 56:
File: flasky/tests/test_api.py
 > User input at line 250, trigger word "get(": 
	response = self.client.get(url_for('api.get_post_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 259, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 57:
File: flasky/tests/test_api.py
 > User input at line 259, trigger word "get(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))
Reassigned in: 
	File: flasky/tests/test_api.py
	 > Line 235: response = self.client.get(url,headers=self.get_api_headers('john@example.com', 'cat'))
File: flasky/tests/test_api.py
 > reaches line 259, trigger word "url_for(": 
	response = self.client.get(url_for('api.get_comments',id=post.id),headers=self.get_api_headers('susan@example.com', 'dog'))

Vulnerability 58:
File: flasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: flasky/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 59:
File: flasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: flasky/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 60:
File: flasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: flasky/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 61:
File: flasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flasky/app/api_1_0/users.py
	 > Line 23: next = None
File: flasky/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 62:
File: flasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flasky/app/api_1_0/users.py
	 > Line 23: next = None
File: flasky/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 63:
File: flasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flasky/app/api_1_0/users.py
	 > Line 23: next = None
File: flasky/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 64:
File: flasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flasky/app/api_1_0/users.py
	 > Line 45: next = None
File: flasky/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 65:
File: flasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flasky/app/api_1_0/users.py
	 > Line 45: next = None
File: flasky/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 66:
File: flasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flasky/app/api_1_0/users.py
	 > Line 45: next = None
File: flasky/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 67:
File: flasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: flasky/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 68:
File: flasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: flasky/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 69:
File: flasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: flasky/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 70:
File: flasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: flasky/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 71:
File: flasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: flasky/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 72:
File: flasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: flasky/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 73:
File: flasky/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/main/views.py
	 > Line 55: posts = pagination.items
	File: flasky/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 74:
File: flasky/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 45: show_followed = False
	File: flasky/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 75:
File: flasky/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky/app/main/views.py
	 > Line 67: posts = pagination.items
File: flasky/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 76:
File: flasky/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flasky/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/main/views.py
	 > Line 134: comments = pagination.items
	File: flasky/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flasky/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 77:
File: flasky/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flasky/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flasky/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 78:
File: flasky/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flasky/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flasky/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 79:
File: flasky/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky/app/main/views.py
	 > Line 246: comments = pagination.items
File: flasky/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



chipmakk/flaskproject
https://github.com/chipmakk/flaskproject
Entry file: flaskproject/server2.py
Scanned: 2016-10-25 14:57:23.670682
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

githubfun/flaskr
https://github.com/githubfun/flaskr
Entry file: None
Scanned: 2016-10-25 14:57:28.208866
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/githubfun/flaskr.

sachprem/flaskdemosac
https://github.com/sachprem/flaskdemosac
Entry file: flaskdemosac/app.py
Scanned: 2016-10-25 14:57:30.614654
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

joe8767/flaskr
https://github.com/joe8767/flaskr
Entry file: None
Scanned: 2016-10-25 14:57:31.146534
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/joe8767/flaskr.

milinbhakta/flaskmaterialdesign
https://github.com/milinbhakta/flaskmaterialdesign
Entry file: flaskmaterialdesign/venv/Lib/site-packages/flask/sessions.py
Scanned: 2016-10-25 14:57:40.314079
No vulnerabilities found.


Hellemos/flaskapp
https://github.com/Hellemos/flaskapp
Entry file: flaskapp/routes.py
Scanned: 2016-10-25 14:57:48.230451
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskapp/flaskapp_env/lib/python2.7/sre_compile.py

ssssergey/flaskengine
https://github.com/ssssergey/flaskengine
Entry file: flaskengine/app/__init__.py
Scanned: 2016-10-25 14:57:49.990002
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

davidkurkov/flasktaskr
https://github.com/davidkurkov/flasktaskr
Entry file: flasktaskr/views.py
Scanned: 2016-10-25 14:57:51.398339
No vulnerabilities found.


a1GoXplorer/flaskmodellingpractice
https://github.com/a1GoXplorer/flaskmodellingpractice
Entry file: flaskmodellingpractice/flaskr/flaskr.py
Scanned: 2016-10-25 14:57:58.430752
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskmodellingpractice/flaskr/venv/lib/python2.7/sre_compile.py

stepsame/flaskq
https://github.com/stepsame/flaskq
Entry file: flaskq/app/__init__.py
Scanned: 2016-10-25 14:58:01.987540
Vulnerability 1:
File: flaskq/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 16: pagination = user.questions.order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_QUESTIONS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 19: questions = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_user_questions',page=page - 1, _external=True)

Vulnerability 2:
File: flaskq/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 16: pagination = user.questions.order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_QUESTIONS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 19: questions = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_user_questions',page=page + 1, _external=True)

Vulnerability 3:
File: flaskq/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 16: pagination = user.questions.order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_QUESTIONS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 19: questions = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('questions''prev''next''count'[question.to_json() for question in questions]prevnextpagination.total)

Vulnerability 4:
File: flaskq/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 38: pagination = user.answers.order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 41: answers = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_user_answers',page=page - 1, _external=True)

Vulnerability 5:
File: flaskq/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 38: pagination = user.answers.order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 41: answers = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_user_answers',page=page + 1, _external=True)

Vulnerability 6:
File: flaskq/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 38: pagination = user.answers.order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 41: answers = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('answers''prev''next''count'[answer.to_json() for answer in answers]prevnextpagination.total)

Vulnerability 7:
File: flaskq/app/api_1_0/users.py
 > User input at line 59, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 60: pagination = user.followed_activities.order_by(Activity.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ACTIVITIES_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 63: activities = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 64: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 68: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 66, trigger word "url_for(": 
	prev = url_for('api.get_user_followed_activities',page=page - 1, _external=True)

Vulnerability 8:
File: flaskq/app/api_1_0/users.py
 > User input at line 59, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 60: pagination = user.followed_activities.order_by(Activity.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ACTIVITIES_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 63: activities = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 64: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 68: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 70, trigger word "url_for(": 
	next = url_for('api.get_user_followed_activities',page=page + 1, _external=True)

Vulnerability 9:
File: flaskq/app/api_1_0/users.py
 > User input at line 59, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/users.py
	 > Line 60: pagination = user.followed_activities.order_by(Activity.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ACTIVITIES_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/users.py
	 > Line 63: activities = pagination.items
	File: flaskq/app/api_1_0/users.py
	 > Line 64: prev = None
	File: flaskq/app/api_1_0/users.py
	 > Line 68: next = None
File: flaskq/app/api_1_0/users.py
 > reaches line 72, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('activities''prev''next''count'[activity.object.to_json() for activity in activities]prevnextpagination.total)

Vulnerability 10:
File: flaskq/app/api_1_0/answers.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/answers.py
	 > Line 12: pagination = Answer.query.order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/answers.py
	 > Line 15: answers = pagination.items
	File: flaskq/app/api_1_0/answers.py
	 > Line 16: prev = None
	File: flaskq/app/api_1_0/answers.py
	 > Line 19: next = None
File: flaskq/app/api_1_0/answers.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_answers',page=page - 1, _external=True)

Vulnerability 11:
File: flaskq/app/api_1_0/answers.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/answers.py
	 > Line 12: pagination = Answer.query.order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/answers.py
	 > Line 15: answers = pagination.items
	File: flaskq/app/api_1_0/answers.py
	 > Line 16: prev = None
	File: flaskq/app/api_1_0/answers.py
	 > Line 19: next = None
File: flaskq/app/api_1_0/answers.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_answers',page=page + 1, _external=True)

Vulnerability 12:
File: flaskq/app/api_1_0/answers.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/answers.py
	 > Line 12: pagination = Answer.query.order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/answers.py
	 > Line 15: answers = pagination.items
	File: flaskq/app/api_1_0/answers.py
	 > Line 16: prev = None
	File: flaskq/app/api_1_0/answers.py
	 > Line 19: next = None
File: flaskq/app/api_1_0/answers.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('answers''prev''next''count'[answer.to_json() for answer in answers]prevnextpagination.total)

Vulnerability 13:
File: flaskq/app/api_1_0/answers.py
 > User input at line 32, trigger word "get(": 
	answer = Answer.query.get(id)
File: flaskq/app/api_1_0/answers.py
 > reaches line 33, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(answer.to_json())

Vulnerability 14:
File: flaskq/app/api_1_0/answers.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/answers.py
	 > Line 40: pagination = question.answers.order_by(Answer.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/answers.py
	 > Line 43: answers = pagination.items
	File: flaskq/app/api_1_0/answers.py
	 > Line 44: prev = None
	File: flaskq/app/api_1_0/answers.py
	 > Line 47: next = None
File: flaskq/app/api_1_0/answers.py
 > reaches line 46, trigger word "url_for(": 
	prev = url_for('api.get_question_answers',page=page - 1, _external=True)

Vulnerability 15:
File: flaskq/app/api_1_0/answers.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/answers.py
	 > Line 40: pagination = question.answers.order_by(Answer.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/answers.py
	 > Line 43: answers = pagination.items
	File: flaskq/app/api_1_0/answers.py
	 > Line 44: prev = None
	File: flaskq/app/api_1_0/answers.py
	 > Line 47: next = None
File: flaskq/app/api_1_0/answers.py
 > reaches line 49, trigger word "url_for(": 
	next = url_for('api.get_question_answers',page=page + 1, _external=True)

Vulnerability 16:
File: flaskq/app/api_1_0/answers.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/answers.py
	 > Line 40: pagination = question.answers.order_by(Answer.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/answers.py
	 > Line 43: answers = pagination.items
	File: flaskq/app/api_1_0/answers.py
	 > Line 44: prev = None
	File: flaskq/app/api_1_0/answers.py
	 > Line 47: next = None
File: flaskq/app/api_1_0/answers.py
 > reaches line 50, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('answers''prev''next''count'[answer.to_json() for answer in answers]prevnextpagination.total)

Vulnerability 17:
File: flaskq/app/api_1_0/questions.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/questions.py
	 > Line 12: pagination = Question.query.paginate(page,per_page=current_app.config['FLASKQ_QUESTIONS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/questions.py
	 > Line 15: questions = pagination.items
	File: flaskq/app/api_1_0/questions.py
	 > Line 16: prev = None
	File: flaskq/app/api_1_0/questions.py
	 > Line 19: next = None
File: flaskq/app/api_1_0/questions.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_questions',page=page - 1, _external=True)

Vulnerability 18:
File: flaskq/app/api_1_0/questions.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/questions.py
	 > Line 12: pagination = Question.query.paginate(page,per_page=current_app.config['FLASKQ_QUESTIONS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/questions.py
	 > Line 15: questions = pagination.items
	File: flaskq/app/api_1_0/questions.py
	 > Line 16: prev = None
	File: flaskq/app/api_1_0/questions.py
	 > Line 19: next = None
File: flaskq/app/api_1_0/questions.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_questions',page=page + 1, _external=True)

Vulnerability 19:
File: flaskq/app/api_1_0/questions.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/questions.py
	 > Line 12: pagination = Question.query.paginate(page,per_page=current_app.config['FLASKQ_QUESTIONS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/questions.py
	 > Line 15: questions = pagination.items
	File: flaskq/app/api_1_0/questions.py
	 > Line 16: prev = None
	File: flaskq/app/api_1_0/questions.py
	 > Line 19: next = None
File: flaskq/app/api_1_0/questions.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('questions''prev''next''count'[question.to_json() for question in questions]prevnextpagination.total)

Vulnerability 20:
File: flaskq/app/api_1_0/questions.py
 > User input at line 32, trigger word "get(": 
	question = Question.query.get(id)
File: flaskq/app/api_1_0/questions.py
 > reaches line 33, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(question.to_json())

Vulnerability 21:
File: flaskq/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 22:
File: flaskq/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 23:
File: flaskq/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 24:
File: flaskq/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 39: pagination = question.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_question_comments',page=page - 1, _external=True)

Vulnerability 25:
File: flaskq/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 39: pagination = question.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_question_comments',page=page + 1, _external=True)

Vulnerability 26:
File: flaskq/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 39: pagination = question.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 27:
File: flaskq/app/api_1_0/comments.py
 > User input at line 60, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 61: pagination = answer.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 64: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 65: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 68: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 67, trigger word "url_for(": 
	prev = url_for('api.get_answer_comments',page=page - 1, _external=True)

Vulnerability 28:
File: flaskq/app/api_1_0/comments.py
 > User input at line 60, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 61: pagination = answer.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 64: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 65: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 68: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 70, trigger word "url_for(": 
	next = url_for('api.get_answer_comments',page=page + 1, _external=True)

Vulnerability 29:
File: flaskq/app/api_1_0/comments.py
 > User input at line 60, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/api_1_0/comments.py
	 > Line 61: pagination = answer.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKQ_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskq/app/api_1_0/comments.py
	 > Line 64: comments = pagination.items
	File: flaskq/app/api_1_0/comments.py
	 > Line 65: prev = None
	File: flaskq/app/api_1_0/comments.py
	 > Line 68: next = None
File: flaskq/app/api_1_0/comments.py
 > reaches line 71, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 30:
File: flaskq/app/main/views.py
 > User input at line 52, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/main/views.py
	 > Line 60: pagination = query.order_by(Activity.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKQ_ACTIVITIES_PER_PAGE'], error_out=False)
	File: flaskq/app/main/views.py
	 > Line 63: activities = pagination.items
	File: flaskq/app/main/views.py
	 > Line 51: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskq/app/main/views.py
 > reaches line 65, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, activities=activities, show_followed=show_followed, pagination=pagination, comment_form=comment_form)

Vulnerability 31:
File: flaskq/app/main/views.py
 > User input at line 55, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskq/app/main/views.py
	 > Line 53: show_followed = False
	File: flaskq/app/main/views.py
	 > Line 51: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskq/app/main/views.py
 > reaches line 65, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, activities=activities, show_followed=show_followed, pagination=pagination, comment_form=comment_form)

Vulnerability 32:
File: flaskq/app/main/views.py
 > User input at line 74, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/main/views.py
	 > Line 75: pagination = user.answers.order_by(Answer.timestamp.desc()).paginate(page=page, per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/main/views.py
	 > Line 78: answers = pagination.items
File: flaskq/app/main/views.py
 > reaches line 79, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, answers=answers, pagination=pagination, profile=True)

Vulnerability 33:
File: flaskq/app/main/views.py
 > User input at line 131, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/main/views.py
	 > Line 132: pagination = question.answers.order_by(Answer.ranking.desc()).paginate(page,per_page=current_app.config['FLASKQ_ANSWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/main/views.py
	 > Line 135: answers = pagination.items
File: flaskq/app/main/views.py
 > reaches line 136, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('question.html',questions=[question], answers=answers, pagination=pagination)

Vulnerability 34:
File: flaskq/app/main/views.py
 > User input at line 248, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/main/views.py
	 > Line 249: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKQ_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/main/views.py
	 > Line 252: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskq/app/main/views.py
	 > Line 247: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskq/app/main/views.py
 > reaches line 254, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Follwers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 35:
File: flaskq/app/main/views.py
 > User input at line 266, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskq/app/main/views.py
	 > Line 267: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKQ_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskq/app/main/views.py
	 > Line 270: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskq/app/main/views.py
	 > Line 265: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskq/app/main/views.py
 > reaches line 272, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Follwed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 36:
File: flaskq/app/main/views.py
 > User input at line 339, trigger word "get(": 
	q = request.args.get('q')
File: flaskq/app/main/views.py
 > reaches line 340, trigger word "filter(": 
	questions = Question.query.filter(Question.body.like('%' + q + '%')).all()

Vulnerability 37:
File: flaskq/app/main/views.py
 > User input at line 339, trigger word "get(": 
	q = request.args.get('q')
File: flaskq/app/main/views.py
 > reaches line 341, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('results.html',questions=questions, q=q)



rschmidtz/flaskbook
https://github.com/rschmidtz/flaskbook
Entry file: flaskbook/book/__init__.py
Scanned: 2016-10-25 14:58:04.887903
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

vincent-fei/flaskr
https://github.com/vincent-fei/flaskr
Entry file: None
Scanned: 2016-10-25 14:58:05.451470
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/vincent-fei/flaskr.

milinbhakta/flaskjinja
https://github.com/milinbhakta/flaskjinja
Entry file: flaskjinja/hello.py
Scanned: 2016-10-25 14:58:15.328086
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

chouisbo/flaskdemo
https://github.com/chouisbo/flaskdemo
Entry file: flaskdemo/app/app.py
Scanned: 2016-10-25 14:58:17.258596
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

saucecode/flaskcat
https://github.com/saucecode/flaskcat
Entry file: flaskcat/flaskcat.py
Scanned: 2016-10-25 14:58:18.549245
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wiggitywalt/flasktaskr
https://github.com/wiggitywalt/flasktaskr
Entry file: flasktaskr/project/__init__.py
Scanned: 2016-10-25 14:58:25.133556
No vulnerabilities found.


mcruger/flaskr
https://github.com/mcruger/flaskr
Entry file: None
Scanned: 2016-10-25 14:58:25.644123
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mcruger/flaskr.

zerodaemon/flaskr
https://github.com/zerodaemon/flaskr
Entry file: None
Scanned: 2016-10-25 14:58:26.153462
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zerodaemon/flaskr.

jalp/flaskscaffolding
https://github.com/jalp/flaskscaffolding
Entry file: None
Scanned: 2016-10-25 14:58:27.405492
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jalp/flaskscaffolding.

vbidin/flasktest
https://github.com/vbidin/flasktest
Entry file: flasktest/app/__init__.py
Scanned: 2016-10-25 14:58:33.992939
Vulnerability 1:
File: flasktest/app/auth/controllers.py
 > User input at line 19, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: flasktest/app/auth/controllers.py
	 > Line 21: session['user_id'] = user.id
File: flasktest/app/auth/controllers.py
 > reaches line 22, trigger word "flash(": 
	flash('Welcome %s' % user.name)



xuxiaoxing/flaskweb
https://github.com/xuxiaoxing/flaskweb
Entry file: flaskweb/app.py
Scanned: 2016-10-25 14:58:35.316239
No vulnerabilities found.


ashishkx/Flaskr
https://github.com/ashishkx/Flaskr
Entry file: Flaskr/flaskr.py
Scanned: 2016-10-25 14:58:36.581360
No vulnerabilities found.


jward1/flasktaskr
https://github.com/jward1/flasktaskr
Entry file: flasktaskr/flasktaskr_project/project/__init__.py
Scanned: 2016-10-25 14:58:38.106621
No vulnerabilities found.


mediocrecheng/flaskr
https://github.com/mediocrecheng/flaskr
Entry file: None
Scanned: 2016-10-25 14:58:38.619317
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mediocrecheng/flaskr.

huiyaoren/Flasky
https://github.com/huiyaoren/Flasky
Entry file: Flasky/flasky.py
Scanned: 2016-10-25 14:58:46.865417
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

brucepei/flasky
https://github.com/brucepei/flasky
Entry file: flasky/TBD.py
Scanned: 2016-10-25 14:58:51.605520
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ihoegen/Flask-Login-App-Tutorial
https://github.com/ihoegen/Flask-Login-App-Tutorial
Entry file: Flask-Login-App-Tutorial/__init__.py
Scanned: 2016-10-25 14:58:53.377568
No vulnerabilities found.


singingwolfboy/flask-dance-slack
https://github.com/singingwolfboy/flask-dance-slack
Entry file: flask-dance-slack/slack.py
Scanned: 2016-10-25 14:58:54.711884
No vulnerabilities found.


schoolofcode-me/web_blog
https://github.com/schoolofcode-me/web_blog
Entry file: web_blog/src/app.py
Scanned: 2016-10-25 14:58:56.093223
No vulnerabilities found.


ciarancourtney/flaskApp
https://github.com/ciarancourtney/flaskApp
Entry file: flaskApp/flaskApp/flaskApp/app.py
Scanned: 2016-10-25 14:59:06.343598
Vulnerability 1:
File: flaskApp/flaskApp/flaskApp/public/views.py
 > User input at line 30, trigger word "get(": 
	redirect_url = request.args.get('next') or url_for('user.members')
Reassigned in: 
	File: flaskApp/flaskApp/flaskApp/public/views.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = render_template('public/home.html',form=form)
File: flaskApp/flaskApp/flaskApp/public/views.py
 > reaches line 30, trigger word "url_for(": 
	redirect_url = request.args.get('next') or url_for('user.members')

Vulnerability 2:
File: flaskApp/flaskApp/flaskApp/public/views.py
 > User input at line 30, trigger word "get(": 
	redirect_url = request.args.get('next') or url_for('user.members')
Reassigned in: 
	File: flaskApp/flaskApp/flaskApp/public/views.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = render_template('public/home.html',form=form)
File: flaskApp/flaskApp/flaskApp/public/views.py
 > reaches line 31, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(redirect_url)



SunnyYun/flaskBlog
https://github.com/SunnyYun/flaskBlog
Entry file: flaskBlog/src/blog.py
Scanned: 2016-10-25 14:59:07.662769
No vulnerabilities found.


Schwusch/FlaskApp
https://github.com/Schwusch/FlaskApp
Entry file: FlaskApp/__init__.py
Scanned: 2016-10-25 14:59:14.631096
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

JenniferSpry/FlaskVersuch
https://github.com/JenniferSpry/FlaskVersuch
Entry file: FlaskVersuch/hello.py
Scanned: 2016-10-25 14:59:15.936535
No vulnerabilities found.


arpm/FlaskTaskr
https://github.com/arpm/FlaskTaskr
Entry file: None
Scanned: 2016-10-25 14:59:17.276173
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/arpm/FlaskTaskr.

ottercoder/FlaskTest
https://github.com/ottercoder/FlaskTest
Entry file: FlaskTest/FlaskWebApp/FlaskWebApp/FlaskWebApp/__init__.py
Scanned: 2016-10-25 14:59:25.128446
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

amyguobunny/FlaskHeroku
https://github.com/amyguobunny/FlaskHeroku
Entry file: FlaskHeroku/app5.py
Scanned: 2016-10-25 14:59:26.469946
No vulnerabilities found.


mwang87/FlaskTemplate
https://github.com/mwang87/FlaskTemplate
Entry file: FlaskTemplate/webserver.py
Scanned: 2016-10-25 14:59:27.705664
No vulnerabilities found.


iKalin/flask1
https://github.com/iKalin/flask1
Entry file: flask1/routes.py
Scanned: 2016-10-25 14:59:35.257730
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

graphql-python/flask-graphql
https://github.com/graphql-python/flask-graphql
Entry file: flask-graphql/tests/app.py
Scanned: 2016-10-25 14:59:39.641792
Vulnerability 1:
File: flask-graphql/tests/test_graphiqlview.py
 > User input at line 13, trigger word "get(": 
	response = client.get(url_for('graphql'),headers='Accept''text/html')
File: flask-graphql/tests/test_graphiqlview.py
 > reaches line 13, trigger word "url_for(": 
	response = client.get(url_for('graphql'),headers='Accept''text/html')



hhstore/flask-annotated
https://github.com/hhstore/flask-annotated
Entry file: flask-annotated/flask-0.5/flask/module.py
Scanned: 2016-10-25 14:59:42.354503
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhiliang729/flask
https://github.com/zhiliang729/flask
Entry file: None
Scanned: 2016-10-25 14:59:43.359806
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

suzf/Flask
https://github.com/suzf/Flask
Entry file: None
Scanned: 2016-10-25 14:59:43.876495
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

charanjp/flask
https://github.com/charanjp/flask
Entry file: None
Scanned: 2016-10-25 14:59:44.446550
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yasskh/flask
https://github.com/yasskh/flask
Entry file: None
Scanned: 2016-10-25 14:59:44.970004
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

goodyvn/flask
https://github.com/goodyvn/flask
Entry file: None
Scanned: 2016-10-25 14:59:45.472579
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

prakxys/flask
https://github.com/prakxys/flask
Entry file: None
Scanned: 2016-10-25 14:59:46.026988
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

galacticpy/flask
https://github.com/galacticpy/flask
Entry file: None
Scanned: 2016-10-25 14:59:46.621175
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

buntyke/Flask
https://github.com/buntyke/Flask
Entry file: None
Scanned: 2016-10-25 14:59:47.163521
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

poxstone/flask
https://github.com/poxstone/flask
Entry file: None
Scanned: 2016-10-25 14:59:47.671865
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

FlaskTutorial/Flask
https://github.com/FlaskTutorial/Flask
Entry file: None
Scanned: 2016-10-25 14:59:48.212145
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

OnlySHI/flask
https://github.com/OnlySHI/flask
Entry file: None
Scanned: 2016-10-25 14:59:48.710578
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

iFe1er/flask
https://github.com/iFe1er/flask
Entry file: None
Scanned: 2016-10-25 14:59:49.245717
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

stevebannon/flask
https://github.com/stevebannon/flask
Entry file: None
Scanned: 2016-10-25 14:59:49.750336
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

b-e/flask
https://github.com/b-e/flask
Entry file: None
Scanned: 2016-10-25 14:59:52.247751
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sebkouba/dynamic-flask-form
https://github.com/sebkouba/dynamic-flask-form
Entry file: dynamic-flask-form/multimodel.py
Scanned: 2016-10-25 14:59:53.468216
No vulnerabilities found.


psuong/FlaskWorkshop
https://github.com/psuong/FlaskWorkshop
Entry file: FlaskWorkshop/output-string/app.py
Scanned: 2016-10-25 14:59:55.905495
No vulnerabilities found.


jvuori/flask-uwsgi-nginx-haproxy-docker
https://github.com/jvuori/flask-uwsgi-nginx-haproxy-docker
Entry file: flask-uwsgi-nginx-haproxy-docker/web/app.py
Scanned: 2016-10-25 14:59:57.211760
No vulnerabilities found.


BLKStone/flask_image_search
https://github.com/BLKStone/flask_image_search
Entry file: flask_image_search/app/app.py
Scanned: 2016-10-25 15:00:14.133536
No vulnerabilities found.


yj0914/flask-
https://github.com/yj0914/flask-
Entry file: flask-/num1.py
Scanned: 2016-10-25 15:00:16.483889
No vulnerabilities found.


Bleezworld/flask_skeleton
https://github.com/Bleezworld/flask_skeleton
Entry file: flask_skeleton/serveur/__init__.py
Scanned: 2016-10-25 15:00:20.280691
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

akupara/flask_inspector
https://github.com/akupara/flask_inspector
Entry file: flask_inspector/example/app.py
Scanned: 2016-10-25 15:00:22.748604
No vulnerabilities found.


jarogers095/flask-hello-world
https://github.com/jarogers095/flask-hello-world
Entry file: flask-hello-world/app.py
Scanned: 2016-10-25 15:00:33.993678
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-hello-world/env/lib/python3.4/operator.py

alex-paterson/Barebones-Flask-and-Caffe-Classifier
https://github.com/alex-paterson/Barebones-Flask-and-Caffe-Classifier
Entry file: Barebones-Flask-and-Caffe-Classifier/app.py
Scanned: 2016-10-25 15:00:39.077357
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

drone-demos/drone-with-python
https://github.com/drone-demos/drone-with-python
Entry file: drone-with-python/dronedemo/main.py
Scanned: 2016-10-25 15:00:40.439133
No vulnerabilities found.


TwilioDevEd/lead-alerts-flask
https://github.com/TwilioDevEd/lead-alerts-flask
Entry file: None
Scanned: 2016-10-25 15:00:45.327763
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/TwilioDevEd/lead-alerts-flask.

soasme/flask-personal-access-token
https://github.com/soasme/flask-personal-access-token
Entry file: flask-personal-access-token/example.py
Scanned: 2016-10-25 15:00:49.474830
Vulnerability 1:
File: flask-personal-access-token/flask_personal_access_token/admin.py
 > User input at line 18, trigger word "get(": 
	render_data = 'base_api_url''base_web_url''debug'current_app.config.get('PERSONAL_ACCESS_TOKEN_ADMIN_API_PREFIX')current_app.config.get('PERSONAL_ACCESS_TOKEN_ADMIN_PREFIX')current_app.config.get('DEBUG')
File: flask-personal-access-token/flask_personal_access_token/admin.py
 > reaches line 23, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('/personal_access_token/index.html',render_data)



soasme/flask-perm
https://github.com/soasme/flask-perm
Entry file: flask-perm/example.py
Scanned: 2016-10-25 15:00:54.299054
Vulnerability 1:
File: flask-perm/tests/test_blueprint.py
 > User input at line 68, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'))
File: flask-perm/tests/test_blueprint.py
 > reaches line 68, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'))

Vulnerability 2:
File: flask-perm/tests/test_blueprint.py
 > User input at line 73, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": 0}')
File: flask-perm/tests/test_blueprint.py
 > reaches line 73, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": 0}')

Vulnerability 3:
File: flask-perm/tests/test_blueprint.py
 > User input at line 80, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": %s}' % permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 80, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": %s}' % permission['id'])

Vulnerability 4:
File: flask-perm/tests/test_blueprint.py
 > User input at line 87, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))
File: flask-perm/tests/test_blueprint.py
 > reaches line 87, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))

Vulnerability 5:
File: flask-perm/tests/test_blueprint.py
 > User input at line 121, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))
File: flask-perm/tests/test_blueprint.py
 > reaches line 114, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.delete_permission',permission_id=permission['id']))

Vulnerability 6:
File: flask-perm/tests/test_blueprint.py
 > User input at line 121, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))
File: flask-perm/tests/test_blueprint.py
 > reaches line 121, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))

Vulnerability 7:
File: flask-perm/tests/test_blueprint.py
 > User input at line 172, trigger word ".data": 
	id = json.loads(resp.data)['data']['id']
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 171: resp = add_user_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 173, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.revoke_user_permission',user_permission_id=id))

Vulnerability 8:
File: flask-perm/tests/test_blueprint.py
 > User input at line 188, trigger word ".data": 
	id = json.loads(resp.data)['data']['id']
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 187: resp = add_user_group_permission(client, user_group['id'], permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 189, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.revoke_user_group_permission',user_group_permission_id=id))

Vulnerability 9:
File: flask-perm/tests/test_blueprint.py
 > User input at line 199, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"user_id":1}')
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 198: resp = add_user_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 199, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"user_id":1}')

Vulnerability 10:
File: flask-perm/tests/test_blueprint.py
 > User input at line 210, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 209: resp = add_user_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 210, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])

Vulnerability 11:
File: flask-perm/tests/test_blueprint.py
 > User input at line 221, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"user_group_id":1}')
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 220: resp = add_user_group_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 221, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"user_group_id":1}')

Vulnerability 12:
File: flask-perm/tests/test_blueprint.py
 > User input at line 232, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 231: resp = add_user_group_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 232, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])

Vulnerability 13:
File: flask-perm/tests/test_blueprint.py
 > User input at line 245, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_groups'))
File: flask-perm/tests/test_blueprint.py
 > reaches line 245, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_groups'))

Vulnerability 14:
File: flask-perm/tests/test_blueprint.py
 > User input at line 280, trigger word ".data": 
	id = json.loads(resp.data)['data']['id']
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 279: resp = add_user_group_member(client, 1, user_group['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 281, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.delete_user_from_user_group',user_group_member_id=id))

Vulnerability 15:
File: flask-perm/tests/test_blueprint.py
 > User input at line 291, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_members'),query_string='_filters''{"user_group_id":%s}' % user_group['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 291, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_members'),query_string='_filters''{"user_group_id":%s}' % user_group['id'])

Vulnerability 16:
File: flask-perm/tests/test_blueprint.py
 > User input at line 304, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_users'))
File: flask-perm/tests/test_blueprint.py
 > reaches line 304, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_users'))

Vulnerability 17:
File: flask-perm/tests/test_blueprint.py
 > User input at line 309, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user',user_id=1))
File: flask-perm/tests/test_blueprint.py
 > reaches line 309, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user',user_id=1))

Vulnerability 18:
File: flask-perm/flask_perm/admin.py
 > User input at line 12, trigger word "get(": 
	render_data = 'base_api_url''base_web_url''debug'current_app.config.get('PERM_ADMIN_PREFIX') + '/api'current_app.config.get('PERM_ADMIN_PREFIX')current_app.config.get('DEBUG')
Reassigned in: 
	File: flask-perm/flask_perm/admin.py
	 > Line 10: ret_MAYBE_FUNCTION_NAME = redirect(url_for('perm-admin.login'))
File: flask-perm/flask_perm/admin.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('/perm-admin/index.html',render_data)



amirziai/sklearnflask
https://github.com/amirziai/sklearnflask
Entry file: sklearnflask/main.py
Scanned: 2016-10-25 15:00:55.929335
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

willianribeiro/flaskr
https://github.com/willianribeiro/flaskr
Entry file: None
Scanned: 2016-10-25 15:00:56.471432
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/willianribeiro/flaskr.

expersso/flaskr
https://github.com/expersso/flaskr
Entry file: None
Scanned: 2016-10-25 15:00:56.990482
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/expersso/flaskr.

tehasdf/flaskexample
https://github.com/tehasdf/flaskexample
Entry file: flaskexample/flaskexample/app.py
Scanned: 2016-10-25 15:00:58.398896
No vulnerabilities found.


sanghyunjooPurdue/flaskr
https://github.com/sanghyunjooPurdue/flaskr
Entry file: None
Scanned: 2016-10-25 15:00:58.946164
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sanghyunjooPurdue/flaskr.

becsully/flasktest
https://github.com/becsully/flasktest
Entry file: flasktest/mysite/__init__.py
Scanned: 2016-10-25 15:01:10.672556
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Duncodes/flasky
https://github.com/Duncodes/flasky
Entry file: flasky/flaskapp.py
Scanned: 2016-10-25 15:01:12.538418
Vulnerability 1:
File: flasky/flaskapp.py
 > User input at line 97, trigger word ".data": 
	question = form.question.data
Reassigned in: 
	File: flasky/flaskapp.py
	 > Line 99: kamau = Questions(id, title, question, answer)
	File: flasky/flaskapp.py
	 > Line 93: ret_MAYBE_FUNCTION_NAME = render_template('createquestion.html',form=form)
File: flasky/flaskapp.py
 > reaches line 102, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('createdquestion.html',question=question)



gileez/flasker
https://github.com/gileez/flasker
Entry file: flasker/flasker/__init__.py
Scanned: 2016-10-25 15:01:14.146909
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

fengyc/flasky
https://github.com/fengyc/flasky
Entry file: flasky/flasky/__init__.py
Scanned: 2016-10-25 15:01:16.427808
Vulnerability 1:
File: flasky/flasky/main/views.py
 > User input at line 15, trigger word "get(": 
	user_agent = request.headers.get('User-Agent')
Reassigned in: 
	File: flasky/flasky/main/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky/flasky/main/views.py
 > reaches line 36, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',user_agent=user_agent, current_time=datetime.datetime.utcnow(), form=form, name=session.get('name'), known=session.get('known', False))



sshimp/flasktaskr
https://github.com/sshimp/flasktaskr
Entry file: flasktaskr/views.py
Scanned: 2016-10-25 15:01:18.272609
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

solutionspecialist/flaskr
https://github.com/solutionspecialist/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:18.810093
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/solutionspecialist/flaskr.

XingxinLi/flaskr
https://github.com/XingxinLi/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:19.343448
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/XingxinLi/flaskr.

rishipuri/flasktodo
https://github.com/rishipuri/flasktodo
Entry file: flasktodo/flasktodo.py
Scanned: 2016-10-25 15:01:20.644102
No vulnerabilities found.


shinycoo/flaskmvcsample
https://github.com/shinycoo/flaskmvcsample
Entry file: flaskmvcsample/app.py
Scanned: 2016-10-25 15:01:21.933672
No vulnerabilities found.


Hyvjan/flasktaskr
https://github.com/Hyvjan/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:29.823044
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

alexwilkerson/flasktaskr
https://github.com/alexwilkerson/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:30.355286
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zachary-russell/Flaskr
https://github.com/zachary-russell/Flaskr
Entry file: Flaskr/flaskr.py
Scanned: 2016-10-25 15:01:31.680424
No vulnerabilities found.


sharma-abhi/flaskr
https://github.com/sharma-abhi/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:32.207089
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sharma-abhi/flaskr.

kwikiel/flaskr
https://github.com/kwikiel/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:32.731716
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/kwikiel/flaskr.

storress/Flaskserver
https://github.com/storress/Flaskserver
Entry file: Flaskserver/main.py
Scanned: 2016-10-25 15:01:34.031296
No vulnerabilities found.


dadasoz-cuelogic/flaskapp
https://github.com/dadasoz-cuelogic/flaskapp
Entry file: None
Scanned: 2016-10-25 15:01:35.406645
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dadasoz-cuelogic/flaskapp.

nickaustinlee/flasktaskr
https://github.com/nickaustinlee/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:35.940071
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SFurnace/flaskr
https://github.com/SFurnace/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:36.480890
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SFurnace/flaskr.

diegogslomp/flaskr
https://github.com/diegogslomp/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:36.997678
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/diegogslomp/flaskr.

wiggitywalt/flasktaskr
https://github.com/wiggitywalt/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:37.501945
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

apeete/flasktaskr
https://github.com/apeete/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:38.036602
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sindhus/flaskr
https://github.com/sindhus/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:40.548440
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sindhus/flaskr.

mg6/flaskr
https://github.com/mg6/flaskr
Entry file: None
Scanned: 2016-10-25 15:01:41.068460
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mg6/flaskr.

sourHobbes/flaskdemo
https://github.com/sourHobbes/flaskdemo
Entry file: flaskdemo/main.py
Scanned: 2016-10-25 15:01:54.217040
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Bayaz/flasktaskr
https://github.com/Bayaz/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:54.786796
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

noamoss/flasktaskr
https://github.com/noamoss/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:55.308322
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

xavinso/flasktaskr
https://github.com/xavinso/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:01:56.832366
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

CharlieWinters/flaskapi
https://github.com/CharlieWinters/flaskapi
Entry file: flaskapi/aydaapi4.py
Scanned: 2016-10-25 15:02:05.766967
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskapi/flaskenv/lib/python2.7/sre_compile.py

kewsie/flasky
https://github.com/kewsie/flasky
Entry file: flasky/venv/Lib/site-packages/flask_sqlalchemy/__init__.py
Scanned: 2016-10-25 15:02:14.452846
No vulnerabilities found.


slippers/flasksec
https://github.com/slippers/flasksec
Entry file: flasksec/main/__init__.py
Scanned: 2016-10-25 15:02:15.854989
No vulnerabilities found.


metakermit/resin-home-automator
https://github.com/metakermit/resin-home-automator
Entry file: resin-home-automator/src/main.py
Scanned: 2016-10-25 15:02:18.503433
No vulnerabilities found.


AxoSal/GAE-Flask-React-skeleton
https://github.com/AxoSal/GAE-Flask-React-skeleton
Entry file: GAE-Flask-React-skeleton/main.py
Scanned: 2016-10-25 15:02:22.963866
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

rui7157/Flask-NvRay-Blog
https://github.com/rui7157/Flask-NvRay-Blog
Entry file: Flask-NvRay-Blog/app/__init__.py
Scanned: 2016-10-25 15:02:30.859244
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Ineeza/FlaskAppBuilder
https://github.com/Ineeza/FlaskAppBuilder
Entry file: FlaskAppBuilder/src/classes/__init__.py
Scanned: 2016-10-25 15:02:32.307551
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

arose13/HerokuCondaScipyFlaskApp
https://github.com/arose13/HerokuCondaScipyFlaskApp
Entry file: HerokuCondaScipyFlaskApp/Web/app.py
Scanned: 2016-10-25 15:02:33.570419
No vulnerabilities found.


junniepat/FlaskApp
https://github.com/junniepat/FlaskApp
Entry file: FlaskApp/app.py
Scanned: 2016-10-25 15:02:34.837023
No vulnerabilities found.


YoungGer/FlaskApps
https://github.com/YoungGer/FlaskApps
Entry file: FlaskApps/helloWorld/hello.py
Scanned: 2016-10-25 15:02:37.024130
No vulnerabilities found.


jrballot/FlaskTaskr
https://github.com/jrballot/FlaskTaskr
Entry file: None
Scanned: 2016-10-25 15:02:37.535642
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jrballot/FlaskTaskr.

AnshuOnGit/FlaskServices
https://github.com/AnshuOnGit/FlaskServices
Entry file: FlaskServices/read_file.py
Scanned: 2016-10-25 15:02:44.163462
Vulnerability 1:
File: FlaskServices/read_file.py
 > User input at line 40, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/read_file.py
	 > Line 44: filename = secure_filename(file.filename)
File: FlaskServices/read_file.py
 > reaches line 50, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 2:
File: FlaskServices/read_file.py
 > User input at line 40, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/read_file.py
	 > Line 44: filename = secure_filename(file.filename)
File: FlaskServices/read_file.py
 > reaches line 50, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 3:
File: FlaskServices/uploads/read_file.py
 > User input at line 50, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/uploads/read_file.py
	 > Line 54: filename = secure_filename(file.filename)
File: FlaskServices/uploads/read_file.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 4:
File: FlaskServices/uploads/read_file.py
 > User input at line 50, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/uploads/read_file.py
	 > Line 54: filename = secure_filename(file.filename)
File: FlaskServices/uploads/read_file.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))



ftanevski4/FlaskPycharm
https://github.com/ftanevski4/FlaskPycharm
Entry file: FlaskPycharm/FlaskPycharm.py
Scanned: 2016-10-25 15:02:45.482755
No vulnerabilities found.


guiti1/FlaskAp
https://github.com/guiti1/FlaskAp
Entry file: FlaskAp/FlaskApp/__init__.py
Scanned: 2016-10-25 15:02:52.444175
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskAp/FlaskApp/venv/lib/python2.7/sre_compile.py

yasskh/FlaskProject
https://github.com/yasskh/FlaskProject
Entry file: FlaskProject/views.py
Scanned: 2016-10-25 15:03:02.744268
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zerodaemon/flask1
https://github.com/zerodaemon/flask1
Entry file: flask1/flaskr.py
Scanned: 2016-10-25 15:03:04.084414
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

DamithaPerera/FlaskApp
https://github.com/DamithaPerera/FlaskApp
Entry file: FlaskApp/app.py
Scanned: 2016-10-25 15:03:05.386139
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

dreammis/Flask02
https://github.com/dreammis/Flask02
Entry file: Flask02/app/__init__.py
Scanned: 2016-10-25 15:03:06.665386
No vulnerabilities found.


JoshLandry/FlaskBlog
https://github.com/JoshLandry/FlaskBlog
Entry file: FlaskBlog/Flask_Blog/__init__.py
Scanned: 2016-10-25 15:03:10.685240
Vulnerability 1:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 187, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 190: newEntry = BlogEntry(user=current_user, title=title, entry=entry, rating=rating, artist=artist, tags=tags)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 193, trigger word "flash(": 
	flash('Stored entry: '{}''.format(title))

Vulnerability 2:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 221, trigger word ".data": 
	user = User.get_by_username(form.username.data)
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 227: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 224, trigger word "flash(": 
	flash('Logged in successfully as {}.'.format(user.username))

Vulnerability 3:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 221, trigger word ".data": 
	user = User.get_by_username(form.username.data)
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 227: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 225, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user',username=user.username))

Vulnerability 4:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 221, trigger word ".data": 
	user = User.get_by_username(form.username.data)
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 227: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 225, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user',username=user.username))

Vulnerability 5:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 238, trigger word ".data": 
	user = User(email=form.email.data, username=form.username.data, password=form.password.data)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 243, trigger word "flash(": 
	flash('Welcome, {}! Please login.'.format(user.username))



Bayaz/FlaskBlog
https://github.com/Bayaz/FlaskBlog
Entry file: FlaskBlog/blog.py
Scanned: 2016-10-25 15:03:11.984607
No vulnerabilities found.


apeete/flaskBlog
https://github.com/apeete/flaskBlog
Entry file: flaskBlog/blog.py
Scanned: 2016-10-25 15:03:19.060499
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskBlog/env/lib/python2.7/sre_compile.py

land-pack/flaskBlog
https://github.com/land-pack/flaskBlog
Entry file: flaskBlog/flaskr.py
Scanned: 2016-10-25 15:03:20.354814
No vulnerabilities found.


colindjk/flaskTest
https://github.com/colindjk/flaskTest
Entry file: flaskTest/app.py
Scanned: 2016-10-25 15:03:21.826485
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yukoga/flasksample1
https://github.com/yukoga/flasksample1
Entry file: flasksample1/hello.py
Scanned: 2016-10-25 15:03:23.096972
No vulnerabilities found.


deyoppe/FlaskFire
https://github.com/deyoppe/FlaskFire
Entry file: FlaskFire/core/system/app.py
Scanned: 2016-10-25 15:03:24.448058
No vulnerabilities found.


Njsao/FlaskServer
https://github.com/Njsao/FlaskServer
Entry file: FlaskServer/untitled.py
Scanned: 2016-10-25 15:03:25.833325
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Arsh23/random-crossword-generater
https://github.com/Arsh23/random-crossword-generater
Entry file: random-crossword-generater/app.py
Scanned: 2016-10-25 15:03:29.583995
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

OscarMelin/learning-flask-bootstrap
https://github.com/OscarMelin/learning-flask-bootstrap
Entry file: learning-flask-bootstrap/__init__.py
Scanned: 2016-10-25 15:03:38.004615
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: learning-flask-bootstrap/venv/lib/python2.7/sre_compile.py

allianRoman/flask-intro
https://github.com/allianRoman/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 15:03:39.810410
No vulnerabilities found.


hunt3ri/temp-flask
https://github.com/hunt3ri/temp-flask
Entry file: temp-flask/app/__init__.py
Scanned: 2016-10-25 15:03:41.299112
No vulnerabilities found.


noamoss/flask-blog
https://github.com/noamoss/flask-blog
Entry file: flask-blog/blog.py
Scanned: 2016-10-25 15:03:42.596054
No vulnerabilities found.


hnb2/flask-customers
https://github.com/hnb2/flask-customers
Entry file: flask-customers/customers/__init__.py
Scanned: 2016-10-25 15:03:44.051128
Vulnerability 1:
File: flask-customers/customers/back/view.py
 > User input at line 71, trigger word ".data": 
	customer = Customer(email=form.email.data, password=AdminCustomer._generate_password())
Reassigned in: 
	File: flask-customers/customers/back/view.py
	 > Line 69: ret_MAYBE_FUNCTION_NAME = jsonify(errors=form.errors)
File: flask-customers/customers/back/view.py
 > reaches line 82, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(customer=customer.json)

Vulnerability 2:
File: flask-customers/customers/back/view.py
 > User input at line 147, trigger word ".data": 
	page = form.page.data
Reassigned in: 
	File: flask-customers/customers/back/view.py
	 > Line 151: start = page * CustomerService.RESULTS_PER_PAGE
	File: flask-customers/customers/back/view.py
	 > Line 152: stop = start + CustomerService.RESULTS_PER_PAGE
	File: flask-customers/customers/back/view.py
	 > Line 154: raw_customers = CustomerService.get_customers(start=start, stop=stop)
	File: flask-customers/customers/back/view.py
	 > Line 145: ret_MAYBE_FUNCTION_NAME = jsonify(errors=form.errors)
File: flask-customers/customers/back/view.py
 > reaches line 159, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(current_page=page, total_pages=int(total_pages), customers=[customer.json for customer in raw_customers])

Vulnerability 3:
File: flask-customers/customers/front/view.py
 > User input at line 32, trigger word ".data": 
	customer = Customer(email=form.email.data, password=form.password.data)
Reassigned in: 
	File: flask-customers/customers/front/view.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = jsonify(errors=form.errors)
File: flask-customers/customers/front/view.py
 > reaches line 39, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(id=customer.id)



raindrop4steven/tornadoFlask
https://github.com/raindrop4steven/tornadoFlask
Entry file: tornadoFlask/hello.py
Scanned: 2016-10-25 15:03:45.351303
No vulnerabilities found.


samwuu/flask_demo
https://github.com/samwuu/flask_demo
Entry file: flask_demo/app/__init__.py
Scanned: 2016-10-25 15:03:46.805619
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Jiezhi/HelloFlask
https://github.com/Jiezhi/HelloFlask
Entry file: HelloFlask/my_app/__init__.py
Scanned: 2016-10-25 15:03:48.338960
Vulnerability 1:
File: HelloFlask/my_app/product/views.py
 > User input at line 16, trigger word "get(": 
	product = PRODUCTS.get(key)
File: HelloFlask/my_app/product/views.py
 > reaches line 19, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('product.html',product=product)



tiangolo/uwsgi-nginx-flask-docker
https://github.com/tiangolo/uwsgi-nginx-flask-docker
Entry file: uwsgi-nginx-flask-docker/example-flask-index-upload/app/main.py
Scanned: 2016-10-25 15:03:51.575502
No vulnerabilities found.


MoodyLyrics/flask
https://github.com/MoodyLyrics/flask
Entry file: None
Scanned: 2016-10-25 15:03:52.604289
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

unikatsieben/flask
https://github.com/unikatsieben/flask
Entry file: None
Scanned: 2016-10-25 15:03:53.129109
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Mei-Lin-Chen/Flask
https://github.com/Mei-Lin-Chen/Flask
Entry file: None
Scanned: 2016-10-25 15:03:53.642609
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rakeshhegishte/Flask
https://github.com/rakeshhegishte/Flask
Entry file: None
Scanned: 2016-10-25 15:03:54.178315
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

billdwalters/Flask
https://github.com/billdwalters/Flask
Entry file: None
Scanned: 2016-10-25 15:03:54.726452
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

damionlowers/flask
https://github.com/damionlowers/flask
Entry file: None
Scanned: 2016-10-25 15:03:55.261052
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bobdorff/flask
https://github.com/bobdorff/flask
Entry file: None
Scanned: 2016-10-25 15:04:03.781978
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chrisvasey/flask
https://github.com/chrisvasey/flask
Entry file: None
Scanned: 2016-10-25 15:04:05.312989
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wildjan/Flask
https://github.com/wildjan/Flask
Entry file: None
Scanned: 2016-10-25 15:04:06.931903
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

smltc/Flask
https://github.com/smltc/Flask
Entry file: None
Scanned: 2016-10-25 15:04:07.458563
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rlsharpton/flask
https://github.com/rlsharpton/flask
Entry file: None
Scanned: 2016-10-25 15:04:11.975008
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

embasa/FLASK
https://github.com/embasa/FLASK
Entry file: FLASK/app.py
Scanned: 2016-10-25 15:04:14.307028
No vulnerabilities found.


ccapudev/flask
https://github.com/ccapudev/flask
Entry file: None
Scanned: 2016-10-25 15:04:21.334490
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hezx/flask
https://github.com/hezx/flask
Entry file: None
Scanned: 2016-10-25 15:04:22.887263
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

RayneHwang/Flask
https://github.com/RayneHwang/Flask
Entry file: None
Scanned: 2016-10-25 15:04:24.414269
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kakshi3242/Flask
https://github.com/kakshi3242/Flask
Entry file: None
Scanned: 2016-10-25 15:04:25.928049
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Abirdcfly/flask-blog
https://github.com/Abirdcfly/flask-blog
Entry file: flask-blog/app/__init__.py
Scanned: 2016-10-25 15:04:38.039321
Vulnerability 1:
File: flask-blog/app/main/views.py
 > User input at line 52, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 53: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['AWOTER_DOC_PER_PAGE'], error_out=False)
	File: flask-blog/app/main/views.py
	 > Line 56: posts = pagination.items
File: flask-blog/app/main/views.py
 > reaches line 57, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, title=title, posts=posts, pagination=pagination, detail_show=detail_show)

Vulnerability 2:
File: flask-blog/app/main/views.py
 > User input at line 128, trigger word "get(": 
	show_follwed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 126: show_follwed = False
File: flask-blog/app/main/views.py
 > reaches line 138, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('doc.html',title=title, posts=posts, pagination=pagination, detail_show=detail_show, show_follwed=show_follwed)

Vulnerability 3:
File: flask-blog/app/main/views.py
 > User input at line 133, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 134: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['AWOTER_DOC_PER_PAGE'], error_out=False)
	File: flask-blog/app/main/views.py
	 > Line 137: posts = pagination.items
File: flask-blog/app/main/views.py
 > reaches line 138, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('doc.html',title=title, posts=posts, pagination=pagination, detail_show=detail_show, show_follwed=show_follwed)

Vulnerability 4:
File: flask-blog/app/main/views.py
 > User input at line 171, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 173: page = post.comments.count() - 1 / current_app.config['AWOTER_COMMENTS_PER_PAGE'] + 1
	File: flask-blog/app/main/views.py
	 > Line 175: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['AWOTER_COMMENTS_PER_PAGE'], error_out=False)
	File: flask-blog/app/main/views.py
	 > Line 178: comments = pagination.items
	File: flask-blog/app/main/views.py
	 > Line 170: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.doc_detail',id=post.id, page=-1))
File: flask-blog/app/main/views.py
 > reaches line 179, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('doc.html',title=title, posts=[post], detail_show=detail_show, form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: flask-blog/app/main/views.py
 > User input at line 241, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 242: pagination = user.followers.paginate(page,per_page=current_app.config['AWOTER_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask-blog/app/main/views.py
	 > Line 245: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask-blog/app/main/views.py
	 > Line 240: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-blog/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='关注者列表', endpoint='main.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: flask-blog/app/main/views.py
 > User input at line 258, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 259: pagination = user.followed.paginate(page,per_page=current_app.config['AWOTER_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask-blog/app/main/views.py
	 > Line 262: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask-blog/app/main/views.py
	 > Line 257: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-blog/app/main/views.py
 > reaches line 264, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='他关注的人', endpoint='main.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: flask-blog/app/main/views.py
 > User input at line 290, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/app/main/views.py
	 > Line 291: pagination = Comment.query.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['AWOTER_COMMENTS_PER_PAGE'], error_out=False)
	File: flask-blog/app/main/views.py
	 > Line 294: comments = pagination.items
File: flask-blog/app/main/views.py
 > reaches line 295, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, title=title, page=page, pagination=pagination)



RoseOu/flasky
https://github.com/RoseOu/flasky
Entry file: None
Scanned: 2016-10-25 15:05:48.520341
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

its-dirg/Flask-pyoidc
https://github.com/its-dirg/Flask-pyoidc
Entry file: Flask-pyoidc/tests/test_flask_pyoidc.py
Scanned: 2016-10-25 15:05:49.989935
No vulnerabilities found.


materialsvirtuallab/flamyngo
https://github.com/materialsvirtuallab/flamyngo
Entry file: flamyngo/flamyngo/app.py
Scanned: 2016-10-25 15:05:53.428388
Vulnerability 1:
File: flamyngo/flamyngo/views.py
 > User input at line 95, trigger word "get(": 
	cname = request.args.get('collection')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 96: settings = CSETTINGS[cname]
	File: flamyngo/flamyngo/views.py
	 > Line 98: projection = [t[0] for t in settings['summary']]
	File: flamyngo/flamyngo/views.py
	 > Line 105: criteria = process_search_string(search_string, settings)
File: flamyngo/flamyngo/views.py
 > reaches line 130, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('index.html',collection_name=cname, results=results, fields=fields, search_string=search_string, mapped_names=mapped_names, unique_key=settings['unique_key'], active_collection=cname, collections=CNAMES, error_message=error_message))

Vulnerability 2:
File: flamyngo/flamyngo/views.py
 > User input at line 97, trigger word "get(": 
	search_string = request.args.get('search_string')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 105: criteria = process_search_string(search_string, settings)
File: flamyngo/flamyngo/views.py
 > reaches line 130, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('index.html',collection_name=cname, results=results, fields=fields, search_string=search_string, mapped_names=mapped_names, unique_key=settings['unique_key'], active_collection=cname, collections=CNAMES, error_message=error_message))

Vulnerability 3:
File: flamyngo/flamyngo/views.py
 > User input at line 142, trigger word "get(": 
	cname = request.args.get('collection')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 4:
File: flamyngo/flamyngo/views.py
 > User input at line 145, trigger word "get(": 
	plot_type = request.args.get('plot_type') or 'scatter'
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 5:
File: flamyngo/flamyngo/views.py
 > User input at line 146, trigger word "get(": 
	search_string = request.args.get('search_string')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 6:
File: flamyngo/flamyngo/views.py
 > User input at line 147, trigger word "get(": 
	xaxis = request.args.get('xaxis')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 7:
File: flamyngo/flamyngo/views.py
 > User input at line 148, trigger word "get(": 
	yaxis = request.args.get('yaxis')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))



mikelkl/flasky
https://github.com/mikelkl/flasky
Entry file: None
Scanned: 2016-10-25 15:05:53.949984
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

OneBitSoftware/Office365-SharePoint-Python-Flask-Sample
https://github.com/OneBitSoftware/Office365-SharePoint-Python-Flask-Sample
Entry file: Office365-SharePoint-Python-Flask-Sample/src/Python.Office365.AppAuthentication/app.py
Scanned: 2016-10-25 15:05:55.881889
No vulnerabilities found.


jonafato/Flask-Copilot
https://github.com/jonafato/Flask-Copilot
Entry file: Flask-Copilot/example/app.py
Scanned: 2016-10-25 15:05:57.410130
No vulnerabilities found.


besimaltnok/Flask-Examples
https://github.com/besimaltnok/Flask-Examples
Entry file: Flask-Examples/fileupload.py
Scanned: 2016-10-25 15:05:59.276490
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

luo-jialin/flask-
https://github.com/luo-jialin/flask-
Entry file: flask-/flaskr.py
Scanned: 2016-10-25 15:06:00.665404
No vulnerabilities found.


NJIT-SIG-WEBDEV/flask-intro
https://github.com/NJIT-SIG-WEBDEV/flask-intro
Entry file: flask-intro/Session1/app.py
Scanned: 2016-10-25 15:06:02.524588
No vulnerabilities found.


imperio-wxm/flask-learn
https://github.com/imperio-wxm/flask-learn
Entry file: flask-learn/app/demo/flask_learn.py
Scanned: 2016-10-25 15:06:04.783851
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ptrierweiler/myblog
https://github.com/ptrierweiler/myblog
Entry file: myblog/app/hello.py
Scanned: 2016-10-25 15:06:12.903888
No vulnerabilities found.


Upflask/Upflask
https://github.com/Upflask/Upflask
Entry file: Upflask/server.py
Scanned: 2016-10-25 15:06:15.359714
Vulnerability 1:
File: Upflask/server.py
 > User input at line 161, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: Upflask/server.py
	 > Line 165: filename = secure_filename(file.filename)
File: Upflask/server.py
 > reaches line 171, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 2:
File: Upflask/server.py
 > User input at line 161, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: Upflask/server.py
	 > Line 165: filename = secure_filename(file.filename)
File: Upflask/server.py
 > reaches line 171, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))



PrettyPrinted/flask-wtforms
https://github.com/PrettyPrinted/flask-wtforms
Entry file: flask-wtforms/main.py
Scanned: 2016-10-25 15:06:16.675952
No vulnerabilities found.


rainyear/MathModeBot
https://github.com/rainyear/MathModeBot
Entry file: MathModeBot/main.py
Scanned: 2016-10-25 15:06:18.035895
No vulnerabilities found.


MLH/my-mlh-flask-example
https://github.com/MLH/my-mlh-flask-example
Entry file: my-mlh-flask-example/app.py
Scanned: 2016-10-25 15:06:19.327117
No vulnerabilities found.


ubbochum/hb2_flask
https://github.com/ubbochum/hb2_flask
Entry file: hb2_flask/hb2_flask.py
Scanned: 2016-10-25 15:06:24.171884
Vulnerability 1:
File: hb2_flask/hb2_flask.py
 > User input at line 362, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 369: index_solr = Solr(start=page - 1 * 10, query=current_user.email, facet='false')
	File: hb2_flask/hb2_flask.py
	 > Line 372: records = index_solr.results
	File: hb2_flask/hb2_flask.py
	 > Line 376: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 379: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 361: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 363: records = []
	File: hb2_flask/hb2_flask.py
	 > Line 365: index_solr = ''
	File: hb2_flask/hb2_flask.py
	 > Line 366: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 380, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',header=lazy_gettext('Home'), site=theme(request.access_route), numFound=num_found, records=records, pagination=pagination, offset=mystart - 1)

Vulnerability 2:
File: hb2_flask/hb2_flask.py
 > User input at line 416, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 417: duplicates_solr = Solr(start=page - 1 * 10, fquery=['dedupid:[* TO *]'], group='true', group_field='dedupid', group_limit=100, facet='false')
	File: hb2_flask/hb2_flask.py
	 > Line 424: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('duplicate groups'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 427: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 415: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 423: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 428, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('duplicates.html',groups=duplicates_solr.results, pagination=pagination, header=lazy_gettext('Duplicates'), site=theme(request.access_route), offset=mystart - 1)

Vulnerability 3:
File: hb2_flask/hb2_flask.py
 > User input at line 433, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 438: persons_solr = Solr(query=query, start=page - 1 * 10, core='person', json_facet='affiliation''type''field''term''affiliation', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 451: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 454: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 434: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 446, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('persons.html',header=lazy_gettext('Persons'), site=theme(request.access_route), facet_data=persons_solr.facets, results=persons_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, now=datetime.datetime.now())

Vulnerability 4:
File: hb2_flask/hb2_flask.py
 > User input at line 433, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 438: persons_solr = Solr(query=query, start=page - 1 * 10, core='person', json_facet='affiliation''type''field''term''affiliation', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 451: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 454: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 434: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 455, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('persons.html',header=lazy_gettext('Persons'), site=theme(request.access_route), facet_data=persons_solr.facets, results=persons_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, pagination=pagination, now=datetime.datetime.now(), del_redirect='persons')

Vulnerability 5:
File: hb2_flask/hb2_flask.py
 > User input at line 472, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 495: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 496: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 471: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 6:
File: hb2_flask/hb2_flask.py
 > User input at line 474, trigger word "get(": 
	query = request.args.get('q', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 477: query = '*:*'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 7:
File: hb2_flask/hb2_flask.py
 > User input at line 480, trigger word "get(": 
	sorting = request.args.get('sort', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 482: sorting = ''
	File: hb2_flask/hb2_flask.py
	 > Line 484: sorting = 'fdate desc'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 8:
File: hb2_flask/hb2_flask.py
 > User input at line 472, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 495: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 496: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 471: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 9:
File: hb2_flask/hb2_flask.py
 > User input at line 474, trigger word "get(": 
	query = request.args.get('q', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 477: query = '*:*'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 10:
File: hb2_flask/hb2_flask.py
 > User input at line 480, trigger word "get(": 
	sorting = request.args.get('sort', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 482: sorting = ''
	File: hb2_flask/hb2_flask.py
	 > Line 484: sorting = 'fdate desc'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 11:
File: hb2_flask/hb2_flask.py
 > User input at line 472, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 495: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 496: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 471: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 499, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultlist.html',records=search_solr.results, pagination=pagination, facet_data=search_solr.facets, header=lazy_gettext('Resultlist'), target='search', site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery)

Vulnerability 12:
File: hb2_flask/hb2_flask.py
 > User input at line 474, trigger word "get(": 
	query = request.args.get('q', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 477: query = '*:*'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 499, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultlist.html',records=search_solr.results, pagination=pagination, facet_data=search_solr.facets, header=lazy_gettext('Resultlist'), target='search', site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery)

Vulnerability 13:
File: hb2_flask/hb2_flask.py
 > User input at line 480, trigger word "get(": 
	sorting = request.args.get('sort', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 482: sorting = ''
	File: hb2_flask/hb2_flask.py
	 > Line 484: sorting = 'fdate desc'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 499, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultlist.html',records=search_solr.results, pagination=pagination, facet_data=search_solr.facets, header=lazy_gettext('Resultlist'), target='search', site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery)

Vulnerability 14:
File: hb2_flask/hb2_flask.py
 > User input at line 742, trigger word "get(": 
	bio = requests.get('https://pub.orcid.org/%s/orcid-bio/' % orcid_id,headers='Accept''application/json').json()
File: hb2_flask/hb2_flask.py
 > reaches line 744, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('name''%s, %s' % (bio.get('orcid-profile').get('orcid-bio').get('personal-details').get('family-name').get('value'), bio.get('orcid-profile').get('orcid-bio').get('personal-details').get('given-names').get('value')))

Vulnerability 15:
File: hb2_flask/hb2_flask.py
 > User input at line 749, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 787: dashboard_solr = Solr(start=page - 1 * 10, query=query, sort='recordCreationDate asc', json_facet=DASHBOARD_FACETS, fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 795: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 798: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 750: mystart = 0
	File: hb2_flask/hb2_flask.py
	 > Line 791: pagination = ''
File: hb2_flask/hb2_flask.py
 > reaches line 801, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('dashboard.html',records=dashboard_solr.results, facet_data=dashboard_solr.facets, header=lazy_gettext('Dashboard'), site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery, pagination=pagination, now=datetime.datetime.now(), target='dashboard', del_redirect='dashboard')

Vulnerability 16:
File: hb2_flask/hb2_flask.py
 > User input at line 826, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 827: locked_solr = Solr(core='hb2', fquery=['locked:true', 'recordChangeDate:[* TO NOW-1HOUR]'], sort='recordChangeDate asc', start=page - 1 * 10)
	File: hb2_flask/hb2_flask.py
	 > Line 831: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('records'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 834: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 824: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 841, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('superadmin.html',locked_records=locked_solr.results, header=lazy_gettext('Superadmin Board'), import_records=solr_dumps.results, offset=mystart - 1, pagination=pagination, del_redirect='superadmin', form=form, site=theme(request.access_route))

Vulnerability 17:
File: hb2_flask/hb2_flask.py
 > User input at line 912, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 917: orgas_solr = Solr(query=query, start=page - 1 * 10, core='organisation', json_facet='destatis_id''type''field''term''destatis_id', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 929: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Organisational Units'))
	File: hb2_flask/hb2_flask.py
	 > Line 932: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 913: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 925, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('orgas.html',header=lazy_gettext('Organisations'), site=theme(request.access_route), facet_data=orgas_solr.facets, results=orgas_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, now=datetime.datetime.now())

Vulnerability 18:
File: hb2_flask/hb2_flask.py
 > User input at line 912, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 917: orgas_solr = Solr(query=query, start=page - 1 * 10, core='organisation', json_facet='destatis_id''type''field''term''destatis_id', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 929: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Organisational Units'))
	File: hb2_flask/hb2_flask.py
	 > Line 932: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 913: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 933, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('orgas.html',header=lazy_gettext('Organisations'), site=theme(request.access_route), facet_data=orgas_solr.facets, results=orgas_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, pagination=pagination, now=datetime.datetime.now())

Vulnerability 19:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1110, trigger word "replace(": 
	solr_data.setdefault('recordCreationDate', form.data.get(field).strip().replace(' ', 'T') + 'Z')

Vulnerability 20:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1112, trigger word "replace(": 
	solr_data.setdefault('recordChangeDate', form.data.get(field).strip().replace(' ', 'T') + 'Z')

Vulnerability 21:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1141, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('New Record'), site=theme(request.access_route), action='create', pubtype=pubtype)

Vulnerability 22:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1160, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('New Record'), site=theme(request.access_route), pubtype=pubtype, action='create', record_id=form.id.data)

Vulnerability 23:
File: hb2_flask/hb2_flask.py
 > User input at line 1167, trigger word "get(": 
	is_part_of = show_record_solr.results[0].get('is_part_of')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 24:
File: hb2_flask/hb2_flask.py
 > User input at line 1168, trigger word "get(": 
	has_part = show_record_solr.results[0].get('has_part')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 25:
File: hb2_flask/hb2_flask.py
 > User input at line 1169, trigger word "get(": 
	other_version = show_record_solr.results[0].get('other_version')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 26:
File: hb2_flask/hb2_flask.py
 > User input at line 1171, trigger word "get(": 
	thedata = json.loads(show_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1173: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 27:
File: hb2_flask/hb2_flask.py
 > User input at line 1172, trigger word "get(": 
	locked = show_record_solr.results[0].get('locked')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 28:
File: hb2_flask/hb2_flask.py
 > User input at line 1173, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 29:
File: hb2_flask/hb2_flask.py
 > User input at line 1189, trigger word "get(": 
	thedata = json.loads(show_person_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1190: form = PersonAdminForm.from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1192, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('name'), site=theme(request.access_route), action='retrieve', record_id=person_id, pubtype='person', del_redirect='persons')

Vulnerability 30:
File: hb2_flask/hb2_flask.py
 > User input at line 1200, trigger word "get(": 
	thedata = json.loads(show_orga_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1201: form = OrgaAdminForm.from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1203, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('pref_label'), site=theme(request.access_route), action='retrieve', record_id=orga_id, pubtype='organisation', del_redirect='organisations')

Vulnerability 31:
File: hb2_flask/hb2_flask.py
 > User input at line 1213, trigger word "get(": 
	thedata = json.loads(edit_orga_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1218: form = OrgaAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1227: ret_MAYBE_FUNCTION_NAME = redirect(url_for('orgas'))
	File: hb2_flask/hb2_flask.py
	 > Line 1216: form = OrgaAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1223, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('linear_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update')

Vulnerability 32:
File: hb2_flask/hb2_flask.py
 > User input at line 1213, trigger word "get(": 
	thedata = json.loads(edit_orga_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1218: form = OrgaAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1227: ret_MAYBE_FUNCTION_NAME = redirect(url_for('orgas'))
	File: hb2_flask/hb2_flask.py
	 > Line 1216: form = OrgaAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1231, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('linear_form.html',form=form, header=lazy_gettext('Edit: %(orga)s',orga=form.data.get('pref_label')), site=theme(request.access_route), action='update', pubtype='organisation')

Vulnerability 33:
File: hb2_flask/hb2_flask.py
 > User input at line 1242, trigger word "get(": 
	thedata = json.loads(edit_person_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1247: form = PersonAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1257: ret_MAYBE_FUNCTION_NAME = redirect(url_for('persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 1245: form = PersonAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1253, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update')

Vulnerability 34:
File: hb2_flask/hb2_flask.py
 > User input at line 1242, trigger word "get(": 
	thedata = json.loads(edit_person_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1247: form = PersonAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1257: ret_MAYBE_FUNCTION_NAME = redirect(url_for('persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 1245: form = PersonAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1261, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(person)s',person=form.data.get('name')), site=theme(request.access_route), action='update', pubtype='person')

Vulnerability 35:
File: hb2_flask/hb2_flask.py
 > User input at line 1286, trigger word "get(": 
	thedata = json.loads(edit_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
File: hb2_flask/hb2_flask.py
 > reaches line 1299, trigger word "flash(": 
	flash(Markup(lazy_gettext('<p><i class="fa fa-exclamation-triangle fa-3x"></i> <h3>The following data are incompatible with this publication type</h3></p>')) + _diff_struct(thedata, form.data), 'error')

Vulnerability 36:
File: hb2_flask/hb2_flask.py
 > User input at line 1289, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1299, trigger word "flash(": 
	flash(Markup(lazy_gettext('<p><i class="fa fa-exclamation-triangle fa-3x"></i> <h3>The following data are incompatible with this publication type</h3></p>')) + _diff_struct(thedata, form.data), 'error')

Vulnerability 37:
File: hb2_flask/hb2_flask.py
 > User input at line 1291, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1299, trigger word "flash(": 
	flash(Markup(lazy_gettext('<p><i class="fa fa-exclamation-triangle fa-3x"></i> <h3>The following data are incompatible with this publication type</h3></p>')) + _diff_struct(thedata, form.data), 'error')

Vulnerability 38:
File: hb2_flask/hb2_flask.py
 > User input at line 1286, trigger word "get(": 
	thedata = json.loads(edit_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
File: hb2_flask/hb2_flask.py
 > reaches line 1310, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype)

Vulnerability 39:
File: hb2_flask/hb2_flask.py
 > User input at line 1289, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1310, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype)

Vulnerability 40:
File: hb2_flask/hb2_flask.py
 > User input at line 1291, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1310, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype)

Vulnerability 41:
File: hb2_flask/hb2_flask.py
 > User input at line 1286, trigger word "get(": 
	thedata = json.loads(edit_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
File: hb2_flask/hb2_flask.py
 > reaches line 1321, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype, record_id=record_id)

Vulnerability 42:
File: hb2_flask/hb2_flask.py
 > User input at line 1289, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1321, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype, record_id=record_id)

Vulnerability 43:
File: hb2_flask/hb2_flask.py
 > User input at line 1291, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1321, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype, record_id=record_id)

Vulnerability 44:
File: hb2_flask/hb2_flask.py
 > User input at line 1491, trigger word "form[": 
	target = request.form['next']
File: hb2_flask/hb2_flask.py
 > reaches line 1493, trigger word "url_for(": 
	target = url_for(endpoint,values)

Vulnerability 45:
File: hb2_flask/hb2_flask.py
 > User input at line 1491, trigger word "form[": 
	target = request.form['next']
File: hb2_flask/hb2_flask.py
 > reaches line 1494, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(target)

Vulnerability 46:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 47:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 48:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 49:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 50:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 51:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 52:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 53:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 54:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1573, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form, header='Sign In', next=next, site=theme(request.access_route))

Vulnerability 55:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1573, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form, header='Sign In', next=next, site=theme(request.access_route))

Vulnerability 56:
File: hb2_flask/hb2_flask.py
 > User input at line 1627, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1628: solr_dumps = Solr(core='hb2_users', query='id:*.json', facet='false', start=page - 1 * 10)
	File: hb2_flask/hb2_flask.py
	 > Line 1631: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('dumps'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 1634: mystart = 1 + pagination.page - 1 * pagination.per_page
File: hb2_flask/hb2_flask.py
 > reaches line 1636, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('solr_dumps.html',records=solr_dumps.results, offset=mystart - 1, pagination=pagination, header=lazy_gettext('Import Dump'), del_redirect='import/solr_dumps', form=form)

Vulnerability 57:
File: hb2_flask/hb2_flask.py
 > User input at line 1652, trigger word "get(": 
	thedata = json.loads(import_solr.results[0].get('dump')[0])
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1645: thedata = ''
	File: hb2_flask/hb2_flask.py
	 > Line 1656: thedata = json.loads(form.file.data.stream.read())
File: hb2_flask/hb2_flask.py
 > reaches line 1665, trigger word "flash(": 
	flash('%s records imported!' % len(thedata), 'success')

Vulnerability 58:
File: hb2_flask/hb2_flask.py
 > User input at line 1656, trigger word ".data": 
	thedata = json.loads(form.file.data.stream.read())
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1645: thedata = ''
	File: hb2_flask/hb2_flask.py
	 > Line 1652: thedata = json.loads(import_solr.results[0].get('dump')[0])
File: hb2_flask/hb2_flask.py
 > reaches line 1665, trigger word "flash(": 
	flash('%s records imported!' % len(thedata), 'success')

Vulnerability 59:
File: hb2_flask/processors/mods_parser.py
 > User input at line 123, trigger word "get(": 
	pnd = name.attrib.get('valueURI').replace('http://d-nb.info/gnd/', '')
Reassigned in: 
	File: hb2_flask/processors/mods_parser.py
	 > Line 120: pnd = ''
File: hb2_flask/processors/mods_parser.py
 > reaches line 123, trigger word "replace(": 
	pnd = name.attrib.get('valueURI').replace('http://d-nb.info/gnd/', '')



Vertabelo/flask-oauth-demo-app
https://github.com/Vertabelo/flask-oauth-demo-app
Entry file: flask-oauth-demo-app/models.py
Scanned: 2016-10-25 15:06:28.705497
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

msopentechcn/aad-graphapi-flask-demo
https://github.com/msopentechcn/aad-graphapi-flask-demo
Entry file: aad-graphapi-flask-demo/app.py
Scanned: 2016-10-25 15:06:29.991011
Vulnerability 1:
File: aad-graphapi-flask-demo/app.py
 > User input at line 100, trigger word "get(": 
	error_code = messages.get('error_code')
File: aad-graphapi-flask-demo/app.py
 > reaches line 102, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('error.html',error_code=error_code, error_message=error_message)

Vulnerability 2:
File: aad-graphapi-flask-demo/app.py
 > User input at line 101, trigger word "get(": 
	error_message = messages.get('error_message')
File: aad-graphapi-flask-demo/app.py
 > reaches line 102, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('error.html',error_code=error_code, error_message=error_message)

Vulnerability 3:
File: aad-graphapi-flask-demo/app.py
 > User input at line 108, trigger word "get(": 
	error_code = errors.get('code')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))

Vulnerability 4:
File: aad-graphapi-flask-demo/app.py
 > User input at line 109, trigger word "get(": 
	error_message = errors.get('message').get('value')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))

Vulnerability 5:
File: aad-graphapi-flask-demo/app.py
 > User input at line 108, trigger word "get(": 
	error_code = errors.get('code')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))

Vulnerability 6:
File: aad-graphapi-flask-demo/app.py
 > User input at line 109, trigger word "get(": 
	error_message = errors.get('message').get('value')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))



waharnum/inlibraries.com
https://github.com/waharnum/inlibraries.com
Entry file: None
Scanned: 2016-10-25 15:06:35.203103
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/waharnum/inlibraries.com.

billyfung/flask_shortener
https://github.com/billyfung/flask_shortener
Entry file: flask_shortener/app.py
Scanned: 2016-10-25 15:06:36.503563
Vulnerability 1:
File: flask_shortener/app.py
 > User input at line 41, trigger word "form[": 
	url_to_parse = request.form['input-url']
Reassigned in: 
	File: flask_shortener/app.py
	 > Line 42: parts = urlparse.urlparse(url_to_parse)
	File: flask_shortener/app.py
	 > Line 47: short_id = shorten(url_to_parse)
File: flask_shortener/app.py
 > reaches line 48, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',short_id=short_id)

Vulnerability 2:
File: flask_shortener/app.py
 > User input at line 52, trigger word "get(": 
	link_target = redis.get('url-target:' + short_id)
File: flask_shortener/app.py
 > reaches line 56, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(link_target)

Vulnerability 3:
File: flask_shortener/app.py
 > User input at line 60, trigger word "get(": 
	link_target = redis.get('url-target:' + short_id)
File: flask_shortener/app.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('details.html',short_id=short_id, click_count=click_count, link_target=link_target)

Vulnerability 4:
File: flask_shortener/app.py
 > User input at line 63, trigger word "get(": 
	click_count = int(redis.get('click-count:' + short_id) or 0)
File: flask_shortener/app.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('details.html',short_id=short_id, click_count=click_count, link_target=link_target)



jrhuerta/flask-api
https://github.com/jrhuerta/flask-api
Entry file: None
Scanned: 2016-10-25 15:06:37.851467
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jrhuerta/flask-api.

SticksInHand/flaskr
https://github.com/SticksInHand/flaskr
Entry file: None
Scanned: 2016-10-25 15:06:38.893222
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SticksInHand/flaskr.

jayShepard/Flasky
https://github.com/jayShepard/Flasky
Entry file: Flasky/Vagrant/hello.py
Scanned: 2016-10-25 15:06:40.182696
No vulnerabilities found.


vineethtw/flaskexamples
https://github.com/vineethtw/flaskexamples
Entry file: flaskexamples/api/simulations.py
Scanned: 2016-10-25 15:06:41.558204
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kmosho/flaskr
https://github.com/kmosho/flaskr
Entry file: None
Scanned: 2016-10-25 15:06:42.078069
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/kmosho/flaskr.

KDmytro/flasktaskr
https://github.com/KDmytro/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:06:42.596360
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dreamtiger2016/flaskr
https://github.com/dreamtiger2016/flaskr
Entry file: None
Scanned: 2016-10-25 15:06:43.096718
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dreamtiger2016/flaskr.

jarogers095/flasktaskr
https://github.com/jarogers095/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:06:43.664523
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

msapkota/flasktaskr
https://github.com/msapkota/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:06:49.184843
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Narcissist1/flasktest
https://github.com/Narcissist1/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 15:06:51.689863
No vulnerabilities found.


super452/flasky
https://github.com/super452/flasky
Entry file: None
Scanned: 2016-10-25 15:06:54.214288
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

srbhtest/flaskwebsite
https://github.com/srbhtest/flaskwebsite
Entry file: flaskwebsite/__init__.py
Scanned: 2016-10-25 15:06:55.476069
No vulnerabilities found.


Anddor/flaskr
https://github.com/Anddor/flaskr
Entry file: None
Scanned: 2016-10-25 15:06:58.502902
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Anddor/flaskr.

hammygoonan/Flaskify
https://github.com/hammygoonan/Flaskify
Entry file: Flaskify/project/__init__.py
Scanned: 2016-10-25 15:07:00.120926
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

anujspatel/flaskr
https://github.com/anujspatel/flaskr
Entry file: None
Scanned: 2016-10-25 15:07:00.668079
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/anujspatel/flaskr.

williamcaban/flaskrcloud
https://github.com/williamcaban/flaskrcloud
Entry file: flaskrcloud/flaskr.py
Scanned: 2016-10-25 15:07:03.327019
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

boydjohnson/flasktwilio
https://github.com/boydjohnson/flasktwilio
Entry file: flasktwilio/app.py
Scanned: 2016-10-25 15:07:04.632911
Vulnerability 1:
File: flasktwilio/app.py
 > User input at line 14, trigger word "form[": 
	number = request.form['number']
File: flasktwilio/app.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('subscribe_response.html',phone_number=number, lat=lat, lon=lon)

Vulnerability 2:
File: flasktwilio/app.py
 > User input at line 15, trigger word "form[": 
	lat = request.form['latitude']
File: flasktwilio/app.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('subscribe_response.html',phone_number=number, lat=lat, lon=lon)

Vulnerability 3:
File: flasktwilio/app.py
 > User input at line 16, trigger word "form[": 
	lon = request.form['longitude']
File: flasktwilio/app.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('subscribe_response.html',phone_number=number, lat=lat, lon=lon)



yizhianiu/flasky
https://github.com/yizhianiu/flasky
Entry file: None
Scanned: 2016-10-25 15:07:06.170378
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

huachen0216/flaskdemo
https://github.com/huachen0216/flaskdemo
Entry file: flaskdemo/app/__init__.py
Scanned: 2016-10-25 15:07:15.108101
Vulnerability 1:
File: flaskdemo/app/main/views.py
 > User input at line 20, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskdemo/app/main/views.py
	 > Line 21: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskdemo/app/main/views.py
	 > Line 24: posts = pagination.items
	File: flaskdemo/app/main/views.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskdemo/app/main/views.py
 > reaches line 25, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: flaskdemo/app/main/views.py
 > User input at line 32, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskdemo/app/main/views.py
	 > Line 33: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskdemo/app/main/views.py
	 > Line 36: posts = pagination.items
File: flaskdemo/app/main/views.py
 > reaches line 37, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)



MrLokans/flaskr
https://github.com/MrLokans/flaskr
Entry file: None
Scanned: 2016-10-25 15:07:15.641128
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/MrLokans/flaskr.

citizen-stig/flaskone
https://github.com/citizen-stig/flaskone
Entry file: flaskone/flask_one.py
Scanned: 2016-10-25 15:07:16.943261
No vulnerabilities found.


ifcheung2012/flaskanalysis
https://github.com/ifcheung2012/flaskanalysis
Entry file: flaskanalysis/manage.py
Scanned: 2016-10-25 15:07:18.362004
No vulnerabilities found.


Robotwing/flaskweb
https://github.com/Robotwing/flaskweb
Entry file: flaskweb/app/__init__.py
Scanned: 2016-10-25 15:07:21.584764
No vulnerabilities found.


menglong81/flaskr
https://github.com/menglong81/flaskr
Entry file: None
Scanned: 2016-10-25 15:07:22.111203
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/menglong81/flaskr.

karanj112294/flasktutorial
https://github.com/karanj112294/flasktutorial
Entry file: None
Scanned: 2016-10-25 15:07:26.448894
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/karanj112294/flasktutorial.

crazyqipython/flaskdemo
https://github.com/crazyqipython/flaskdemo
Entry file: flaskdemo/hello.py
Scanned: 2016-10-25 15:07:31.089006
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pythondude325/flaskr
https://github.com/pythondude325/flaskr
Entry file: None
Scanned: 2016-10-25 15:07:31.610833
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pythondude325/flaskr.

chadelder/flasktaskr
https://github.com/chadelder/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:07:36.137146
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jocelynaladin/flaskworkspace
https://github.com/jocelynaladin/flaskworkspace
Entry file: flaskworkspace/__init__.py
Scanned: 2016-10-25 15:07:44.444618
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

fenske/flasky
https://github.com/fenske/flasky
Entry file: None
Scanned: 2016-10-25 15:07:45.017029
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fakegit/flasky
https://github.com/fakegit/flasky
Entry file: None
Scanned: 2016-10-25 15:07:45.531643
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wdxfairy/flaskblog
https://github.com/wdxfairy/flaskblog
Entry file: flaskblog/blog.py
Scanned: 2016-10-25 15:07:46.833657
No vulnerabilities found.


davetromp/flasksqlapi
https://github.com/davetromp/flasksqlapi
Entry file: flasksqlapi/runapi.py
Scanned: 2016-10-25 15:07:49.456441
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Lazyppl/Flaskblog
https://github.com/Lazyppl/Flaskblog
Entry file: Flaskblog/app/__init__.py
Scanned: 2016-10-25 15:07:50.710340
No vulnerabilities found.


playgrdstar/flasktaskr
https://github.com/playgrdstar/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:07:51.250056
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

toricor/flaskr
https://github.com/toricor/flaskr
Entry file: None
Scanned: 2016-10-25 15:07:51.768683
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/toricor/flaskr.

xu00wei/flasky
https://github.com/xu00wei/flasky
Entry file: None
Scanned: 2016-10-25 15:07:52.279436
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zzclynn/flaskr
https://github.com/zzclynn/flaskr
Entry file: None
Scanned: 2016-10-25 15:07:54.793600
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zzclynn/flaskr.

wish007/flasktest
https://github.com/wish007/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 15:07:56.185731
No vulnerabilities found.


wildjan/Flaskr
https://github.com/wildjan/Flaskr
Entry file: Flaskr/Flaskr/Flaskr/flaskr.py
Scanned: 2016-10-25 15:07:58.606488
No vulnerabilities found.


fhamami/flaskone
https://github.com/fhamami/flaskone
Entry file: flaskone/app/__init__.py
Scanned: 2016-10-25 15:08:00.141795
No vulnerabilities found.


windery/flasky
https://github.com/windery/flasky
Entry file: None
Scanned: 2016-10-25 15:08:00.664802
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pnilan/flaskr
https://github.com/pnilan/flaskr
Entry file: None
Scanned: 2016-10-25 15:08:01.195719
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pnilan/flaskr.

psykos/flaskloginskeleton
https://github.com/psykos/flaskloginskeleton
Entry file: flaskloginskeleton/app/__init__.py
Scanned: 2016-10-25 15:08:03.542603
No vulnerabilities found.


AndrewGoldstein/flaskapp
https://github.com/AndrewGoldstein/flaskapp
Entry file: None
Scanned: 2016-10-25 15:08:04.060021
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/AndrewGoldstein/flaskapp.

zeratullich/flaskr
https://github.com/zeratullich/flaskr
Entry file: None
Scanned: 2016-10-25 15:08:06.575243
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zeratullich/flaskr.

johnpwillman/flasktest
https://github.com/johnpwillman/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 15:08:14.794827
No vulnerabilities found.


scottmarinoff/Flasky
https://github.com/scottmarinoff/Flasky
Entry file: Flasky/Projects/Flasky/app/__init__.py
Scanned: 2016-10-25 15:08:17.167763
No vulnerabilities found.


JamesMilnerUK/Loxo
https://github.com/JamesMilnerUK/Loxo
Entry file: Loxo/loxoapi.py
Scanned: 2016-10-25 15:08:24.627598
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kcunning/flask-class-c9
https://github.com/kcunning/flask-class-c9
Entry file: flask-class-c9/flaskclass/app/__init__.py
Scanned: 2016-10-25 15:08:26.179944
Vulnerability 1:
File: flask-class-c9/flaskclass/app/views.py
 > User input at line 38, trigger word ".data": 
	numbers = form.numbers.data
Reassigned in: 
	File: flask-class-c9/flaskclass/app/views.py
	 > Line 48: ret_MAYBE_FUNCTION_NAME = render_template('get_lucky.html',form=form)
	File: flask-class-c9/flaskclass/app/views.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = render_template('get_lucky.html',form=form)
File: flask-class-c9/flaskclass/app/views.py
 > reaches line 45, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('game.html',game_nums=game_nums, player_nums=numbers, wins=wins)



cutedogspark/Flask-SocketIO
https://github.com/cutedogspark/Flask-SocketIO
Entry file: Flask-SocketIO/server/app/__init__.py
Scanned: 2016-10-25 15:08:33.739606
No vulnerabilities found.


nescode/punchstarter
https://github.com/nescode/punchstarter
Entry file: punchstarter/punchstarter/__init__.py
Scanned: 2016-10-25 15:08:35.210807
Vulnerability 1:
File: punchstarter/punchstarter/__init__.py
 > User input at line 31, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 32: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 2:
File: punchstarter/punchstarter/__init__.py
 > User input at line 36, trigger word "files[": 
	cover_photo = request.files['cover_photo']
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 37: uploaded_image = cloudinary.uploader.upload(cover_photo,crop='limit', width=680, height=550)
	File: punchstarter/punchstarter/__init__.py
	 > Line 43: image_filename = uploaded_image['public_id']
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 3:
File: punchstarter/punchstarter/__init__.py
 > User input at line 45, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 4:
File: punchstarter/punchstarter/__init__.py
 > User input at line 31, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 32: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 5:
File: punchstarter/punchstarter/__init__.py
 > User input at line 36, trigger word "files[": 
	cover_photo = request.files['cover_photo']
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 37: uploaded_image = cloudinary.uploader.upload(cover_photo,crop='limit', width=680, height=550)
	File: punchstarter/punchstarter/__init__.py
	 > Line 43: image_filename = uploaded_image['public_id']
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 6:
File: punchstarter/punchstarter/__init__.py
 > User input at line 45, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 7:
File: punchstarter/punchstarter/__init__.py
 > User input at line 64, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('project_detail.html',project=project)

Vulnerability 8:
File: punchstarter/punchstarter/__init__.py
 > User input at line 72, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 77, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('pledge.html',project=project)

Vulnerability 9:
File: punchstarter/punchstarter/__init__.py
 > User input at line 72, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 93, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 10:
File: punchstarter/punchstarter/__init__.py
 > User input at line 72, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 93, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 11:
File: punchstarter/punchstarter/__init__.py
 > User input at line 97, trigger word "get(": 
	query = request.args.get('q') or ''
File: punchstarter/punchstarter/__init__.py
 > reaches line 98, trigger word "filter(": 
	projects = db.session.query(Project).filter(Project.name.ilike('%' + query + '%') | Project.short_description.ilike('%' + query + '%') | Project.long_description.ilike('%' + query + '%')).all()

Vulnerability 12:
File: punchstarter/punchstarter/__init__.py
 > User input at line 97, trigger word "get(": 
	query = request.args.get('q') or ''
File: punchstarter/punchstarter/__init__.py
 > reaches line 106, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search.html',query_text=query, projects=projects, project_count=project_count)



arose13/HerokuCondaScipyFlaskApp
https://github.com/arose13/HerokuCondaScipyFlaskApp
Entry file: HerokuCondaScipyFlaskApp/Web/app.py
Scanned: 2016-10-25 15:08:36.486579
No vulnerabilities found.


sd16spring/Toolbox-Flask
https://github.com/sd16spring/Toolbox-Flask
Entry file: Toolbox-Flask/hello.py
Scanned: 2016-10-25 15:08:39.107480
No vulnerabilities found.


zbc/Flask
https://github.com/zbc/Flask
Entry file: None
Scanned: 2016-10-25 15:08:39.630475
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

JadyLiu/flask
https://github.com/JadyLiu/flask
Entry file: None
Scanned: 2016-10-25 15:08:40.247344
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ZhenghaoZhu/Flask
https://github.com/ZhenghaoZhu/Flask
Entry file: None
Scanned: 2016-10-25 15:08:45.792464
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cobra0914/flask
https://github.com/cobra0914/flask
Entry file: None
Scanned: 2016-10-25 15:08:46.345210
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sunshine-sjd/Flask
https://github.com/sunshine-sjd/Flask
Entry file: None
Scanned: 2016-10-25 15:08:46.859391
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

octt/flask
https://github.com/octt/flask
Entry file: None
Scanned: 2016-10-25 15:08:47.421035
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SunchunZhou/flask
https://github.com/SunchunZhou/flask
Entry file: None
Scanned: 2016-10-25 15:08:47.970358
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Bwooklyn/flask
https://github.com/Bwooklyn/flask
Entry file: None
Scanned: 2016-10-25 15:08:48.478702
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

HRKpython/flask
https://github.com/HRKpython/flask
Entry file: None
Scanned: 2016-10-25 15:08:50.021693
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

candyer/Flask
https://github.com/candyer/Flask
Entry file: None
Scanned: 2016-10-25 15:08:51.553342
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bsteinberg/flask
https://github.com/bsteinberg/flask
Entry file: None
Scanned: 2016-10-25 15:08:52.066301
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

susantshrestha/flask
https://github.com/susantshrestha/flask
Entry file: None
Scanned: 2016-10-25 15:08:52.606533
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pavelrib/flask
https://github.com/pavelrib/flask
Entry file: None
Scanned: 2016-10-25 15:08:55.125392
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

scripterkaran/flask
https://github.com/scripterkaran/flask
Entry file: None
Scanned: 2016-10-25 15:08:55.634776
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SeanVaysburd/flask
https://github.com/SeanVaysburd/flask
Entry file: None
Scanned: 2016-10-25 15:08:58.145829
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kartheek3011/Flask
https://github.com/kartheek3011/Flask
Entry file: None
Scanned: 2016-10-25 15:08:59.666260
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dannyec/flask
https://github.com/dannyec/flask
Entry file: None
Scanned: 2016-10-25 15:09:01.210090
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

itsrifat/flask-celery-docker-scale
https://github.com/itsrifat/flask-celery-docker-scale
Entry file: flask-celery-docker-scale/flask-app/app.py
Scanned: 2016-10-25 15:09:02.637569
No vulnerabilities found.


ninadmhatre/zual
https://github.com/ninadmhatre/zual
Entry file: zual/local_mods/flask-blogging/flask_blogging/engine.py
Scanned: 2016-10-25 15:09:08.947290
Vulnerability 1:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 104, trigger word "get(": 
	count = count or config.get('BLOGGING_POSTS_PER_PAGE', 10)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 106: meta = _get_meta(storage, count, page)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 107: offset = meta['offset']
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 111: posts = storage.get_posts(count=count, offset=offset, include_draft=False, tag=None, user_id=None, recent=True)
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 115, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blogging/index.html',posts=posts, meta=meta, config=config)

Vulnerability 2:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 141, trigger word "get(": 
	count = count or config.get('BLOGGING_POSTS_PER_PAGE', 10)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 142: meta = _get_meta(storage, count, page,tag=tag)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 143: offset = meta['offset']
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 147: posts = storage.get_posts(count=count, offset=offset, tag=tag, include_draft=False, user_id=None, recent=True)
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blogging/index.html',posts=posts, meta=meta, config=config)

Vulnerability 3:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 159, trigger word "get(": 
	count = count or config.get('BLOGGING_POSTS_PER_PAGE', 10)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 160: meta = _get_meta(storage, count, page,user_id=user_id)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 161: offset = meta['offset']
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 164: posts = storage.get_posts(count=count, offset=offset, user_id=user_id, include_draft=False, tag=None, recent=True)
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 172, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blogging/index.html',posts=posts, meta=meta, config=config)

Vulnerability 4:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 199, trigger word ".data": 
	slug = post_processor.create_slug(form.title.data)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 204: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 220: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 224: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 228: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 200, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.page_by_id',post_id=pid, slug=slug))

Vulnerability 5:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 199, trigger word ".data": 
	slug = post_processor.create_slug(form.title.data)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 204: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 220: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 224: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 228: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 200, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.page_by_id',post_id=pid, slug=slug))



TerbiumLabs/flask-developer-challenge
https://github.com/TerbiumLabs/flask-developer-challenge
Entry file: flask-developer-challenge/gistapi/gistapi.py
Scanned: 2016-10-25 15:09:10.363400
No vulnerabilities found.


w84miracle/flask-sb-admin2
https://github.com/w84miracle/flask-sb-admin2
Entry file: flask-sb-admin2/sbadmin.py
Scanned: 2016-10-25 15:09:17.414611
No vulnerabilities found.


k-hung/FlaskApp
https://github.com/k-hung/FlaskApp
Entry file: FlaskApp/FeelsApp/__init__.py
Scanned: 2016-10-25 15:09:24.871370
No vulnerabilities found.


taogeT/flask-celery
https://github.com/taogeT/flask-celery
Entry file: flask-celery/example/app/__init__.py
Scanned: 2016-10-25 15:09:26.306217
No vulnerabilities found.


frankV/flask-sendgrid
https://github.com/frankV/flask-sendgrid
Entry file: flask-sendgrid/setup.py
Scanned: 2016-10-25 15:09:27.603250
No vulnerabilities found.


sunscrapers/flask-boilerplate
https://github.com/sunscrapers/flask-boilerplate
Entry file: flask-boilerplate/app.py
Scanned: 2016-10-25 15:09:35.969922
No vulnerabilities found.


jabbalaci/DigitalOceanFlask
https://github.com/jabbalaci/DigitalOceanFlask
Entry file: DigitalOceanFlask/home/demo/projects/ave_caesar/main.py
Scanned: 2016-10-25 15:09:37.437445
No vulnerabilities found.


pyx/flask-diced
https://github.com/pyx/flask-diced
Entry file: flask-diced/examples/simple/app.py
Scanned: 2016-10-25 15:09:38.852743
No vulnerabilities found.


basco-johnkevin/note-taking-app
https://github.com/basco-johnkevin/note-taking-app
Entry file: note-taking-app/part2/main.py
Scanned: 2016-10-25 15:09:40.147830
No vulnerabilities found.


yoshiya0503/Flask-Best-Practices
https://github.com/yoshiya0503/Flask-Best-Practices
Entry file: Flask-Best-Practices/methodview.py
Scanned: 2016-10-25 15:09:41.433885
No vulnerabilities found.


ThunderousFigs/Genomes
https://github.com/ThunderousFigs/Genomes
Entry file: Genomes/server.py
Scanned: 2016-10-25 15:09:57.486889
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sinscary/Flask-Social-Networking
https://github.com/sinscary/Flask-Social-Networking
Entry file: Flask-Social-Networking/app.py
Scanned: 2016-10-25 15:09:59.865883
Vulnerability 1:
File: Flask-Social-Networking/app.py
 > User input at line 111, trigger word "get(": 
	user = models.User.select().where(models.User.username ** username).get()
Reassigned in: 
	File: Flask-Social-Networking/app.py
	 > Line 118: user = current_user
File: Flask-Social-Networking/app.py
 > reaches line 121, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template(template,stream=stream, user=user)

Vulnerability 2:
File: Flask-Social-Networking/app.py
 > User input at line 134, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 146, trigger word "flash(": 
	flash('You are now following {}'.format(to_user.username), 'success')

Vulnerability 3:
File: Flask-Social-Networking/app.py
 > User input at line 134, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 147, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))

Vulnerability 4:
File: Flask-Social-Networking/app.py
 > User input at line 134, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 147, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))

Vulnerability 5:
File: Flask-Social-Networking/app.py
 > User input at line 153, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 165, trigger word "flash(": 
	flash('You have unfollowed {}'.format(to_user.username), 'success')

Vulnerability 6:
File: Flask-Social-Networking/app.py
 > User input at line 153, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 166, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))

Vulnerability 7:
File: Flask-Social-Networking/app.py
 > User input at line 153, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 166, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))



osuosl/timesync-frontend-flask
https://github.com/osuosl/timesync-frontend-flask
Entry file: None
Scanned: 2016-10-25 15:10:05.045291
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/osuosl/timesync-frontend-flask.

Miserlou/serverless-imagehost
https://github.com/Miserlou/serverless-imagehost
Entry file: serverless-imagehost/my_app.py
Scanned: 2016-10-25 15:10:06.361106
No vulnerabilities found.


Python-Project-Simple/flask-blog
https://github.com/Python-Project-Simple/flask-blog
Entry file: flask-blog/app/__init__.py
Scanned: 2016-10-25 15:10:07.814695
No vulnerabilities found.


narakai/flaskblog
https://github.com/narakai/flaskblog
Entry file: flaskblog/app/app.py
Scanned: 2016-10-25 15:10:14.884021
Vulnerability 1:
File: flaskblog/app/helpers.py
 > User input at line 5, trigger word "get(": 
	page = request.args.get('page')
Reassigned in: 
	File: flaskblog/app/helpers.py
	 > Line 7: page = int(page)
	File: flaskblog/app/helpers.py
	 > Line 9: page = 1
	File: flaskblog/app/helpers.py
	 > Line 10: object_list = query.paginate(page, paginate_by)
File: flaskblog/app/helpers.py
 > reaches line 11, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template(template_name,object_list=object_list, context)

Vulnerability 2:
File: flaskblog/app/entries/blueprint.py
 > User input at line 52, trigger word "files[": 
	image_file = request.files['file']
Reassigned in: 
	File: flaskblog/app/entries/blueprint.py
	 > Line 53: filename = os.path.join(app.config['IMAGES_DIR'], secure_filename(image_file.filename))
File: flaskblog/app/entries/blueprint.py
 > reaches line 55, trigger word "flash(": 
	flash('Saved %s' % os.path.basename(filename), 'success')

Vulnerability 3:
File: flaskblog/app/entries/forms.py
 > User input at line 71, trigger word ".data": 
	entry = Entry.query.filter(Entry.status == Entry.STATUS_PUBLIC & Entry.id == self.entry_id.data).first()
File: flaskblog/app/entries/forms.py
 > reaches line 71, trigger word "filter(": 
	entry = Entry.query.filter(Entry.status == Entry.STATUS_PUBLIC & Entry.id == self.entry_id.data).first()



josepablob/flasktaskr
https://github.com/josepablob/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:10:15.424882
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

adrianneperedo/flaskr
https://github.com/adrianneperedo/flaskr
Entry file: None
Scanned: 2016-10-25 15:10:16.450296
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/adrianneperedo/flaskr.

mirukushake/flaskr
https://github.com/mirukushake/flaskr
Entry file: None
Scanned: 2016-10-25 15:10:16.946740
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mirukushake/flaskr.

wangduanyang/flasky
https://github.com/wangduanyang/flasky
Entry file: None
Scanned: 2016-10-25 15:10:17.462103
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

darrenhankins/flaskr
https://github.com/darrenhankins/flaskr
Entry file: None
Scanned: 2016-10-25 15:10:17.958546
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/darrenhankins/flaskr.

tim1978/flasktaskr
https://github.com/tim1978/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:10:18.465595
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

DXZ/flaskr
https://github.com/DXZ/flaskr
Entry file: None
Scanned: 2016-10-25 15:10:18.999248
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/DXZ/flaskr.

zhangyuhaomei/flasky
https://github.com/zhangyuhaomei/flasky
Entry file: None
Scanned: 2016-10-25 15:10:19.509317
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hellohuangjin/flaskblog
https://github.com/hellohuangjin/flaskblog
Entry file: flaskblog/app/__init__.py
Scanned: 2016-10-25 15:10:20.979061
No vulnerabilities found.


Looncall/Flaskr
https://github.com/Looncall/Flaskr
Entry file: Flaskr/flaskr/app.py
Scanned: 2016-10-25 15:10:22.261695
No vulnerabilities found.


schen2011/flaskandazure
https://github.com/schen2011/flaskandazure
Entry file: flaskandazure/FlaskWebProject3/FlaskWebProject3/__init__.py
Scanned: 2016-10-25 15:10:26.248977
No vulnerabilities found.


gyonghua/flasktaskr
https://github.com/gyonghua/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:10:26.761280
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

coolmile23/flaskr
https://github.com/coolmile23/flaskr
Entry file: None
Scanned: 2016-10-25 15:10:27.267046
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/coolmile23/flaskr.

Rothschild0120/flaskyblog
https://github.com/Rothschild0120/flaskyblog
Entry file: flaskyblog/app/__init__.py
Scanned: 2016-10-25 15:10:30.170181
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

keer2345/flasky
https://github.com/keer2345/flasky
Entry file: None
Scanned: 2016-10-25 15:10:30.697350
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MRamakri/flaskworkshop
https://github.com/MRamakri/flaskworkshop
Entry file: flaskworkshop/app.py
Scanned: 2016-10-25 15:10:32.095352
No vulnerabilities found.


islandev/flaskweb
https://github.com/islandev/flaskweb
Entry file: flaskweb/hello.py
Scanned: 2016-10-25 15:10:42.120015
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

PansFortress/flasktasker
https://github.com/PansFortress/flasktasker
Entry file: flasktasker/views.py
Scanned: 2016-10-25 15:10:43.567514
No vulnerabilities found.


olegzhoglo/flasktaskr
https://github.com/olegzhoglo/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:10:44.079967
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

imhuwq/flasky
https://github.com/imhuwq/flasky
Entry file: None
Scanned: 2016-10-25 15:10:44.594212
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Robotwing/flaskweb
https://github.com/Robotwing/flaskweb
Entry file: flaskweb/app/__init__.py
Scanned: 2016-10-25 15:10:47.766788
No vulnerabilities found.


CBR09/flaskapp
https://github.com/CBR09/flaskapp
Entry file: None
Scanned: 2016-10-25 15:10:48.277927
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/CBR09/flaskapp.

neo1218/m2m
https://github.com/neo1218/m2m
Entry file: m2m/m2m/app/__init__.py
Scanned: 2016-10-25 15:10:59.738034
No vulnerabilities found.


Kriordan/flasktaskr
https://github.com/Kriordan/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:11:00.248609
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

antonsoroko/flaskapimongo
https://github.com/antonsoroko/flaskapimongo
Entry file: flaskapimongo/flaskapimongo/__init__.py
Scanned: 2016-10-25 15:11:01.839424
No vulnerabilities found.


haoweibo1987/flasker
https://github.com/haoweibo1987/flasker
Entry file: flasker/app/__init__.py
Scanned: 2016-10-25 15:11:12.921409
No vulnerabilities found.


egonvb/flaskplayground
https://github.com/egonvb/flaskplayground
Entry file: flaskplayground/api.py
Scanned: 2016-10-25 15:11:20.094208
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jeffreybergman/flasktaskr
https://github.com/jeffreybergman/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:11:20.670438
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhkmxx9302013/flaskmysql
https://github.com/zhkmxx9302013/flaskmysql
Entry file: flaskmysql/flaskmysql.py
Scanned: 2016-10-25 15:11:22.000004
No vulnerabilities found.


xiaomao361/flaskr
https://github.com/xiaomao361/flaskr
Entry file: None
Scanned: 2016-10-25 15:11:22.521304
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/xiaomao361/flaskr.

zixuzhang/flasky
https://github.com/zixuzhang/flasky
Entry file: None
Scanned: 2016-10-25 15:11:23.077553
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

stalwart201/flaskimgupload
https://github.com/stalwart201/flaskimgupload
Entry file: flaskimgupload/upload.py
Scanned: 2016-10-25 15:11:24.357102
Vulnerability 1:
File: flaskimgupload/upload.py
 > User input at line 19, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: flaskimgupload/upload.py
	 > Line 21: filename = secure_filename(file.filename)
	File: flaskimgupload/upload.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = '
    <!doctype html>
    <title>Upload new File</title>
    <h1>Upload new File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=Upload>
    </form>
    '
File: flaskimgupload/upload.py
 > reaches line 23, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 2:
File: flaskimgupload/upload.py
 > User input at line 19, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: flaskimgupload/upload.py
	 > Line 21: filename = secure_filename(file.filename)
	File: flaskimgupload/upload.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = '
    <!doctype html>
    <title>Upload new File</title>
    <h1>Upload new File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=Upload>
    </form>
    '
File: flaskimgupload/upload.py
 > reaches line 23, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))



marcabomb/flasktaskr
https://github.com/marcabomb/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:11:24.870435
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

alvaro893/flaskcinemaapp
https://github.com/alvaro893/flaskcinemaapp
Entry file: flaskcinemaapp/FlaskWebProject/__init__.py
Scanned: 2016-10-25 15:11:27.712105
No vulnerabilities found.


yuyiwei305/flaskr
https://github.com/yuyiwei305/flaskr
Entry file: None
Scanned: 2016-10-25 15:11:28.232010
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yuyiwei305/flaskr.

czy1238677/flasky
https://github.com/czy1238677/flasky
Entry file: None
Scanned: 2016-10-25 15:11:28.741467
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

liteng123/flaskr
https://github.com/liteng123/flaskr
Entry file: None
Scanned: 2016-10-25 15:11:29.746096
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/liteng123/flaskr.

Pink-Moon/flaskr
https://github.com/Pink-Moon/flaskr
Entry file: None
Scanned: 2016-10-25 15:11:30.767584
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Pink-Moon/flaskr.

mcmcgonagle/flasktaskr2
https://github.com/mcmcgonagle/flasktaskr2
Entry file: flasktaskr2/project/views.py
Scanned: 2016-10-25 15:11:32.578127
No vulnerabilities found.


pchartrand/FlaskTemp
https://github.com/pchartrand/FlaskTemp
Entry file: FlaskTemp/tempreport.py
Scanned: 2016-10-25 15:11:35.175848
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

salazar35/FlaskWeb
https://github.com/salazar35/FlaskWeb
Entry file: FlaskWeb/Flask Web Development.py
Scanned: 2016-10-25 15:11:36.485402
No vulnerabilities found.


uklineale/flaskTut
https://github.com/uklineale/flaskTut
Entry file: None
Scanned: 2016-10-25 15:11:47.164902
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MarHelen/FlaskLogin
https://github.com/MarHelen/FlaskLogin
Entry file: FlaskLogin/sql_declarative.py
Scanned: 2016-10-25 15:11:55.025510
Vulnerability 1:
File: FlaskLogin/first.py
 > User input at line 63, trigger word "get(": 
	email = request.form.get('email')
Reassigned in: 
	File: FlaskLogin/first.py
	 > Line 70: user = User(email, request.form.get('pw'))
File: FlaskLogin/first.py
 > reaches line 65, trigger word "filter(": 
	temp_user_set = User.query.filter(User.email == email).first()



AlexFransis/FlaskyProject
https://github.com/AlexFransis/FlaskyProject
Entry file: FlaskyProject/app/__init__.py
Scanned: 2016-10-25 15:11:56.747366
No vulnerabilities found.


azureappserviceoss/FlaskAzure
https://github.com/azureappserviceoss/FlaskAzure
Entry file: FlaskAzure/FlaskWebProject1/__init__.py
Scanned: 2016-10-25 15:12:03.320710
No vulnerabilities found.


yhappy/FlaskProjects
https://github.com/yhappy/FlaskProjects
Entry file: FlaskProjects/FlaskProjects.py
Scanned: 2016-10-25 15:12:04.628926
No vulnerabilities found.


saurabh1e/FlaskStructure
https://github.com/saurabh1e/FlaskStructure
Entry file: FlaskStructure/src/utils/__init__.py
Scanned: 2016-10-25 15:12:05.973449
No vulnerabilities found.


tangza/FlaskAPP
https://github.com/tangza/FlaskAPP
Entry file: None
Scanned: 2016-10-25 15:12:13.645015
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

AlexGrek/FlaskLib
https://github.com/AlexGrek/FlaskLib
Entry file: FlaskLib/FlaskLib/FlaskLib/__init__.py
Scanned: 2016-10-25 15:12:17.614196
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

daveweber/FlaskBar
https://github.com/daveweber/FlaskBar
Entry file: FlaskBar/index.py
Scanned: 2016-10-25 15:12:18.925182
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

retozero/FlaskDemo
https://github.com/retozero/FlaskDemo
Entry file: FlaskDemo/flaskr/flaskr.py
Scanned: 2016-10-25 15:12:20.778896
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

danleyb2/flaskMe
https://github.com/danleyb2/flaskMe
Entry file: flaskMe/flaskREST.py
Scanned: 2016-10-25 15:12:22.165787
Vulnerability 1:
File: flaskMe/flaskREST.py
 > User input at line 73, trigger word "get(": 
	name = data.get('name')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 76, trigger word "execute(": 
	db.execute('INSERT INTO cars (name, color) VALUES (?,?)', [name, color])

Vulnerability 2:
File: flaskMe/flaskREST.py
 > User input at line 74, trigger word "get(": 
	color = data.get('color')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 76, trigger word "execute(": 
	db.execute('INSERT INTO cars (name, color) VALUES (?,?)', [name, color])

Vulnerability 3:
File: flaskMe/flaskREST.py
 > User input at line 73, trigger word "get(": 
	name = data.get('name')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 78, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(dict(name=name, color=color))

Vulnerability 4:
File: flaskMe/flaskREST.py
 > User input at line 74, trigger word "get(": 
	color = data.get('color')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 78, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(dict(name=name, color=color))



Rikka-chan/flaskCharts
https://github.com/Rikka-chan/flaskCharts
Entry file: None
Scanned: 2016-10-25 15:12:29.492061
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hattwick/flask2
https://github.com/hattwick/flask2
Entry file: flask2/flask2mod-template.py
Scanned: 2016-10-25 15:12:30.817198
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

narakai/FlaskServer
https://github.com/narakai/FlaskServer
Entry file: FlaskServer/flaskServer.py
Scanned: 2016-10-25 15:12:32.192505
No vulnerabilities found.


ljxxcaijing/flask
https://github.com/ljxxcaijing/flask
Entry file: None
Scanned: 2016-10-25 15:12:33.920222
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

PacktPublishing/Mastering-Flask
https://github.com/PacktPublishing/Mastering-Flask
Entry file: Mastering-Flask/Chapter 13_Code/Chapter 13/webapp/__init__.py
Scanned: 2016-10-25 15:12:37.089923
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

migrateup/flaskr
https://github.com/migrateup/flaskr
Entry file: None
Scanned: 2016-10-25 15:12:37.625157
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/migrateup/flaskr.

reparadocs/Flask-HelloWorldBot
https://github.com/reparadocs/Flask-HelloWorldBot
Entry file: Flask-HelloWorldBot/HelloWorldBot.py
Scanned: 2016-10-25 15:12:39.013549
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

singingwolfboy/flask-sse
https://github.com/singingwolfboy/flask-sse
Entry file: flask-sse/tests/conftest.py
Scanned: 2016-10-25 15:12:40.385259
No vulnerabilities found.


amateurPotato/flask
https://github.com/amateurPotato/flask
Entry file: None
Scanned: 2016-10-25 15:12:40.938186
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ahdrage/flask
https://github.com/ahdrage/flask
Entry file: None
Scanned: 2016-10-25 15:12:41.482897
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

acouderc/flask
https://github.com/acouderc/flask
Entry file: None
Scanned: 2016-10-25 15:12:41.979117
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Goomah/flask
https://github.com/Goomah/flask
Entry file: None
Scanned: 2016-10-25 15:12:42.515962
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pankajpant22/flask
https://github.com/pankajpant22/flask
Entry file: None
Scanned: 2016-10-25 15:12:43.081567
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ultramarine7/flask
https://github.com/ultramarine7/flask
Entry file: None
Scanned: 2016-10-25 15:12:43.598071
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

od210291jpv/flask
https://github.com/od210291jpv/flask
Entry file: None
Scanned: 2016-10-25 15:12:44.104147
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

aintmetho/flask
https://github.com/aintmetho/flask
Entry file: None
Scanned: 2016-10-25 15:12:44.610892
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MonPower/Flask
https://github.com/MonPower/Flask
Entry file: None
Scanned: 2016-10-25 15:12:45.159795
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

josephmuli/Flask
https://github.com/josephmuli/Flask
Entry file: None
Scanned: 2016-10-25 15:12:45.674719
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MapEntryManagement/flask
https://github.com/MapEntryManagement/flask
Entry file: None
Scanned: 2016-10-25 15:12:48.204193
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wenzi0595/flask
https://github.com/wenzi0595/flask
Entry file: None
Scanned: 2016-10-25 15:12:55.729481
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

singingwolfboy/build-a-flask-api
https://github.com/singingwolfboy/build-a-flask-api
Entry file: build-a-flask-api/step08/puppy.py
Scanned: 2016-10-25 15:13:01.708826
Vulnerability 1:
File: build-a-flask-api/step08/puppy.py
 > User input at line 25, trigger word "get(": 
	name = request.form.get('name')
Reassigned in: 
	File: build-a-flask-api/step08/puppy.py
	 > Line 31: slug = slugify(name)
	File: build-a-flask-api/step08/puppy.py
	 > Line 34: puppy = Puppy(slug=slug, name=name, image_url=image_url)
	File: build-a-flask-api/step08/puppy.py
	 > Line 43: resp.headers['Location'] = location
File: build-a-flask-api/step08/puppy.py
 > reaches line 40, trigger word "url_for(": 
	location = url_for('get_puppy',slug=slug)



sunary/flask-optimize
https://github.com/sunary/flask-optimize
Entry file: flask-optimize/tests/flask_app.py
Scanned: 2016-10-25 15:13:05.115100
No vulnerabilities found.


klen/flask-pw
https://github.com/klen/flask-pw
Entry file: flask-pw/tests.py
Scanned: 2016-10-25 15:13:08.086750
No vulnerabilities found.


janukobytsch/flask-autofixture
https://github.com/janukobytsch/flask-autofixture
Entry file: flask-autofixture/tests/conftest.py
Scanned: 2016-10-25 15:13:15.651640
No vulnerabilities found.


underdogio/flask-graylog
https://github.com/underdogio/flask-graylog
Entry file: flask-graylog/example/app.py
Scanned: 2016-10-25 15:13:18.977445
No vulnerabilities found.


adyouri/flask-basics
https://github.com/adyouri/flask-basics
Entry file: flask-basics/lesson5/app.py
Scanned: 2016-10-25 15:13:20.364140
No vulnerabilities found.


KujiraProject/Flask-PAM
https://github.com/KujiraProject/Flask-PAM
Entry file: Flask-PAM/example/www.py
Scanned: 2016-10-25 15:13:21.760850
No vulnerabilities found.


colingorrie/flask-boilerplate
https://github.com/colingorrie/flask-boilerplate
Entry file: None
Scanned: 2016-10-25 15:13:23.441057
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/colingorrie/flask-boilerplate.

TwilioDevEd/automated-survey-flask
https://github.com/TwilioDevEd/automated-survey-flask
Entry file: automated-survey-flask/automated_survey_flask/__init__.py
Scanned: 2016-10-25 15:13:34.999744
No vulnerabilities found.


gucxufangling/flask--
https://github.com/gucxufangling/flask--
Entry file: flask--/app/__init__.py
Scanned: 2016-10-25 15:13:43.956247
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

paceko/shopping-site
https://github.com/paceko/shopping-site
Entry file: shopping-site/shoppingsite.py
Scanned: 2016-10-25 15:13:46.204937
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kashyap32/flask-REST
https://github.com/kashyap32/flask-REST
Entry file: None
Scanned: 2016-10-25 15:13:47.468808
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/kashyap32/flask-REST.

pragmaticcoders/flask-react-seed
https://github.com/pragmaticcoders/flask-react-seed
Entry file: None
Scanned: 2016-10-25 15:13:48.845032
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pragmaticcoders/flask-react-seed.

danil3d/flaskblog
https://github.com/danil3d/flaskblog
Entry file: None
Scanned: 2016-10-25 15:13:50.761152
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/danil3d/flaskblog.

rahulballal/flasktemplate
https://github.com/rahulballal/flasktemplate
Entry file: flasktemplate/app.py
Scanned: 2016-10-25 15:13:52.038478
No vulnerabilities found.


rsk7/flaskapp
https://github.com/rsk7/flaskapp
Entry file: None
Scanned: 2016-10-25 15:13:52.551127
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rsk7/flaskapp.

ailtoncsf/flasklearn
https://github.com/ailtoncsf/flasklearn
Entry file: flasklearn/flask-basics/app.py
Scanned: 2016-10-25 15:14:02.704870
No vulnerabilities found.


VimDong/flaskme
https://github.com/VimDong/flaskme
Entry file: flaskme/app/__init__.py
Scanned: 2016-10-25 15:14:04.316346
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

dimdal/flasktutorial
https://github.com/dimdal/flasktutorial
Entry file: None
Scanned: 2016-10-25 15:14:04.837866
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dimdal/flasktutorial.

axavio/flasky
https://github.com/axavio/flasky
Entry file: None
Scanned: 2016-10-25 15:14:05.340839
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bspaans/flaskal
https://github.com/bspaans/flaskal
Entry file: flaskal/flaskal/imports.py
Scanned: 2016-10-25 15:14:06.917488
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

stoodsteal/flasky
https://github.com/stoodsteal/flasky
Entry file: None
Scanned: 2016-10-25 15:14:07.428651
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

annoys-parrot/flaskbook
https://github.com/annoys-parrot/flaskbook
Entry file: flaskbook/application.py
Scanned: 2016-10-25 15:14:09.098722
Vulnerability 1:
File: flaskbook/user/views.py
 > User input at line 24, trigger word ".data": 
	user = User.objects.filter(username=form.username.data).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 37: user = None
File: flaskbook/user/views.py
 > reaches line 24, trigger word "filter(": 
	user = User.objects.filter(username=form.username.data).first()

Vulnerability 2:
File: flaskbook/user/views.py
 > User input at line 31, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = 'User logged in'
	File: flaskbook/user/views.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('user/login.html',form=form, error=error)
File: flaskbook/user/views.py
 > reaches line 33, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 3:
File: flaskbook/user/views.py
 > User input at line 47, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 49: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 62, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 4:
File: flaskbook/user/views.py
 > User input at line 49, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 62, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 5:
File: flaskbook/user/views.py
 > User input at line 47, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 49: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 63, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 6:
File: flaskbook/user/views.py
 > User input at line 49, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 63, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 7:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 90, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 8:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 106, trigger word "filter(": 
	if User.objects.filter(username=form.username.data.lower()).first():

Vulnerability 9:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 113, trigger word "filter(": 
	if User.objects.filter(email=form.email.data.lower()).first():

Vulnerability 10:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 126, trigger word "render_template(": 
	body_html = render_template('mail/user/change_email.html',user=user)

Vulnerability 11:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 127, trigger word "render_template(": 
	body_text = render_template('mail/user/change_email.txt',user=user)

Vulnerability 12:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 137, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user/edit.html',form=form, error=error, message=message, user=user)

Vulnerability 13:
File: flaskbook/user/views.py
 > User input at line 160, trigger word ".data": 
	user = User.objects.filter(email=form.email.data).first()
File: flaskbook/user/views.py
 > reaches line 160, trigger word "filter(": 
	user = User.objects.filter(email=form.email.data).first()

Vulnerability 14:
File: flaskbook/user/views.py
 > User input at line 160, trigger word ".data": 
	user = User.objects.filter(email=form.email.data).first()
File: flaskbook/user/views.py
 > reaches line 168, trigger word "render_template(": 
	body_html = render_template('mail/user/password_reset.html',user=user)

Vulnerability 15:
File: flaskbook/user/views.py
 > User input at line 160, trigger word ".data": 
	user = User.objects.filter(email=form.email.data).first()
File: flaskbook/user/views.py
 > reaches line 169, trigger word "render_template(": 
	body_text = render_template('mail/user/password_reset.txt',user=user)

Vulnerability 16:
File: flaskbook/user/views.py
 > User input at line 215, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
File: flaskbook/user/views.py
 > reaches line 215, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()



gene1wood/flaskoktaapp
https://github.com/gene1wood/flaskoktaapp
Entry file: flaskoktaapp/flaskoktaapp/__init__.py
Scanned: 2016-10-25 15:14:10.543313
Vulnerability 1:
File: flaskoktaapp/flaskoktaapp/__init__.py
 > User input at line 201, trigger word "form[": 
	url = request.form['RelayState']
File: flaskoktaapp/flaskoktaapp/__init__.py
 > reaches line 196, trigger word "url_for(": 
	url = url_for('user')

Vulnerability 2:
File: flaskoktaapp/flaskoktaapp/__init__.py
 > User input at line 201, trigger word "form[": 
	url = request.form['RelayState']
File: flaskoktaapp/flaskoktaapp/__init__.py
 > reaches line 204, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url)



yu66s/flaskr
https://github.com/yu66s/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:11.051317
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yu66s/flaskr.

xiaohu2015/Flasky
https://github.com/xiaohu2015/Flasky
Entry file: Flasky/Flasky.py
Scanned: 2016-10-25 15:14:15.593562
Vulnerability 1:
File: Flasky/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 31: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flasky/app/main/views.py
	 > Line 34: posts = pagination.items
	File: Flasky/app/main/views.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flasky/app/main/views.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: Flasky/app/main/views.py
 > User input at line 25, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 23: show_followed = False
	File: Flasky/app/main/views.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flasky/app/main/views.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: Flasky/app/main/views.py
 > User input at line 60, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 61: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flasky/app/main/views.py
	 > Line 64: posts = pagination.items
File: Flasky/app/main/views.py
 > reaches line 65, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: Flasky/app/main/views.py
 > User input at line 121, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 123: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: Flasky/app/main/views.py
	 > Line 124: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flasky/app/main/views.py
	 > Line 126: comments = pagination.items
	File: Flasky/app/main/views.py
	 > Line 120: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: Flasky/app/main/views.py
 > reaches line 127, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: Flasky/app/main/views.py
 > User input at line 186, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 187: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Flasky/app/main/views.py
	 > Line 189: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: Flasky/app/main/views.py
	 > Line 185: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flasky/app/main/views.py
 > reaches line 190, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: Flasky/app/main/views.py
 > User input at line 200, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 201: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Flasky/app/main/views.py
	 > Line 204: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: Flasky/app/main/views.py
	 > Line 199: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flasky/app/main/views.py
 > reaches line 206, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: Flasky/app/main/views.py
 > User input at line 215, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flasky/app/main/views.py
	 > Line 216: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flasky/app/main/views.py
	 > Line 218: comments = pagination.items
File: Flasky/app/main/views.py
 > reaches line 219, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



cwywang/flasky
https://github.com/cwywang/flasky
Entry file: None
Scanned: 2016-10-25 15:14:16.133263
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Sarmacid/flaskr
https://github.com/Sarmacid/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:16.639251
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Sarmacid/flaskr.

Julzmbugua/flasky
https://github.com/Julzmbugua/flasky
Entry file: None
Scanned: 2016-10-25 15:14:17.181867
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Maxwell-Ying/flaskbook
https://github.com/Maxwell-Ying/flaskbook
Entry file: flaskbook/app/__init__.py
Scanned: 2016-10-25 15:14:18.471289
Vulnerability 1:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 2:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 3:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 4:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 5:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 6:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 7:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 8:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 9:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 10:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 11:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 12:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 13:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 14:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 15:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 16:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 17:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 18:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 19:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 20:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 21:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 22:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 23:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 24:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 25:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 26:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 27:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 28:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 29:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 30:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 31:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 32:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 33:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 34:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 35:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 36:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 37:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 38:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 39:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 40:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 41:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 42:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 43:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 44:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 45:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 46:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 47:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 48:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 49:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 50:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 51:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 52:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 53:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 54:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 55:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 56:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())



skhe/flasky
https://github.com/skhe/flasky
Entry file: None
Scanned: 2016-10-25 15:14:18.989421
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jinxiaoyuan/flaskr
https://github.com/jinxiaoyuan/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:19.524918
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jinxiaoyuan/flaskr.

baloo98/flasky
https://github.com/baloo98/flasky
Entry file: None
Scanned: 2016-10-25 15:14:20.057958
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sanketg10/flaskapp
https://github.com/sanketg10/flaskapp
Entry file: None
Scanned: 2016-10-25 15:14:20.605899
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sanketg10/flaskapp.

wangxuan007/flasky
https://github.com/wangxuan007/flasky
Entry file: None
Scanned: 2016-10-25 15:14:21.156569
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lambdaplus/flasko
https://github.com/lambdaplus/flasko
Entry file: flasko/Flasko.py
Scanned: 2016-10-25 15:14:33.495929
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flasko/lib/python3.4/operator.py

fkirwin/flaskhelloworld
https://github.com/fkirwin/flaskhelloworld
Entry file: flaskhelloworld/hello_world.py
Scanned: 2016-10-25 15:14:41.406459
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wang7lu6qiang5/flasky
https://github.com/wang7lu6qiang5/flasky
Entry file: None
Scanned: 2016-10-25 15:14:41.940482
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ak042/flasktaskr
https://github.com/ak042/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:14:42.448024
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

thedrew82/flaskr
https://github.com/thedrew82/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:44.965062
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/thedrew82/flaskr.

allergier/flaskr
https://github.com/allergier/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:47.474750
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/allergier/flaskr.

shenmj053/flaskr
https://github.com/shenmj053/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:47.988534
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/shenmj053/flaskr.

neotrinity/flaskavro
https://github.com/neotrinity/flaskavro
Entry file: flaskavro/main.py
Scanned: 2016-10-25 15:14:50.304973
No vulnerabilities found.


SSUHan/flasktutorial
https://github.com/SSUHan/flasktutorial
Entry file: None
Scanned: 2016-10-25 15:14:50.821789
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SSUHan/flasktutorial.

ma53192190/flaskwork
https://github.com/ma53192190/flaskwork
Entry file: flaskwork/flaskwork.py
Scanned: 2016-10-25 15:14:52.106866
No vulnerabilities found.


zverxw13/flaskr
https://github.com/zverxw13/flaskr
Entry file: None
Scanned: 2016-10-25 15:14:52.652540
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zverxw13/flaskr.

Mendurim/flasktut
https://github.com/Mendurim/flasktut
Entry file: flasktut/hello.py
Scanned: 2016-10-25 15:14:53.954163
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zeroisme/flaskblog
https://github.com/zeroisme/flaskblog
Entry file: None
Scanned: 2016-10-25 15:15:03.528355
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zeroisme/flaskblog.

hoorn91/flaskproject
https://github.com/hoorn91/flaskproject
Entry file: flaskproject/app/hello.py
Scanned: 2016-10-25 15:15:05.899985
Vulnerability 1:
File: flaskproject/app/hello.py
 > User input at line 70, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: flaskproject/app/hello.py
 > reaches line 77, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



wanghaa/flasky
https://github.com/wanghaa/flasky
Entry file: None
Scanned: 2016-10-25 15:15:06.422856
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

HDking/flasktaskr
https://github.com/HDking/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:15:06.995218
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gjcooper/flaskprac
https://github.com/gjcooper/flaskprac
Entry file: flaskprac/app/__init__.py
Scanned: 2016-10-25 15:15:08.539944
No vulnerabilities found.


liuhuai0217/flasky
https://github.com/liuhuai0217/flasky
Entry file: None
Scanned: 2016-10-25 15:15:09.064317
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

deliveryyyyguy/flaskapp
https://github.com/deliveryyyyguy/flaskapp
Entry file: None
Scanned: 2016-10-25 15:15:10.577129
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/deliveryyyyguy/flaskapp.

omshankar1/flaskapp
https://github.com/omshankar1/flaskapp
Entry file: None
Scanned: 2016-10-25 15:15:11.090586
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/omshankar1/flaskapp.

maxwang051/flasktaskr
https://github.com/maxwang051/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:15:11.609428
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

aaron077/flaskblog
https://github.com/aaron077/flaskblog
Entry file: None
Scanned: 2016-10-25 15:15:16.155524
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/aaron077/flaskblog.

hoobalias/Flaskr
https://github.com/hoobalias/Flaskr
Entry file: Flaskr/flaskr_original.py
Scanned: 2016-10-25 15:15:17.469315
No vulnerabilities found.


joanna-solomiewicz/FlaskWorkshop
https://github.com/joanna-solomiewicz/FlaskWorkshop
Entry file: FlaskWorkshop/app.py
Scanned: 2016-10-25 15:15:24.053549
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskWorkshop/venv/lib/python3.5/operator.py

erk52/FlaskDynamics
https://github.com/erk52/FlaskDynamics
Entry file: FlaskDynamics/view.py
Scanned: 2016-10-25 15:15:25.397556
Vulnerability 1:
File: FlaskDynamics/view.py
 > User input at line 18, trigger word ".data": 
	result = phasePlot(form.XPrime.data, form.YPrime.data)
Reassigned in: 
	File: FlaskDynamics/view.py
	 > Line 20: result = None
File: FlaskDynamics/view.py
 > reaches line 22, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('new_view.html',form=form, result=result)



KentaYamada/flaskr2
https://github.com/KentaYamada/flaskr2
Entry file: flaskr2/__init__.py
Scanned: 2016-10-25 15:15:26.716419
No vulnerabilities found.


NapoleonYoung/FlaskWeb
https://github.com/NapoleonYoung/FlaskWeb
Entry file: FlaskWeb/MyFirstWebServer/app/__init__.py
Scanned: 2016-10-25 15:15:35.049583
Vulnerability 1:
File: FlaskWeb/MyFirstWebServer/app/main/views.py
 > User input at line 15, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: FlaskWeb/MyFirstWebServer/app/main/views.py
	 > Line 12: name = None
File: FlaskWeb/MyFirstWebServer/app/main/views.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, name=name)



DaBaiLi/FlaskBlog
https://github.com/DaBaiLi/FlaskBlog
Entry file: FlaskBlog/app/__init__.py
Scanned: 2016-10-25 15:15:36.615396
Vulnerability 1:
File: FlaskBlog/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 23: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 26: posts = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskBlog/app/main/views.py
 > reaches line 27, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: FlaskBlog/app/main/views.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 35: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 38: posts = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 39, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 3:
File: FlaskBlog/app/main/views.py
 > User input at line 98, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 100: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: FlaskBlog/app/main/views.py
	 > Line 102: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 105: comments = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 97: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: FlaskBlog/app/main/views.py
 > reaches line 106, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 4:
File: FlaskBlog/app/main/views.py
 > User input at line 131, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 132: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 135: comments = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 136, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



zhouyang2640/FlaskInit
https://github.com/zhouyang2640/FlaskInit
Entry file: FlaskInit/hello.py
Scanned: 2016-10-25 15:15:37.967707
No vulnerabilities found.


rmGuarachi/flaskTutorial
https://github.com/rmGuarachi/flaskTutorial
Entry file: flaskTutorial/webapp.py
Scanned: 2016-10-25 15:15:39.274791
No vulnerabilities found.


Thetides/FlaskyTut
https://github.com/Thetides/FlaskyTut
Entry file: FlaskyTut/app.py
Scanned: 2016-10-25 15:15:40.515106
No vulnerabilities found.


cs207-project/FlaskAPI
https://github.com/cs207-project/FlaskAPI
Entry file: FlaskAPI/app.py
Scanned: 2016-10-25 15:15:48.367416
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

tajihiro/FlaskBluemix
https://github.com/tajihiro/FlaskBluemix
Entry file: FlaskBluemix/index.py
Scanned: 2016-10-25 15:15:49.658512
No vulnerabilities found.


s3c0nDD/FlaskTutorial
https://github.com/s3c0nDD/FlaskTutorial
Entry file: FlaskTutorial/app/__init__.py
Scanned: 2016-10-25 15:15:50.881826
No vulnerabilities found.


HaarisKhan/FlaskDemos
https://github.com/HaarisKhan/FlaskDemos
Entry file: None
Scanned: 2016-10-25 15:15:57.655914
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hamartia0/FlaskWeb
https://github.com/hamartia0/FlaskWeb
Entry file: FlaskWeb/web3b.py
Scanned: 2016-10-25 15:16:05.250623
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

prrateekk/FlaskTesting
https://github.com/prrateekk/FlaskTesting
Entry file: FlaskTesting/hello.py
Scanned: 2016-10-25 15:16:11.799176
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskTesting/venv/lib/python2.7/sre_compile.py

kolapapa/flasky2
https://github.com/kolapapa/flasky2
Entry file: flasky2/app/__init__.py
Scanned: 2016-10-25 15:16:13.244672
No vulnerabilities found.


mion00/flaskSQLAlchemy
https://github.com/mion00/flaskSQLAlchemy
Entry file: flaskSQLAlchemy/app.py
Scanned: 2016-10-25 15:16:14.656427
Vulnerability 1:
File: flaskSQLAlchemy/app.py
 > User input at line 32, trigger word "get(": 
	service = request.args.get('service')
File: flaskSQLAlchemy/app.py
 > reaches line 34, trigger word "filter(": 
	users = User.query.filter(User.json.has_key(service)).all()



gnu4cn/flaskLearnings
https://github.com/gnu4cn/flaskLearnings
Entry file: flaskLearnings/demos/request_attributes.py
Scanned: 2016-10-25 15:16:25.535869
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

argenis2021/FlaskTutorial
https://github.com/argenis2021/FlaskTutorial
Entry file: FlaskTutorial/app/__init__.py
Scanned: 2016-10-25 15:16:27.284016
No vulnerabilities found.


ZaighumRajput/flaskPractice
https://github.com/ZaighumRajput/flaskPractice
Entry file: flaskPractice/chapter2/hello.py
Scanned: 2016-10-25 15:16:28.771838
No vulnerabilities found.


GriMel/FlaskFirst
https://github.com/GriMel/FlaskFirst
Entry file: FlaskFirst/app/__init__.py
Scanned: 2016-10-25 15:16:30.043183
No vulnerabilities found.


pepemontana7/flaskFinal
https://github.com/pepemontana7/flaskFinal
Entry file: flaskFinal/firstapp/hello.py
Scanned: 2016-10-25 15:16:31.300360
No vulnerabilities found.


KotiyaSenya/FlaskLearn
https://github.com/KotiyaSenya/FlaskLearn
Entry file: FlaskLearn/flask_learn/__init__.py
Scanned: 2016-10-25 15:16:32.845999
Vulnerability 1:
File: FlaskLearn/flask_learn/main/views/index.py
 > User input at line 10, trigger word "get(": 
	user_agent = request.headers.get('User-Agent')
File: FlaskLearn/flask_learn/main/views/index.py
 > reaches line 11, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',user_agent=user_agent, current_time=datetime.utcnow())



johnwheeler/flask-ask
https://github.com/johnwheeler/flask-ask
Entry file: flask-ask/samples/session/session.py
Scanned: 2016-10-25 15:16:36.367252
Vulnerability 1:
File: flask-ask/samples/session/session.py
 > User input at line 39, trigger word "get(": 
	color = session.attributes.get(COLOR_KEY)
Reassigned in: 
	File: flask-ask/samples/session/session.py
	 > Line 42: ret_MAYBE_FUNCTION_NAME = statement(statement_text).simple_card(card_title, statement_text)
	File: flask-ask/samples/session/session.py
	 > Line 45: ret_MAYBE_FUNCTION_NAME = question(question_text).reprompt(question_text).simple_card(card_title, question_text)
File: flask-ask/samples/session/session.py
 > reaches line 41, trigger word "render_template(": 
	statement_text = render_template('known_color_bye',color=color)



shn7798/FlaskZhihu
https://github.com/shn7798/FlaskZhihu
Entry file: FlaskZhihu/tests/test_orm.py
Scanned: 2016-10-25 15:16:38.118185
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhangsen1992/flask
https://github.com/zhangsen1992/flask
Entry file: None
Scanned: 2016-10-25 15:16:39.116377
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

luojiyin1987/flask
https://github.com/luojiyin1987/flask
Entry file: None
Scanned: 2016-10-25 15:16:39.610964
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chrislinan/flask
https://github.com/chrislinan/flask
Entry file: None
Scanned: 2016-10-25 15:16:40.125537
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lagougou/flask
https://github.com/lagougou/flask
Entry file: None
Scanned: 2016-10-25 15:16:40.629867
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ryanmthompson/flask
https://github.com/ryanmthompson/flask
Entry file: None
Scanned: 2016-10-25 15:16:41.145380
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Mufflerman/Flask
https://github.com/Mufflerman/Flask
Entry file: None
Scanned: 2016-10-25 15:16:41.673546
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tkirkland/Flask
https://github.com/tkirkland/Flask
Entry file: None
Scanned: 2016-10-25 15:16:42.193258
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

glrh111/flask
https://github.com/glrh111/flask
Entry file: None
Scanned: 2016-10-25 15:16:42.706399
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

parampara/flask
https://github.com/parampara/flask
Entry file: None
Scanned: 2016-10-25 15:16:43.249071
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

maxweiber/flask
https://github.com/maxweiber/flask
Entry file: None
Scanned: 2016-10-25 15:16:43.779490
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rakeshkirola/Flask
https://github.com/rakeshkirola/Flask
Entry file: None
Scanned: 2016-10-25 15:16:44.301388
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

caibitim/Flask
https://github.com/caibitim/Flask
Entry file: None
Scanned: 2016-10-25 15:16:44.819122
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

syntaxSizer/flask
https://github.com/syntaxSizer/flask
Entry file: None
Scanned: 2016-10-25 15:16:45.367726
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gabrielecker/Flask
https://github.com/gabrielecker/Flask
Entry file: None
Scanned: 2016-10-25 15:16:49.906554
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Dianalim209/flask
https://github.com/Dianalim209/flask
Entry file: None
Scanned: 2016-10-25 15:16:50.507169
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

moonoroman/flask
https://github.com/moonoroman/flask
Entry file: None
Scanned: 2016-10-25 15:16:52.017605
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ekusy/flask
https://github.com/ekusy/flask
Entry file: None
Scanned: 2016-10-25 15:16:58.569100
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gaurikatyagi/Flask
https://github.com/gaurikatyagi/Flask
Entry file: None
Scanned: 2016-10-25 15:17:06.101130
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mrffrm1234/flask
https://github.com/mrffrm1234/flask
Entry file: None
Scanned: 2016-10-25 15:17:12.621167
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rockaja/flask
https://github.com/rockaja/flask
Entry file: None
Scanned: 2016-10-25 15:17:14.138502
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bhops/flask
https://github.com/bhops/flask
Entry file: None
Scanned: 2016-10-25 15:17:15.654409
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ooohiroyukiooo/flask
https://github.com/ooohiroyukiooo/flask
Entry file: None
Scanned: 2016-10-25 15:17:26.169061
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

miguelgrinberg/flack
https://github.com/miguelgrinberg/flack
Entry file: flack/flack/__init__.py
Scanned: 2016-10-25 15:17:29.861562
Vulnerability 1:
File: flack/flack/api/messages.py
 > User input at line 36, trigger word "get(": 
	since = int(request.args.get('updated_since', '0'))
Reassigned in: 
	File: flack/flack/api/messages.py
	 > Line 40: since = day_ago
File: flack/flack/api/messages.py
 > reaches line 41, trigger word "filter(": 
	msgs = Message.query.filter(Message.updated_at > since).order_by(Message.updated_at)

Vulnerability 2:
File: flack/flack/api/users.py
 > User input at line 38, trigger word "get(": 
	users = users.filter_by(online=request.args.get('online') != '0')
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
File: flack/flack/api/users.py
 > reaches line 40, trigger word "filter(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))

Vulnerability 3:
File: flack/flack/api/users.py
 > User input at line 40, trigger word "get(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
	File: flack/flack/api/users.py
	 > Line 38: users = users.filter_by(online=request.args.get('online') != '0')
File: flack/flack/api/users.py
 > reaches line 40, trigger word "filter(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))

Vulnerability 4:
File: flack/flack/api/users.py
 > User input at line 38, trigger word "get(": 
	users = users.filter_by(online=request.args.get('online') != '0')
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
File: flack/flack/api/users.py
 > reaches line 42, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('users'[user.to_dict() for user in users.all()])

Vulnerability 5:
File: flack/flack/api/users.py
 > User input at line 40, trigger word "get(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
	File: flack/flack/api/users.py
	 > Line 38: users = users.filter_by(online=request.args.get('online') != '0')
File: flack/flack/api/users.py
 > reaches line 42, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('users'[user.to_dict() for user in users.all()])



enginebai/PyMessager
https://github.com/enginebai/PyMessager
Entry file: PyMessager/api.py
Scanned: 2016-10-25 15:17:31.220108
No vulnerabilities found.


TwilioDevEd/sms2fa-flask
https://github.com/TwilioDevEd/sms2fa-flask
Entry file: sms2fa-flask/sms2fa_flask/__init__.py
Scanned: 2016-10-25 15:17:35.927368
Vulnerability 1:
File: sms2fa-flask/sms2fa_flask/views.py
 > User input at line 51, trigger word "get(": 
	user = User.query.get(session.get('user_email', '')) or abort(401)
Reassigned in: 
	File: sms2fa-flask/sms2fa_flask/views.py
	 > Line 56: ret_MAYBE_FUNCTION_NAME = redirect(url_for('secret_page'))
File: sms2fa-flask/sms2fa_flask/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('confirmation.html',user=user)



RoseOu/Flask-learning
https://github.com/RoseOu/Flask-learning
Entry file: None
Scanned: 2016-10-25 15:17:44.111565
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

YUX-IO/gossl
https://github.com/YUX-IO/gossl
Entry file: gossl/app.py
Scanned: 2016-10-25 15:17:53.143134
No vulnerabilities found.


yetship/the-way-to-flask
https://github.com/yetship/the-way-to-flask
Entry file: the-way-to-flask/code/application/__init__.py
Scanned: 2016-10-25 15:17:56.449644
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

JoshData/parsey-mcparseface-server
https://github.com/JoshData/parsey-mcparseface-server
Entry file: parsey-mcparseface-server/server.py
Scanned: 2016-10-25 15:17:57.833487
No vulnerabilities found.


YUX-IO/uwsgi-nginx-flask-docker-for-sinaimg
https://github.com/YUX-IO/uwsgi-nginx-flask-docker-for-sinaimg
Entry file: uwsgi-nginx-flask-docker-for-sinaimg/flask/app/main.py
Scanned: 2016-10-25 15:18:00.765366
No vulnerabilities found.


patternexon/hello
https://github.com/patternexon/hello
Entry file: hello/hello.py
Scanned: 2016-10-25 15:18:09.224356
No vulnerabilities found.


yassipo/webservice
https://github.com/yassipo/webservice
Entry file: webservice/app.py
Scanned: 2016-10-25 15:18:10.548370
No vulnerabilities found.


tweddielin/flask-imsearch
https://github.com/tweddielin/flask-imsearch
Entry file: None
Scanned: 2016-10-25 15:22:33.344981
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/tweddielin/flask-imsearch.

datademofun/heroku-basic-flask
https://github.com/datademofun/heroku-basic-flask
Entry file: heroku-basic-flask/app.py
Scanned: 2016-10-25 15:22:38.270963
No vulnerabilities found.


simonbilskyrollins/Flask-Workshop
https://github.com/simonbilskyrollins/Flask-Workshop
Entry file: Flask-Workshop/step3.py
Scanned: 2016-10-25 15:22:39.583731
No vulnerabilities found.


amey-sam/Flask-MailGun
https://github.com/amey-sam/Flask-MailGun
Entry file: None
Scanned: 2016-10-25 15:22:41.411921
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/amey-sam/Flask-MailGun.

hadesong/flask_weather
https://github.com/hadesong/flask_weather
Entry file: flask_weather/app_package/__init__.py
Scanned: 2016-10-25 15:22:43.897356
No vulnerabilities found.


YUX-IO/flask-python351
https://github.com/YUX-IO/flask-python351
Entry file: flask-python351/sample-app/app.py
Scanned: 2016-10-25 15:22:45.245749
No vulnerabilities found.


DullSmile/flasky
https://github.com/DullSmile/flasky
Entry file: None
Scanned: 2016-10-25 15:22:45.770694
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

geochilmaru/flaskr
https://github.com/geochilmaru/flaskr
Entry file: None
Scanned: 2016-10-25 15:22:46.326243
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/geochilmaru/flaskr.

hejiangping/flaskr
https://github.com/hejiangping/flaskr
Entry file: None
Scanned: 2016-10-25 15:22:46.850734
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/hejiangping/flaskr.

ealesid/flaskbook
https://github.com/ealesid/flaskbook
Entry file: flaskbook/app/__init__.py
Scanned: 2016-10-25 15:22:58.574105
Vulnerability 1:
File: flaskbook/app/main/views.py
 > User input at line 19, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 27: pagination = query.order_by('-timestamp').paginate(page,per_page=current_app.config['FLASKBOOK_POSTS_PER_PAGE'], error_out=False)
	File: flaskbook/app/main/views.py
	 > Line 30: posts = pagination.items
	File: flaskbook/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskbook/app/main/views.py
 > reaches line 31, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: flaskbook/app/main/views.py
 > User input at line 22, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 20: show_followed = False
	File: flaskbook/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskbook/app/main/views.py
 > reaches line 31, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: flaskbook/app/main/views.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 40: pagination = Post.objects(author_id=user).order_by('-timestamp').paginate(page,per_page=current_app.config['FLASKBOOK_POSTS_PER_PAGE'], error_out=False)
	File: flaskbook/app/main/views.py
	 > Line 43: posts = pagination.items
File: flaskbook/app/main/views.py
 > reaches line 44, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: flaskbook/app/main/views.py
 > User input at line 118, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 120: page = Comment.objects(post_id=post).count() - 1 // current_app.config['FLASKBOOK_COMMENTS_PER_PAGE'] + 1
	File: flaskbook/app/main/views.py
	 > Line 121: pagination = Comment.objects(post_id=post).order_by('-timestamp').paginate(page,per_page=current_app.config['FLASKBOOK_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskbook/app/main/views.py
	 > Line 124: comments = pagination.items
	File: flaskbook/app/main/views.py
	 > Line 117: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=1))
File: flaskbook/app/main/views.py
 > reaches line 125, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: flaskbook/app/main/views.py
 > User input at line 183, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 184: pagination = Follow.objects(followed=user).paginate(page,per_page=current_app.config['FLASKBOOK_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskbook/app/main/views.py
	 > Line 187: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskbook/app/main/views.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskbook/app/main/views.py
 > reaches line 189, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: flaskbook/app/main/views.py
 > User input at line 199, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 200: pagination = Follow.objects(follower=user).paginate(page,per_page=current_app.config['FLASKBOOK_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskbook/app/main/views.py
	 > Line 203: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskbook/app/main/views.py
	 > Line 198: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskbook/app/main/views.py
 > reaches line 205, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: flaskbook/app/main/views.py
 > User input at line 229, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskbook/app/main/views.py
	 > Line 230: pagination = Comment.objects.order_by('-timestamp').paginate(page,per_page=current_app.config['FLASKBOOK_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskbook/app/main/views.py
	 > Line 233: comments = pagination.items
File: flaskbook/app/main/views.py
 > reaches line 234, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



jake-bladt/flasksandbox
https://github.com/jake-bladt/flasksandbox
Entry file: flasksandbox/app/app.py
Scanned: 2016-10-25 15:23:00.114722
Vulnerability 1:
File: flasksandbox/app/helpers.py
 > User input at line 4, trigger word "get(": 
	page = request.args.get('page')
Reassigned in: 
	File: flasksandbox/app/helpers.py
	 > Line 6: page = int(page)
	File: flasksandbox/app/helpers.py
	 > Line 8: page = 1
	File: flasksandbox/app/helpers.py
	 > Line 9: object_list = query.paginate(page, paginate_by)
File: flasksandbox/app/helpers.py
 > reaches line 10, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template(template_name,object_list=object_list, context)



yoophi/flaskygram
https://github.com/yoophi/flaskygram
Entry file: None
Scanned: 2016-10-25 15:23:02.115586
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yoophi/flaskygram.

Ifresher/Flaskr
https://github.com/Ifresher/Flaskr
Entry file: Flaskr/Flask.py
Scanned: 2016-10-25 15:23:03.456749
No vulnerabilities found.


andresmguk/flasktaskr
https://github.com/andresmguk/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:23:04.008346
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

minc-yang/flaskdemo
https://github.com/minc-yang/flaskdemo
Entry file: flaskdemo/flask_app2/my_app/__init__.py
Scanned: 2016-10-25 15:23:06.572611
Vulnerability 1:
File: flaskdemo/flask_app2/my_app/product/views.py
 > User input at line 17, trigger word "get(": 
	product = PRODUCTS.get(key)
File: flaskdemo/flask_app2/my_app/product/views.py
 > reaches line 20, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('product.html',product=product)



zmrow/flasktaskr
https://github.com/zmrow/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:23:07.098425
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Jpatcourtney/flasktasker
https://github.com/Jpatcourtney/flasktasker
Entry file: flasktasker/views.py
Scanned: 2016-10-25 15:23:08.598119
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

liyocee/flaskr
https://github.com/liyocee/flaskr
Entry file: None
Scanned: 2016-10-25 15:23:09.124422
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/liyocee/flaskr.

yanni-zhang/flaskweb
https://github.com/yanni-zhang/flaskweb
Entry file: flaskweb/app/__init__.py
Scanned: 2016-10-25 15:23:11.441169
Vulnerability 1:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskweb/app/api_1_0/users.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 14: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 17: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 19, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskweb/app/api_1_0/users.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 14: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 17: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskweb/app/api_1_0/users.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 14: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 17: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskweb/app/api_1_0/users.py
 > User input at line 33, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 34: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 36: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 37: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 40: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 39, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 8:
File: flaskweb/app/api_1_0/users.py
 > User input at line 33, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 34: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 36: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 37: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 40: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 42, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskweb/app/api_1_0/users.py
 > User input at line 33, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 34: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 36: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 37: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 40: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 43, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 10: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 12: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 13: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 16: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 15, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 10: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 12: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 13: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 16: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 18, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 10: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 12: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 13: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 16: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 19, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 35: pagination = post.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 37: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 38: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 41: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 40, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 35: pagination = post.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 37: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 38: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 41: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 43, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 35: pagination = post.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 37: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 38: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 41: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 44, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskweb/app/main/views.py
 > User input at line 24, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 22: show_followed = False
	File: flaskweb/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskweb/app/main/views.py
 > User input at line 29, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 30: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 33: posts = pagination.items
	File: flaskweb/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskweb/app/main/views.py
 > User input at line 56, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 57: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 60: posts = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 61, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flaskweb/app/main/views.py
 > User input at line 117, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 119: page = post.comments.count() - 1 / current_app.config['COMMENTS_PER_PAGE'] + 1
	File: flaskweb/app/main/views.py
	 > Line 120: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 123: comments = pagination.items
	File: flaskweb/app/main/views.py
	 > Line 116: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskweb/app/main/views.py
 > reaches line 124, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], comments=comments, form=form, pagination=pagination)

Vulnerability 20:
File: flaskweb/app/main/views.py
 > User input at line 179, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 180: pagination = user.followers.paginate(page,per_page=current_app.config['FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 183: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskweb/app/main/views.py
	 > Line 178: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 185, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='关注我的人', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flaskweb/app/main/views.py
 > User input at line 195, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 196: pagination = user.followed.paginate(page,per_page=current_app.config['FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 199: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskweb/app/main/views.py
	 > Line 194: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 201, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='我关注的人', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flaskweb/app/main/views.py
 > User input at line 209, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 210: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 213: comments = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 214, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



googoos/flasktaskr
https://github.com/googoos/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:23:11.984073
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lg31415/flaskr
https://github.com/lg31415/flaskr
Entry file: None
Scanned: 2016-10-25 15:23:12.524116
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/lg31415/flaskr.

AliceLanniste/Flasky
https://github.com/AliceLanniste/Flasky
Entry file: None
Scanned: 2016-10-25 15:23:14.192132
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/AliceLanniste/Flasky.

efrainmunoz/flasktaskr
https://github.com/efrainmunoz/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:23:14.716093
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

HansKramer/flaskr
https://github.com/HansKramer/flaskr
Entry file: None
Scanned: 2016-10-25 15:23:15.238881
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/HansKramer/flaskr.

shorian/flaskr
https://github.com/shorian/flaskr
Entry file: None
Scanned: 2016-10-25 15:23:15.992354
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/shorian/flaskr.

Jpatcourtney/flasktaskr
https://github.com/Jpatcourtney/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:23:16.523178
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

janejin8829/flaskangular-
https://github.com/janejin8829/flaskangular-
Entry file: None
Scanned: 2016-10-25 15:23:17.793944
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/janejin8829/flaskangular-.

ljxxcaijing/flaskblog
https://github.com/ljxxcaijing/flaskblog
Entry file: None
Scanned: 2016-10-25 15:23:18.331813
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ljxxcaijing/flaskblog.

mmoran0032/flaskwork
https://github.com/mmoran0032/flaskwork
Entry file: flaskwork/hello.py
Scanned: 2016-10-25 15:23:35.666066
No vulnerabilities found.


Maxwell-Ying/flaskbook
https://github.com/Maxwell-Ying/flaskbook
Entry file: flaskbook/app/__init__.py
Scanned: 2016-10-25 15:23:37.002436
Vulnerability 1:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 2:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 3:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 4:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 5:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 6:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 7:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 8:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 9:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 10:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 11:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 12:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 13:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 14:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 15:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 16:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 17:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 18:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 19:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 20:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 21:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 22:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 23:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 24:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 25:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 26:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 27:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 28:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 29:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 30:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 31:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 32:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 33:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 34:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 35:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 36:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 37:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 38:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 39:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 40:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 41:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 42:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 43:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 44:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 45:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 46:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 47:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 48:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 49:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 50:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 51:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 52:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 53:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 54:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 55:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 56:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())



bewithgaurav/flaskmap
https://github.com/bewithgaurav/flaskmap
Entry file: flaskmap/__init__.py
Scanned: 2016-10-25 15:23:53.582059
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

ansel333/flaskr
https://github.com/ansel333/flaskr
Entry file: None
Scanned: 2016-10-25 15:23:54.161866
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ansel333/flaskr.

ojgoyal/flaskr
https://github.com/ojgoyal/flaskr
Entry file: None
Scanned: 2016-10-25 15:23:54.690187
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ojgoyal/flaskr.

ordenador/flaskrestful
https://github.com/ordenador/flaskrestful
Entry file: flaskrestful/flaskrestful.py
Scanned: 2016-10-25 15:24:05.454671
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yvonnendutaw/flaskbook
https://github.com/yvonnendutaw/flaskbook
Entry file: flaskbook/app/__init__.py
Scanned: 2016-10-25 15:25:07.541735
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhangjiewang/flasky
https://github.com/zhangjiewang/flasky
Entry file: None
Scanned: 2016-10-25 15:25:08.076559
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Kathure/flasky
https://github.com/Kathure/flasky
Entry file: None
Scanned: 2016-10-25 15:25:08.597626
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

maxweiber/flaskr
https://github.com/maxweiber/flaskr
Entry file: None
Scanned: 2016-10-25 15:25:09.119481
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/maxweiber/flaskr.

zjl1110/flaskdemo
https://github.com/zjl1110/flaskdemo
Entry file: None
Scanned: 2016-10-25 15:25:17.353964
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

EricGarza/flaskbyexample
https://github.com/EricGarza/flaskbyexample
Entry file: flaskbyexample/app.py
Scanned: 2016-10-25 15:25:27.144835
No vulnerabilities found.


hoorn91/flaskproject
https://github.com/hoorn91/flaskproject
Entry file: flaskproject/app/hello.py
Scanned: 2016-10-25 15:25:28.509811
Vulnerability 1:
File: flaskproject/app/hello.py
 > User input at line 70, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: flaskproject/app/hello.py
 > reaches line 77, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



hongmaoxiao/flasky
https://github.com/hongmaoxiao/flasky
Entry file: None
Scanned: 2016-10-25 15:25:29.036716
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jiuhuandao/Flaskr
https://github.com/jiuhuandao/Flaskr
Entry file: Flaskr/flaskr.py
Scanned: 2016-10-25 15:25:30.510178
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

nrugas/flasky
https://github.com/nrugas/flasky
Entry file: None
Scanned: 2016-10-25 15:25:31.049116
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fromzeroedu/flaskbook
https://github.com/fromzeroedu/flaskbook
Entry file: flaskbook/application.py
Scanned: 2016-10-25 15:25:33.651484
Vulnerability 1:
File: flaskbook/home/views.py
 > User input at line 15, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/home/views.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = render_template('home/home.html')
File: flaskbook/home/views.py
 > reaches line 15, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 2:
File: flaskbook/home/views.py
 > User input at line 15, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/home/views.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = render_template('home/home.html')
File: flaskbook/home/views.py
 > reaches line 19, trigger word "filter(": 
	feed_messages = Feed.objects.filter(user=user).order_by('-create_date')[10]

Vulnerability 3:
File: flaskbook/home/views.py
 > User input at line 15, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/home/views.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = render_template('home/home.html')
File: flaskbook/home/views.py
 > reaches line 23, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('home/feed_home.html',user=user, form=form, feed_messages=feed_messages)

Vulnerability 4:
File: flaskbook/relationship/views.py
 > User input at line 14, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 18: rel = Relationship.get_relationship(logged_user, to_user)
	File: flaskbook/relationship/views.py
	 > Line 27: reverse_rel = Relationship.objects.get(from_user=to_user, to_user=logged_user)
File: flaskbook/relationship/views.py
 > reaches line 14, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 5:
File: flaskbook/relationship/views.py
 > User input at line 14, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 18: rel = Relationship.get_relationship(logged_user, to_user)
	File: flaskbook/relationship/views.py
	 > Line 27: reverse_rel = Relationship.objects.get(from_user=to_user, to_user=logged_user)
File: flaskbook/relationship/views.py
 > reaches line 41, trigger word "render_template(": 
	body_html = render_template('mail/relationship/added_friend.html',from_user=logged_user, to_user=to_user)

Vulnerability 6:
File: flaskbook/relationship/views.py
 > User input at line 14, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 18: rel = Relationship.get_relationship(logged_user, to_user)
	File: flaskbook/relationship/views.py
	 > Line 27: reverse_rel = Relationship.objects.get(from_user=to_user, to_user=logged_user)
File: flaskbook/relationship/views.py
 > reaches line 46, trigger word "render_template(": 
	body_text = render_template('mail/relationship/added_friend.txt',from_user=logged_user, to_user=to_user)

Vulnerability 7:
File: flaskbook/relationship/views.py
 > User input at line 67, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 71: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 67, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 8:
File: flaskbook/relationship/views.py
 > User input at line 67, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 71: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 74, trigger word "filter(": 
	rel = Relationship.objects.filter(from_user=logged_user, to_user=to_user).delete()

Vulnerability 9:
File: flaskbook/relationship/views.py
 > User input at line 67, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 71: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 77, trigger word "filter(": 
	reverse_rel = Relationship.objects.filter(from_user=to_user, to_user=logged_user).delete()

Vulnerability 10:
File: flaskbook/relationship/views.py
 > User input at line 91, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 95: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 91, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 11:
File: flaskbook/relationship/views.py
 > User input at line 91, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 95: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 99, trigger word "filter(": 
	rel = Relationship.objects.filter(from_user=logged_user, to_user=to_user).delete()

Vulnerability 12:
File: flaskbook/relationship/views.py
 > User input at line 91, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 95: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 102, trigger word "filter(": 
	reverse_rel = Relationship.objects.filter(from_user=to_user, to_user=logged_user).delete()

Vulnerability 13:
File: flaskbook/relationship/views.py
 > User input at line 123, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 127: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 123, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 14:
File: flaskbook/relationship/views.py
 > User input at line 123, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 127: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 131, trigger word "filter(": 
	rel = Relationship.objects.filter(from_user=logged_user, to_user=to_user).delete()

Vulnerability 15:
File: flaskbook/user/views.py
 > User input at line 25, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 27: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 40, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 16:
File: flaskbook/user/views.py
 > User input at line 27, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 40, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 17:
File: flaskbook/user/views.py
 > User input at line 25, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 27: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 41, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 18:
File: flaskbook/user/views.py
 > User input at line 27, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 41, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 19:
File: flaskbook/user/views.py
 > User input at line 57, trigger word ".data": 
	user = User.objects.filter(username=form.username.data).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 70: user = None
File: flaskbook/user/views.py
 > reaches line 57, trigger word "filter(": 
	user = User.objects.filter(username=form.username.data).first()

Vulnerability 20:
File: flaskbook/user/views.py
 > User input at line 64, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 68: ret_MAYBE_FUNCTION_NAME = redirect(url_for('home_app.home'))
	File: flaskbook/user/views.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = render_template('user/login.html',form=form, error=error)
File: flaskbook/user/views.py
 > reaches line 66, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 21:
File: flaskbook/user/views.py
 > User input at line 92, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 84: logged_user = None
	File: flaskbook/user/views.py
	 > Line 93: rel = Relationship.get_relationship(logged_user, user)
	File: flaskbook/user/views.py
	 > Line 85: rel = None
File: flaskbook/user/views.py
 > reaches line 92, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 22:
File: flaskbook/user/views.py
 > User input at line 92, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 84: logged_user = None
	File: flaskbook/user/views.py
	 > Line 93: rel = Relationship.get_relationship(logged_user, user)
	File: flaskbook/user/views.py
	 > Line 85: rel = None
File: flaskbook/user/views.py
 > reaches line 118, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user/profile.html',user=user, logged_user=logged_user, rel=rel, friends=friends, friends_total=friends_total, friends_page=friends_page, form=form, profile_messages=profile_messages)

Vulnerability 23:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 136, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 24:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 148, trigger word "filter(": 
	if User.objects.filter(username=form.username.data.lower()).first():

Vulnerability 25:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 154, trigger word "filter(": 
	if User.objects.filter(email=form.email.data.lower()).first():

Vulnerability 26:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 168, trigger word "render_template(": 
	body_html = render_template('mail/user/change_email.html',user=user)

Vulnerability 27:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 169, trigger word "render_template(": 
	body_text = render_template('mail/user/change_email.txt',user=user)

Vulnerability 28:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 180, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user/edit.html',form=form, error=error, message=message, user=user)

Vulnerability 29:
File: flaskbook/user/views.py
 > User input at line 203, trigger word ".data": 
	user = User.objects.filter(email=form.email.data.lower()).first()
File: flaskbook/user/views.py
 > reaches line 203, trigger word "filter(": 
	user = User.objects.filter(email=form.email.data.lower()).first()

Vulnerability 30:
File: flaskbook/user/views.py
 > User input at line 203, trigger word ".data": 
	user = User.objects.filter(email=form.email.data.lower()).first()
File: flaskbook/user/views.py
 > reaches line 212, trigger word "render_template(": 
	body_html = render_template('mail/user/password_reset.html',user=user)

Vulnerability 31:
File: flaskbook/user/views.py
 > User input at line 203, trigger word ".data": 
	user = User.objects.filter(email=form.email.data.lower()).first()
File: flaskbook/user/views.py
 > reaches line 213, trigger word "render_template(": 
	body_text = render_template('mail/user/password_reset.txt',user=user)

Vulnerability 32:
File: flaskbook/user/views.py
 > User input at line 261, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
File: flaskbook/user/views.py
 > reaches line 261, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 33:
File: flaskbook/feed/views.py
 > User input at line 119, trigger word "get(": 
	from_user = User.objects.get(username=session.get('username'))
File: flaskbook/feed/views.py
 > reaches line 122, trigger word "filter(": 
	existing_like = Message.objects.filter(parent=message_id, message_type=LIKE, from_user=from_user).count()



yanni-zh/flaskweb
https://github.com/yanni-zh/flaskweb
Entry file: flaskweb/app/__init__.py
Scanned: 2016-10-25 15:25:37.997444
Vulnerability 1:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskweb/app/api_1_0/users.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 14: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 17: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 19, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskweb/app/api_1_0/users.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 14: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 17: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskweb/app/api_1_0/users.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 14: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 17: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskweb/app/api_1_0/users.py
 > User input at line 33, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 34: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 36: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 37: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 40: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 39, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 8:
File: flaskweb/app/api_1_0/users.py
 > User input at line 33, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 34: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 36: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 37: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 40: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 42, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskweb/app/api_1_0/users.py
 > User input at line 33, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 34: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 36: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 37: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 40: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 43, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 10: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 12: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 13: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 16: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 15, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 10: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 12: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 13: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 16: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 18, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 10: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 12: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 13: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 16: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 19, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 35: pagination = post.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 37: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 38: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 41: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 40, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 35: pagination = post.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 37: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 38: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 41: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 43, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 35: pagination = post.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 37: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 38: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 41: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 44, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskweb/app/main/views.py
 > User input at line 41, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 39: show_followed = False
File: flaskweb/app/main/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',posts=posts, Post=Post, amount=amount, comments=comments, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskweb/app/main/views.py
 > User input at line 46, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 47: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 50: posts = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',posts=posts, Post=Post, amount=amount, comments=comments, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskweb/app/main/views.py
 > User input at line 81, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 82: posts_pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 85: posts = posts_pagination.items
	File: flaskweb/app/main/views.py
	 > Line 86: comments_pagination = user.comments.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 89: comments = comments_pagination.items
File: flaskweb/app/main/views.py
 > reaches line 90, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, Post=Post, posts_pagination=posts_pagination, comments=comments, comments_pagination=comments_pagination)

Vulnerability 19:
File: flaskweb/app/main/views.py
 > User input at line 144, trigger word ".data": 
	post = Post(title=form.title.data, body=form.body.data, author=current_user._get_current_object())
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 155: ret_MAYBE_FUNCTION_NAME = render_template('add_post.html',form=form, title='添加文章')
File: flaskweb/app/main/views.py
 > reaches line 154, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id))

Vulnerability 20:
File: flaskweb/app/main/views.py
 > User input at line 144, trigger word ".data": 
	post = Post(title=form.title.data, body=form.body.data, author=current_user._get_current_object())
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 155: ret_MAYBE_FUNCTION_NAME = render_template('add_post.html',form=form, title='添加文章')
File: flaskweb/app/main/views.py
 > reaches line 154, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id))

Vulnerability 21:
File: flaskweb/app/main/views.py
 > User input at line 200, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 202: page = post.comments.count() - 1 / current_app.config['COMMENTS_PER_PAGE'] + 1
	File: flaskweb/app/main/views.py
	 > Line 203: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 206: comments = pagination.items
	File: flaskweb/app/main/views.py
	 > Line 199: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskweb/app/main/views.py
 > reaches line 207, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',post=post, comments=comments, form=form, pagination=pagination)

Vulnerability 22:
File: flaskweb/app/main/views.py
 > User input at line 248, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 249: pagination = user.followers.paginate(page,per_page=current_app.config['FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 252: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskweb/app/main/views.py
	 > Line 247: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 254, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='关注我的人', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 23:
File: flaskweb/app/main/views.py
 > User input at line 264, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 265: pagination = user.followed.paginate(page,per_page=current_app.config['FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 268: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskweb/app/main/views.py
	 > Line 263: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 270, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='我关注的人', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 24:
File: flaskweb/app/main/views.py
 > User input at line 309, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 310: pagination = category.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 313: posts = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 314, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('category.html',id=id, posts=posts, pagination=pagination, categories=categories, title=category.name)



pcpianobar/flaskr
https://github.com/pcpianobar/flaskr
Entry file: None
Scanned: 2016-10-25 15:25:38.523141
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pcpianobar/flaskr.

mrdrms/flaskr
https://github.com/mrdrms/flaskr
Entry file: None
Scanned: 2016-10-25 15:25:39.028877
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mrdrms/flaskr.

fburkitt/flasktaskr
https://github.com/fburkitt/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:25:39.539458
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

asimonia/flasktaskr
https://github.com/asimonia/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:25:40.052994
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chestnutme/flaskie
https://github.com/chestnutme/flaskie
Entry file: flaskie/app/__init__.py
Scanned: 2016-10-25 15:25:42.314183
Vulnerability 1:
File: flaskie/app/main/views.py
 > User input at line 18, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 26: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 29: posts = pagination.items
	File: flaskie/app/main/views.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskie/app/main/views.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: flaskie/app/main/views.py
 > User input at line 21, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 19: show_followed = False
	File: flaskie/app/main/views.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskie/app/main/views.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: flaskie/app/main/views.py
 > User input at line 36, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 37: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 39: posts = pagination.items
File: flaskie/app/main/views.py
 > reaches line 40, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: flaskie/app/main/views.py
 > User input at line 95, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 97: page = post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flaskie/app/main/views.py
	 > Line 99: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 102: comments = pagination.items
	File: flaskie/app/main/views.py
	 > Line 94: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskie/app/main/views.py
 > reaches line 103, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: flaskie/app/main/views.py
 > User input at line 158, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 159: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 162: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskie/app/main/views.py
	 > Line 157: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
File: flaskie/app/main/views.py
 > reaches line 164, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: flaskie/app/main/views.py
 > User input at line 174, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 175: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'])
	File: flaskie/app/main/views.py
	 > Line 177: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskie/app/main/views.py
	 > Line 173: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
File: flaskie/app/main/views.py
 > reaches line 179, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)



fengyu225/flaskr
https://github.com/fengyu225/flaskr
Entry file: None
Scanned: 2016-10-25 15:25:42.857115
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/fengyu225/flaskr.

jbussdieker/flaskr
https://github.com/jbussdieker/flaskr
Entry file: None
Scanned: 2016-10-25 15:25:43.419094
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jbussdieker/flaskr.

sisyphus1993/flaskreview
https://github.com/sisyphus1993/flaskreview
Entry file: flaskreview/app/__init__.py
Scanned: 2016-10-25 15:25:45.295532
Vulnerability 1:
File: flaskreview/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskreview/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskreview/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskreview/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskreview/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskreview/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskreview/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskreview/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskreview/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskreview/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskreview/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskreview/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskreview/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskreview/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskreview/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskreview/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskreview/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskreview/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskreview/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskreview/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskreview/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskreview/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskreview/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskreview/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskreview/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskreview/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskreview/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskreview/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flaskreview/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskreview/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskreview/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskreview/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskreview/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskreview/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskreview/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskreview/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskreview/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskreview/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskreview/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskreview/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskreview/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskreview/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskreview/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskreview/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskreview/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskreview/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskreview/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskreview/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskreview/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskreview/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskreview/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskreview/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskreview/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskreview/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskreview/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskreview/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskreview/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskreview/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskreview/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskreview/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskreview/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskreview/app/main/views.py
 > User input at line 21, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 29: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=20, error_out=False)
	File: flaskreview/app/main/views.py
	 > Line 31: posts = pagination.items
	File: flaskreview/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskreview/app/main/views.py
 > reaches line 32, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskreview/app/main/views.py
 > User input at line 24, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 22: show_followed = False
	File: flaskreview/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskreview/app/main/views.py
 > reaches line 32, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskreview/app/main/views.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 40: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=20, error_out=False)
	File: flaskreview/app/main/views.py
	 > Line 42: posts = pagination.items
File: flaskreview/app/main/views.py
 > reaches line 43, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flaskreview/app/main/views.py
 > User input at line 102, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 104: page = post.comments.count() - 1 // 20 + 1
	File: flaskreview/app/main/views.py
	 > Line 105: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=20, error_out=False)
	File: flaskreview/app/main/views.py
	 > Line 107: comments = pagination.items
	File: flaskreview/app/main/views.py
	 > Line 101: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskreview/app/main/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flaskreview/app/main/views.py
 > User input at line 167, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 168: pagination = user.followers.paginate(page,per_page=20, error_out=False)
	File: flaskreview/app/main/views.py
	 > Line 170: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskreview/app/main/views.py
	 > Line 166: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskreview/app/main/views.py
 > reaches line 172, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flaskreview/app/main/views.py
 > User input at line 183, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 184: pagination = user.followed.paginate(page,per_page=20, error_out=False)
	File: flaskreview/app/main/views.py
	 > Line 186: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskreview/app/main/views.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskreview/app/main/views.py
 > reaches line 188, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flaskreview/app/main/views.py
 > User input at line 213, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskreview/app/main/views.py
	 > Line 214: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=20, error_out=False)
	File: flaskreview/app/main/views.py
	 > Line 217: comments = pagination.items
File: flaskreview/app/main/views.py
 > reaches line 218, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



richardqlin/flaskralchemy
https://github.com/richardqlin/flaskralchemy
Entry file: None
Scanned: 2016-10-25 15:25:46.733171
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/richardqlin/flaskralchemy.

mikomwang/flaskr
https://github.com/mikomwang/flaskr
Entry file: None
Scanned: 2016-10-25 15:25:47.253426
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mikomwang/flaskr.

anngle/flaskweb
https://github.com/anngle/flaskweb
Entry file: flaskweb/hello2.py
Scanned: 2016-10-25 15:25:48.880202
Vulnerability 1:
File: flaskweb/app/main/views.py
 > User input at line 21, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 22: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=3, error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 24: posts = pagination.items
	File: flaskweb/app/main/views.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
	File: flaskweb/app/main/views.py
	 > Line 20: posts = Post.query.order_by(Post.timestamp.desc()).all()
File: flaskweb/app/main/views.py
 > reaches line 25, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)



Aprimus1/flasktaskr
https://github.com/Aprimus1/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:25:49.400350
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cuttlesoft/flask-bitmapist
https://github.com/cuttlesoft/flask-bitmapist
Entry file: flask-bitmapist/tests/conftest.py
Scanned: 2016-10-25 15:25:54.896809
No vulnerabilities found.


Riffstation/flaskutilsexample
https://github.com/Riffstation/flaskutilsexample
Entry file: flaskutilsexample/src/app/__init__.py
Scanned: 2016-10-25 15:25:56.355993
No vulnerabilities found.


meloalright/flask
https://github.com/meloalright/flask
Entry file: None
Scanned: 2016-10-25 15:25:57.390782
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

paulgoblin/flask
https://github.com/paulgoblin/flask
Entry file: None
Scanned: 2016-10-25 15:26:06.924516
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tayan-serna/flask
https://github.com/tayan-serna/flask
Entry file: None
Scanned: 2016-10-25 15:26:08.464569
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dolv/Flask
https://github.com/dolv/Flask
Entry file: None
Scanned: 2016-10-25 15:26:08.995084
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Aslkayn/flask
https://github.com/Aslkayn/flask
Entry file: None
Scanned: 2016-10-25 15:26:09.504204
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Mamun-dueee/flask
https://github.com/Mamun-dueee/flask
Entry file: None
Scanned: 2016-10-25 15:26:10.020122
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gisumwa/Flask
https://github.com/gisumwa/Flask
Entry file: None
Scanned: 2016-10-25 15:26:18.585266
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhouleian/flask
https://github.com/zhouleian/flask
Entry file: None
Scanned: 2016-10-25 15:26:28.116421
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

virtue1990/flask
https://github.com/virtue1990/flask
Entry file: None
Scanned: 2016-10-25 15:26:29.641280
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dhaval38/Flask
https://github.com/dhaval38/Flask
Entry file: None
Scanned: 2016-10-25 15:26:30.186137
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

nppat/Flask
https://github.com/nppat/Flask
Entry file: None
Scanned: 2016-10-25 15:26:31.818793
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dmitry-moroz/flask
https://github.com/dmitry-moroz/flask
Entry file: None
Scanned: 2016-10-25 15:26:32.327809
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

TeamDroneFireman/Flask
https://github.com/TeamDroneFireman/Flask
Entry file: None
Scanned: 2016-10-25 15:26:34.849130
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sushmit86/Flask
https://github.com/sushmit86/Flask
Entry file: None
Scanned: 2016-10-25 15:26:39.394854
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

vorkos/flask
https://github.com/vorkos/flask
Entry file: None
Scanned: 2016-10-25 15:26:39.923482
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

timmyreilly/intro-to-flask
https://github.com/timmyreilly/intro-to-flask
Entry file: intro-to-flask/hello.py
Scanned: 2016-10-25 15:26:43.146695
No vulnerabilities found.


Revolution1/Flask-WhooshAlchemyPlus
https://github.com/Revolution1/Flask-WhooshAlchemyPlus
Entry file: Flask-WhooshAlchemyPlus/test/test_all.py
Scanned: 2016-10-25 15:26:44.943717
No vulnerabilities found.


sloria/flask-konch
https://github.com/sloria/flask-konch
Entry file: flask-konch/example_app/hello.py
Scanned: 2016-10-25 15:26:46.241252
No vulnerabilities found.


cloverstd/flask-wechatpy
https://github.com/cloverstd/flask-wechatpy
Entry file: flask-wechatpy/demo.py
Scanned: 2016-10-25 15:26:48.115713
No vulnerabilities found.


postrational/rest_api_demo
https://github.com/postrational/rest_api_demo
Entry file: rest_api_demo/rest_api_demo/app.py
Scanned: 2016-10-25 15:26:50.112747
Vulnerability 1:
File: rest_api_demo/rest_api_demo/api/blog/business.py
 > User input at line 8, trigger word "get(": 
	category_id = data.get('category_id')
File: rest_api_demo/rest_api_demo/api/blog/business.py
 > reaches line 9, trigger word "filter(": 
	category = Category.query.filter(Category.id == category_id).one()

Vulnerability 2:
File: rest_api_demo/rest_api_demo/api/blog/business.py
 > User input at line 19, trigger word "get(": 
	category_id = data.get('category_id')
File: rest_api_demo/rest_api_demo/api/blog/business.py
 > reaches line 20, trigger word "filter(": 
	post.category = Category.query.filter(Category.id == category_id).one()



patternexon/hello
https://github.com/patternexon/hello
Entry file: hello/hello.py
Scanned: 2016-10-25 15:26:57.850304
No vulnerabilities found.


QuentinMoss/reimagined-computing-machine
https://github.com/QuentinMoss/reimagined-computing-machine
Entry file: reimagined-computing-machine/app/__init__.py
Scanned: 2016-10-25 15:26:59.195968
No vulnerabilities found.


13923858795/Tutorial
https://github.com/13923858795/Tutorial
Entry file: Tutorial/my/app/__init__.py
Scanned: 2016-10-25 15:27:07.091368
Vulnerability 1:
File: Tutorial/my/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 30: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Tutorial/my/app/main/views.py
	 > Line 33: posts = pagination.items
	File: Tutorial/my/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Tutorial/my/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: Tutorial/my/app/main/views.py
 > User input at line 25, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 23: show_followed = False
	File: Tutorial/my/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Tutorial/my/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: Tutorial/my/app/main/views.py
 > User input at line 40, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 41: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Tutorial/my/app/main/views.py
	 > Line 44: posts = pagination.items
File: Tutorial/my/app/main/views.py
 > reaches line 45, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: Tutorial/my/app/main/views.py
 > User input at line 109, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 111: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: Tutorial/my/app/main/views.py
	 > Line 113: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Tutorial/my/app/main/views.py
	 > Line 116: comments = pagination.items
	File: Tutorial/my/app/main/views.py
	 > Line 108: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: Tutorial/my/app/main/views.py
 > reaches line 117, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: Tutorial/my/app/main/views.py
 > User input at line 176, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 177: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Tutorial/my/app/main/views.py
	 > Line 180: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: Tutorial/my/app/main/views.py
	 > Line 175: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Tutorial/my/app/main/views.py
 > reaches line 182, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: Tutorial/my/app/main/views.py
 > User input at line 193, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 194: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Tutorial/my/app/main/views.py
	 > Line 197: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: Tutorial/my/app/main/views.py
	 > Line 192: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Tutorial/my/app/main/views.py
 > reaches line 199, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: Tutorial/my/app/main/views.py
 > User input at line 231, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Tutorial/my/app/main/views.py
	 > Line 232: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Tutorial/my/app/main/views.py
	 > Line 235: comments = pagination.items
File: Tutorial/my/app/main/views.py
 > reaches line 236, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



szparag3/flask-hello-world
https://github.com/szparag3/flask-hello-world
Entry file: None
Scanned: 2016-10-25 15:27:14.631803
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

DanceCats/DanceCat
https://github.com/DanceCats/DanceCat
Entry file: DanceCat/DanceCat/__init__.py
Scanned: 2016-10-25 15:27:21.006936
Vulnerability 1:
File: DanceCat/DanceCat/Views.py
 > User input at line 252, trigger word "form[": 
	triggered_job = QueryDataJob.query.get_or_404(request.form['id'])
Reassigned in: 
	File: DanceCat/DanceCat/Views.py
	 > Line 256: tracker = TrackJobRun(triggered_job.job_id)
File: DanceCat/DanceCat/Views.py
 > reaches line 269, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('ack''tracker_id'Truetracker.track_job_run_id)

Vulnerability 2:
File: DanceCat/DanceCat/Socket.py
 > User input at line 45, trigger word "get(": 
	connection_id = received_data.get('connectionId', 0)
Reassigned in: 
	File: DanceCat/DanceCat/Socket.py
	 > Line 55: running_connection = Connection.query.get(connection_id)
	File: DanceCat/DanceCat/Socket.py
	 > Line 58: connector = DatabaseConnector(running_connection.type, running_connection.db_config_generator(),sql_data_style=True, dict_format=True, timeout=config.get('DB_TIMEOUT', 60))
	File: DanceCat/DanceCat/Socket.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''data''header''seq'0ret_dataconnector.columns_nameruntime)
	File: DanceCat/DanceCat/Socket.py
	 > Line 81: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''data''seq''error''error_ext'-1'None'runtimestr(exception)[str(exception.trace_back)])
	File: DanceCat/DanceCat/Socket.py
	 > Line 90: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Connection not found!')
	File: DanceCat/DanceCat/Socket.py
	 > Line 97: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Wrong data received!')
	File: DanceCat/DanceCat/Socket.py
	 > Line 49: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Query is required!')
File: DanceCat/DanceCat/Socket.py
 > reaches line 68, trigger word "execute(": 
	connector.execute(query)

Vulnerability 3:
File: DanceCat/DanceCat/Socket.py
 > User input at line 46, trigger word "get(": 
	query = received_data.get('query', '')
File: DanceCat/DanceCat/Socket.py
 > reaches line 68, trigger word "execute(": 
	connector.execute(query)

Vulnerability 4:
File: DanceCat/DanceCat/Socket.py
 > User input at line 55, trigger word "get(": 
	running_connection = Connection.query.get(connection_id)
Reassigned in: 
	File: DanceCat/DanceCat/Socket.py
	 > Line 58: connector = DatabaseConnector(running_connection.type, running_connection.db_config_generator(),sql_data_style=True, dict_format=True, timeout=config.get('DB_TIMEOUT', 60))
	File: DanceCat/DanceCat/Socket.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''data''header''seq'0ret_dataconnector.columns_nameruntime)
	File: DanceCat/DanceCat/Socket.py
	 > Line 81: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''data''seq''error''error_ext'-1'None'runtimestr(exception)[str(exception.trace_back)])
	File: DanceCat/DanceCat/Socket.py
	 > Line 90: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Connection not found!')
	File: DanceCat/DanceCat/Socket.py
	 > Line 97: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Wrong data received!')
	File: DanceCat/DanceCat/Socket.py
	 > Line 49: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Query is required!')
File: DanceCat/DanceCat/Socket.py
 > reaches line 68, trigger word "execute(": 
	connector.execute(query)

Vulnerability 5:
File: DanceCat/DanceCat/Socket.py
 > User input at line 58, trigger word "get(": 
	connector = DatabaseConnector(running_connection.type, running_connection.db_config_generator(),sql_data_style=True, dict_format=True, timeout=config.get('DB_TIMEOUT', 60))
Reassigned in: 
	File: DanceCat/DanceCat/Socket.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''data''header''seq'0ret_dataconnector.columns_nameruntime)
	File: DanceCat/DanceCat/Socket.py
	 > Line 81: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''data''seq''error''error_ext'-1'None'runtimestr(exception)[str(exception.trace_back)])
	File: DanceCat/DanceCat/Socket.py
	 > Line 90: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Connection not found!')
	File: DanceCat/DanceCat/Socket.py
	 > Line 97: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Wrong data received!')
	File: DanceCat/DanceCat/Socket.py
	 > Line 49: ret_MAYBE_FUNCTION_NAME = emit(Constants.WS_QUERY_SEND, 'status''seq''error'-1runtime'Query is required!')
File: DanceCat/DanceCat/Socket.py
 > reaches line 68, trigger word "execute(": 
	connector.execute(query)

Vulnerability 6:
File: DanceCat/DanceCat/JobWorker.py
 > User input at line 91, trigger word "get(": 
	job = QueryDataJob.query.get(job_id)
Reassigned in: 
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 99: db_connector = DatabaseConnector(job.Connection.type, job.Connection.db_config_generator(),sql_data_style=False, dict_format=False, timeout=Constants.JOB_FEATURE_QUERY_TIME_OUT in jobjob[Constants.JOB_FEATURE_QUERY_TIME_OUT]config.get('DB_TIMEOUT', 0))
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 111: results = 'header''rows'db_connector.columns_namedb_connector.fetch_all()
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 135: ret_MAYBE_FUNCTION_NAME = results
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 153: ret_MAYBE_FUNCTION_NAME = None
File: DanceCat/DanceCat/JobWorker.py
 > reaches line 110, trigger word "execute(": 
	db_connector.execute(job.query_string)

Vulnerability 7:
File: DanceCat/DanceCat/JobWorker.py
 > User input at line 99, trigger word "get(": 
	db_connector = DatabaseConnector(job.Connection.type, job.Connection.db_config_generator(),sql_data_style=False, dict_format=False, timeout=Constants.JOB_FEATURE_QUERY_TIME_OUT in jobjob[Constants.JOB_FEATURE_QUERY_TIME_OUT]config.get('DB_TIMEOUT', 0))
Reassigned in: 
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 111: results = 'header''rows'db_connector.columns_namedb_connector.fetch_all()
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 135: ret_MAYBE_FUNCTION_NAME = results
	File: DanceCat/DanceCat/JobWorker.py
	 > Line 153: ret_MAYBE_FUNCTION_NAME = None
File: DanceCat/DanceCat/JobWorker.py
 > reaches line 110, trigger word "execute(": 
	db_connector.execute(job.query_string)



menghao2015/flask_blog
https://github.com/menghao2015/flask_blog
Entry file: flask_blog/app/__init__.py
Scanned: 2016-10-25 15:27:24.790851
Vulnerability 1:
File: flask_blog/app/main/views.py
 > User input at line 16, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 17: pagination = Post.query.filter_by(category_id=tag.id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 19: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 22: ret_MAYBE_FUNCTION_NAME = render_template('empty_index.html')
File: flask_blog/app/main/views.py
 > reaches line 20, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',index=True, posts=posts, lables=lables, Post=Post, pagination=pagination, mark='index')

Vulnerability 2:
File: flask_blog/app/main/views.py
 > User input at line 30, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 31: pagination = Post.query.filter_by(lable_id=lable_id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 33: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 36: ret_MAYBE_FUNCTION_NAME = render_template('empty_index.html')
File: flask_blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',index=True, posts=posts, lables=lables, Post=Post, pagination=pagination, lable=lable, mark='lables')

Vulnerability 3:
File: flask_blog/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 45: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 47: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = render_template('empty_index.html')
File: flask_blog/app/main/views.py
 > reaches line 48, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',index=True, posts=posts, lables=lables, Post=Post, pagination=pagination, mark='all')

Vulnerability 4:
File: flask_blog/app/main/views.py
 > User input at line 60, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 61: pagination = Post.query.filter_by(category_id=tag.id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 63: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('empty_index.html')
File: flask_blog/app/main/views.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',index=True, posts=posts, lables=lables, Post=Post, pagination=pagination, mark='mind_study')

Vulnerability 5:
File: flask_blog/app/main/views.py
 > User input at line 75, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 76: pagination = Post.query.filter_by(category_id=tag.id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 78: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 81: ret_MAYBE_FUNCTION_NAME = render_template('empty_index.html')
File: flask_blog/app/main/views.py
 > reaches line 79, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',index=True, posts=posts, lables=lables, Post=Post, pagination=pagination, mark='others')

Vulnerability 6:
File: flask_blog/app/main/views.py
 > User input at line 90, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 91: pagination = Post.query.filter_by(category_id=tag.id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 93: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 96: ret_MAYBE_FUNCTION_NAME = render_template('empty_index.html')
File: flask_blog/app/main/views.py
 > reaches line 94, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',index=True, posts=posts, lables=lables, Post=Post, pagination=pagination, mark='bug')



mussaimo/auth-flask
https://github.com/mussaimo/auth-flask
Entry file: auth-flask/app.py
Scanned: 2016-10-25 15:27:30.087897
No vulnerabilities found.


AmarKalabic/Football-Stream-Finder--Flask-
https://github.com/AmarKalabic/Football-Stream-Finder--Flask-
Entry file: Football-Stream-Finder--Flask-/main.py
Scanned: 2016-10-25 15:27:31.550084
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

YUX-IO/flask-python351
https://github.com/YUX-IO/flask-python351
Entry file: flask-python351/sample-app/app.py
Scanned: 2016-10-25 15:27:32.889207
No vulnerabilities found.


tuppa/flaskapp
https://github.com/tuppa/flaskapp
Entry file: None
Scanned: 2016-10-25 15:27:33.407109
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/tuppa/flaskapp.

quyip8818/flaskrestful
https://github.com/quyip8818/flaskrestful
Entry file: flaskrestful/server/model_cloudsql.py
Scanned: 2016-10-25 15:27:34.810810
No vulnerabilities found.


dribnet/flaskapp
https://github.com/dribnet/flaskapp
Entry file: None
Scanned: 2016-10-25 15:27:35.333135
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dribnet/flaskapp.

gzeinieh/flaskr
https://github.com/gzeinieh/flaskr
Entry file: None
Scanned: 2016-10-25 15:27:35.864095
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/gzeinieh/flaskr.

rhildreth/flaskbook
https://github.com/rhildreth/flaskbook
Entry file: flaskbook/hello.py
Scanned: 2016-10-25 15:27:44.146906
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

gandhk/flasklearn
https://github.com/gandhk/flasklearn
Entry file: flasklearn/main.py
Scanned: 2016-10-25 15:27:45.562343
No vulnerabilities found.


Apophus/flaskdb
https://github.com/Apophus/flaskdb
Entry file: flaskdb/fdb.py
Scanned: 2016-10-25 15:27:46.919675
No vulnerabilities found.


TacticalGoat/flasktest
https://github.com/TacticalGoat/flasktest
Entry file: flasktest/app/__init__.py
Scanned: 2016-10-25 15:27:48.312157
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

WayneChen1987/flasky
https://github.com/WayneChen1987/flasky
Entry file: None
Scanned: 2016-10-25 15:27:48.842048
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bwghughes/flaskdev
https://github.com/bwghughes/flaskdev
Entry file: flaskdev/hello.py
Scanned: 2016-10-25 15:27:50.702913
Vulnerability 1:
File: flaskdev/tests.py
 > User input at line 10, trigger word "get(": 
	res = client.get(url_for('hello_world'))
File: flaskdev/tests.py
 > reaches line 10, trigger word "url_for(": 
	res = client.get(url_for('hello_world'))



matinde/flasktaskr
https://github.com/matinde/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:27:51.238918
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

William0423/flaskybooklearn
https://github.com/William0423/flaskybooklearn
Entry file: flaskybooklearn/app/__init__.py
Scanned: 2016-10-25 15:27:53.035203
Vulnerability 1:
File: flaskybooklearn/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskybooklearn/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskybooklearn/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskybooklearn/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskybooklearn/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskybooklearn/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskybooklearn/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskybooklearn/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskybooklearn/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_user_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskybooklearn/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskybooklearn/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_user_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskybooklearn/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskybooklearn/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskybooklearn/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 46: next = None
File: flaskybooklearn/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_user_followed_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flaskybooklearn/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 46: next = None
File: flaskybooklearn/app/api_1_0/users.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_user_followed_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskybooklearn/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskybooklearn/app/api_1_0/users.py
	 > Line 46: next = None
File: flaskybooklearn/app/api_1_0/users.py
 > reaches line 50, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskybooklearn/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskybooklearn/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskybooklearn/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskybooklearn/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskybooklearn/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskybooklearn/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskybooklearn/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskybooklearn/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_post_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskybooklearn/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskybooklearn/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_post_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskybooklearn/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskybooklearn/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskybooklearn/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskybooklearn/app/main/views.py
 > User input at line 21, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 29: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/main/views.py
	 > Line 32: posts = pagination.items
	File: flaskybooklearn/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskybooklearn/app/main/views.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskybooklearn/app/main/views.py
 > User input at line 24, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 22: show_followed = False
	File: flaskybooklearn/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskybooklearn/app/main/views.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskybooklearn/app/main/views.py
 > User input at line 40, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 41: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/main/views.py
	 > Line 44: posts = pagination.items
File: flaskybooklearn/app/main/views.py
 > reaches line 45, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flaskybooklearn/app/main/views.py
 > User input at line 104, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 106: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flaskybooklearn/app/main/views.py
	 > Line 108: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/main/views.py
	 > Line 111: comments = pagination.items
	File: flaskybooklearn/app/main/views.py
	 > Line 103: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskybooklearn/app/main/views.py
 > reaches line 112, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flaskybooklearn/app/main/views.py
 > User input at line 171, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 172: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/main/views.py
	 > Line 175: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskybooklearn/app/main/views.py
	 > Line 170: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskybooklearn/app/main/views.py
 > reaches line 177, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flaskybooklearn/app/main/views.py
 > User input at line 188, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 189: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/main/views.py
	 > Line 192: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskybooklearn/app/main/views.py
	 > Line 187: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskybooklearn/app/main/views.py
 > reaches line 194, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flaskybooklearn/app/main/views.py
 > User input at line 219, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskybooklearn/app/main/views.py
	 > Line 220: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskybooklearn/app/main/views.py
	 > Line 223: comments = pagination.items
File: flaskybooklearn/app/main/views.py
 > reaches line 224, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



powerlanguage/flasktaskr
https://github.com/powerlanguage/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:27:53.559808
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cmacro/flaskblog
https://github.com/cmacro/flaskblog
Entry file: None
Scanned: 2016-10-25 15:27:54.090032
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/cmacro/flaskblog.

vrofze/flasky
https://github.com/vrofze/flasky
Entry file: None
Scanned: 2016-10-25 15:27:54.604422
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ccsaber/flasker
https://github.com/ccsaber/flasker
Entry file: flasker/app/__init__.py
Scanned: 2016-10-25 15:27:56.631273
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

IronFist16/flasky
https://github.com/IronFist16/flasky
Entry file: None
Scanned: 2016-10-25 15:27:57.137857
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bsdtux/flaskblog
https://github.com/bsdtux/flaskblog
Entry file: None
Scanned: 2016-10-25 15:27:58.655226
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/bsdtux/flaskblog.

terryllowery/flasktaskr
https://github.com/terryllowery/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:28:00.170405
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

moerekh/flaskyflaskssy
https://github.com/moerekh/flaskyflaskssy
Entry file: flaskyflaskssy/flasky.py
Scanned: 2016-10-25 15:28:06.893048
No vulnerabilities found.


Gre4tWhite/Flasknightmare
https://github.com/Gre4tWhite/Flasknightmare
Entry file: Flasknightmare/app/__init__.py
Scanned: 2016-10-25 15:28:12.700215
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

vinay13/Flaskngular
https://github.com/vinay13/Flaskngular
Entry file: Flaskngular/flask_app.py
Scanned: 2016-10-25 15:28:14.133302
No vulnerabilities found.


enricobacis/flaskey
https://github.com/enricobacis/flaskey
Entry file: flaskey/app.py
Scanned: 2016-10-25 15:28:16.682979
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

nehamarne/flaskdemo
https://github.com/nehamarne/flaskdemo
Entry file: None
Scanned: 2016-10-25 15:28:22.205792
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ejakait/flaskpro
https://github.com/ejakait/flaskpro
Entry file: None
Scanned: 2016-10-25 15:28:36.049118
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wrzto/flasky
https://github.com/wrzto/flasky
Entry file: None
Scanned: 2016-10-25 15:28:36.613452
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

William0423/flaskylearn
https://github.com/William0423/flaskylearn
Entry file: flaskylearn/app/__init__.py
Scanned: 2016-10-25 15:28:38.087103
No vulnerabilities found.


bhsantos11/flaskwebapp
https://github.com/bhsantos11/flaskwebapp
Entry file: flaskwebapp/flaskwebsite/__init__.py
Scanned: 2016-10-25 15:28:39.510087
No vulnerabilities found.


jerodestapa/flasktodo
https://github.com/jerodestapa/flasktodo
Entry file: flasktodo/views.py
Scanned: 2016-10-25 15:28:41.012131
No vulnerabilities found.


uptownjimmy/flasktaskr
https://github.com/uptownjimmy/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:28:41.545948
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kirazz/flaskywebblog
https://github.com/kirazz/flaskywebblog
Entry file: flaskywebblog/git/webblog/app/__init__.py
Scanned: 2016-10-25 15:28:44.832656
Vulnerability 1:
File: flaskywebblog/git/webblog/app/main/views.py
 > User input at line 19, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 20: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=5, error_out=False)
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 22: posts = pagination.items
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskywebblog/git/webblog/app/main/views.py
 > reaches line 23, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: flaskywebblog/git/webblog/app/main/views.py
 > User input at line 91, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 93: page = post.comments.count() - 1 // 5 + 1
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 95: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=5, error_out=False)
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 97: comments = pagination.items
	File: flaskywebblog/git/webblog/app/main/views.py
	 > Line 90: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskywebblog/git/webblog/app/main/views.py
 > reaches line 98, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)



vnxichow/flaskapp
https://github.com/vnxichow/flaskapp
Entry file: None
Scanned: 2016-10-25 15:28:45.377337
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/vnxichow/flaskapp.

getser/flaskapiblog
https://github.com/getser/flaskapiblog
Entry file: flaskapiblog/__init__.py
Scanned: 2016-10-25 15:28:46.771879
Vulnerability 1:
File: flaskapiblog/views.py
 > User input at line 112, trigger word "get(": 
	post = Post.query.get(post_id)
File: flaskapiblog/views.py
 > reaches line 115, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('post'post._asdict())

Vulnerability 2:
File: flaskapiblog/views.py
 > User input at line 187, trigger word "get(": 
	email = request.json.get('email')
Reassigned in: 
	File: flaskapiblog/views.py
	 > Line 193: visitor = Visitor(email=email)
File: flaskapiblog/views.py
 > reaches line 197, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('email'visitor.email), 201, 'Location'url_for('get_visitor',visitor_id=visitor.id, _external=True))

Vulnerability 3:
File: flaskapiblog/views.py
 > User input at line 187, trigger word "get(": 
	email = request.json.get('email')
Reassigned in: 
	File: flaskapiblog/views.py
	 > Line 193: visitor = Visitor(email=email)
File: flaskapiblog/views.py
 > reaches line 197, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('email'visitor.email), 201, 'Location'url_for('get_visitor',visitor_id=visitor.id, _external=True))



Paopand1/flasktaskr
https://github.com/Paopand1/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:28:47.312619
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gabrielssilva/flasktasks
https://github.com/gabrielssilva/flasktasks
Entry file: flasktasks/flasktasks/__init__.py
Scanned: 2016-10-25 15:28:49.915174
Vulnerability 1:
File: flasktasks/flasktasks/views.py
 > User input at line 35, trigger word "get(": 
	mission = Mission.query.get_or_404(request.args.get('mission_id'))
Reassigned in: 
	File: flasktasks/flasktasks/views.py
	 > Line 33: mission = None
File: flasktasks/flasktasks/views.py
 > reaches line 44, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('task/index.html',tasks=tasks_by_status, mission=mission)

Vulnerability 2:
File: flasktasks/flasktasks/views.py
 > User input at line 96, trigger word "get(": 
	color = Color(int(request.form.get('color_id')))
Reassigned in: 
	File: flasktasks/flasktasks/views.py
	 > Line 99: tag = Tag(request.form.get('name'), color)
	File: flasktasks/flasktasks/views.py
	 > Line 104: colors = {color.name : color.value for color in Color}
	File: flasktasks/flasktasks/views.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = redirect(url_for('missions'))
File: flasktasks/flasktasks/views.py
 > reaches line 105, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tags/new.html',colors=colors)



playgrdstar/flaskapp
https://github.com/playgrdstar/flaskapp
Entry file: None
Scanned: 2016-10-25 15:28:50.429970
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/playgrdstar/flaskapp.

caspii/flaskr
https://github.com/caspii/flaskr
Entry file: None
Scanned: 2016-10-25 15:28:50.951876
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/caspii/flaskr.

tj621/flaskr
https://github.com/tj621/flaskr
Entry file: None
Scanned: 2016-10-25 15:28:51.470014
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/tj621/flaskr.

LinMingjie/flaskr
https://github.com/LinMingjie/flaskr
Entry file: None
Scanned: 2016-10-25 15:28:51.980795
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/LinMingjie/flaskr.

mayreeh/Flasky
https://github.com/mayreeh/Flasky
Entry file: None
Scanned: 2016-10-25 15:28:52.535166
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mayreeh/Flasky.

supor/flaskr
https://github.com/supor/flaskr
Entry file: None
Scanned: 2016-10-25 15:28:53.045470
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/supor/flaskr.

ridnarong/flasky
https://github.com/ridnarong/flasky
Entry file: None
Scanned: 2016-10-25 15:28:53.570451
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cjfoster10/flasktaskr
https://github.com/cjfoster10/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:28:54.086493
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pkml/flasktaskr
https://github.com/pkml/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:28:54.611787
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

davidwangv5/flasky
https://github.com/davidwangv5/flasky
Entry file: None
Scanned: 2016-10-25 15:28:55.133489
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rahulmkumar/flaskapp
https://github.com/rahulmkumar/flaskapp
Entry file: None
Scanned: 2016-10-25 15:28:55.652680
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rahulmkumar/flaskapp.

seangilleran/flasko
https://github.com/seangilleran/flasko
Entry file: flasko/flasko/__init__.py
Scanned: 2016-10-25 15:28:58.602601
Vulnerability 1:
File: flasko/flasko/blueprints/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasko/flasko/blueprints/views.py
	 > Line 23: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=10, error_out=False)
	File: flasko/flasko/blueprints/views.py
	 > Line 27: posts = pagination.items
	File: flasko/flasko/blueprints/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('views.index'))
File: flasko/flasko/blueprints/views.py
 > reaches line 28, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',disable_header=True, hello=random_post_question(), form=form, pagination=pagination, posts=posts, timestamp=datetime.utcnow())



weisongchen/flaskexercise
https://github.com/weisongchen/flaskexercise
Entry file: flaskexercise/hello.py
Scanned: 2016-10-25 15:29:06.898396
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskexercise/venv/lib/python2.7/sre_compile.py

weisongchen/flaskapp
https://github.com/weisongchen/flaskapp
Entry file: None
Scanned: 2016-10-25 15:29:07.583642
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/weisongchen/flaskapp.

chenglinguang/flaskky
https://github.com/chenglinguang/flaskky
Entry file: flaskky/hello1.py
Scanned: 2016-10-25 15:29:09.224331
No vulnerabilities found.


CharlieCheng2014/Flask-micro-flask
https://github.com/CharlieCheng2014/Flask-micro-flask
Entry file: Flask-micro-flask/app/__init__.py
Scanned: 2016-10-25 15:29:10.589498
No vulnerabilities found.


er3456qi/FlaskBlog
https://github.com/er3456qi/FlaskBlog
Entry file: FlaskBlog/app/__init__.py
Scanned: 2016-10-25 15:29:15.834463
Vulnerability 1:
File: FlaskBlog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['BLOG_POSTS_PER_PAGE'])
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 16: next = None
File: FlaskBlog/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: FlaskBlog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['BLOG_POSTS_PER_PAGE'])
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 16: next = None
File: FlaskBlog/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: FlaskBlog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['BLOG_POSTS_PER_PAGE'])
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: FlaskBlog/app/api_1_0/posts.py
	 > Line 16: next = None
File: FlaskBlog/app/api_1_0/posts.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: FlaskBlog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 23: next = None
File: FlaskBlog/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: FlaskBlog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 23: next = None
File: FlaskBlog/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: FlaskBlog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 23: next = None
File: FlaskBlog/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: FlaskBlog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 45: next = None
File: FlaskBlog/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: FlaskBlog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 45: next = None
File: FlaskBlog/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: FlaskBlog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: FlaskBlog/app/api_1_0/users.py
	 > Line 45: next = None
File: FlaskBlog/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: FlaskBlog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 18: next = None
File: FlaskBlog/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: FlaskBlog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 18: next = None
File: FlaskBlog/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: FlaskBlog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 18: next = None
File: FlaskBlog/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: FlaskBlog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 46: next = None
File: FlaskBlog/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: FlaskBlog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 46: next = None
File: FlaskBlog/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: FlaskBlog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: FlaskBlog/app/api_1_0/comments.py
	 > Line 46: next = None
File: FlaskBlog/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: FlaskBlog/app/main/views.py
 > User input at line 17, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 18: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['BLOG_POSTS_PER_PAGE'])
	File: FlaskBlog/app/main/views.py
	 > Line 20: posts = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 21, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',posts=posts, pagination=pagination)

Vulnerability 17:
File: FlaskBlog/app/main/views.py
 > User input at line 27, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 28: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['BLOG_POSTS_PER_PAGE'])
	File: FlaskBlog/app/main/views.py
	 > Line 30: posts = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 31, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',posts=posts, pagination=pagination)

Vulnerability 18:
File: FlaskBlog/app/main/views.py
 > User input at line 109, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 111: page = post.comments.count() - 1 / current_app.config['BLOG_COMMENTS_PER_PAGE'] + 1
	File: FlaskBlog/app/main/views.py
	 > Line 112: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['BLOG_COMMENTS_PER_PAGE'])
	File: FlaskBlog/app/main/views.py
	 > Line 114: comments = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 108: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: FlaskBlog/app/main/views.py
 > reaches line 115, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',post=post, form=form, comments=comments, pagination=pagination)

Vulnerability 19:
File: FlaskBlog/app/main/views.py
 > User input at line 173, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 174: pagination = user.followers.paginate(page,per_page=current_app.config['BLOG_FOLLOWERS_PER_PAGE'])
	File: FlaskBlog/app/main/views.py
	 > Line 177: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: FlaskBlog/app/main/views.py
	 > Line 172: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskBlog/app/main/views.py
 > reaches line 179, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 20:
File: FlaskBlog/app/main/views.py
 > User input at line 193, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 194: pagination = user.following.paginate(page,per_page=current_app.config['BLOG_FOLLOWERS_PER_PAGE'])
	File: FlaskBlog/app/main/views.py
	 > Line 197: follows = ['user''timestamp'item.followingitem.timestamp for item in pagination.items]
	File: FlaskBlog/app/main/views.py
	 > Line 192: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskBlog/app/main/views.py
 > reaches line 199, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.following', pagination=pagination, follows=follows)

Vulnerability 21:
File: FlaskBlog/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 212: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['BLOG_FOLLOWERS_PER_PAGE'])
	File: FlaskBlog/app/main/views.py
	 > Line 214: comments = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 215, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



vishwanath79/FlaskURLAPI
https://github.com/vishwanath79/FlaskURLAPI
Entry file: FlaskURLAPI/app.py
Scanned: 2016-10-25 15:29:23.126139
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskURLAPI/hadoopify/lib/python2.7/sre_compile.py

QMickael/flaskBlog
https://github.com/QMickael/flaskBlog
Entry file: flaskBlog/app/app.py
Scanned: 2016-10-25 15:29:24.742470
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

CircaVictor/flaskTemplate
https://github.com/CircaVictor/flaskTemplate
Entry file: flaskTemplate/flask-app/app/__init__.py
Scanned: 2016-10-25 15:29:27.235459
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

vmotto/FlaskBlog
https://github.com/vmotto/FlaskBlog
Entry file: FlaskBlog/app/app.py
Scanned: 2016-10-25 15:29:38.080855
No vulnerabilities found.


xiangzhuyuan/flaskdemo1
https://github.com/xiangzhuyuan/flaskdemo1
Entry file: flaskdemo1/flaskdemo1/flaskr.py
Scanned: 2016-10-25 15:29:40.420921
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

whimian/flaskyKrig
https://github.com/whimian/flaskyKrig
Entry file: flaskyKrig/test.py
Scanned: 2016-10-25 15:29:45.787270
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

keer2345/flaskMega
https://github.com/keer2345/flaskMega
Entry file: flaskMega/app/__init__.py
Scanned: 2016-10-25 15:29:47.171094
No vulnerabilities found.


josh14668/flaskApp
https://github.com/josh14668/flaskApp
Entry file: flaskApp/main.py
Scanned: 2016-10-25 15:29:54.573111
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskApp/venv/lib/python2.7/sre_compile.py

sh4nks/flask-caching
https://github.com/sh4nks/flask-caching
Entry file: flask-caching/setup.py
Scanned: 2016-10-25 15:29:59.438579
No vulnerabilities found.


Riffstation/flaskutilsexample
https://github.com/Riffstation/flaskutilsexample
Entry file: flaskutilsexample/src/app/__init__.py
Scanned: 2016-10-25 15:30:00.937313
No vulnerabilities found.


themese/flask
https://github.com/themese/flask
Entry file: None
Scanned: 2016-10-25 15:30:01.556349
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

radajin/flask
https://github.com/radajin/flask
Entry file: None
Scanned: 2016-10-25 15:30:02.622395
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

suryadana/Flask
https://github.com/suryadana/Flask
Entry file: None
Scanned: 2016-10-25 15:30:03.152150
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

1131909224/flask
https://github.com/1131909224/flask
Entry file: None
Scanned: 2016-10-25 15:30:03.667949
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

manikandaraj123ster/flask
https://github.com/manikandaraj123ster/flask
Entry file: None
Scanned: 2016-10-25 15:30:04.714568
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

KyleSeem/Flask
https://github.com/KyleSeem/Flask
Entry file: None
Scanned: 2016-10-25 15:30:05.324875
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

crazw/flask
https://github.com/crazw/flask
Entry file: None
Scanned: 2016-10-25 15:30:05.843418
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mwongeraE/Flask
https://github.com/mwongeraE/Flask
Entry file: None
Scanned: 2016-10-25 15:30:06.411141
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Jzengzhan/Flask
https://github.com/Jzengzhan/Flask
Entry file: None
Scanned: 2016-10-25 15:30:06.948720
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mani-python/flask
https://github.com/mani-python/flask
Entry file: None
Scanned: 2016-10-25 15:30:07.485990
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bTanya/flask
https://github.com/bTanya/flask
Entry file: None
Scanned: 2016-10-25 15:30:08.010886
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Kirade/Flask
https://github.com/Kirade/Flask
Entry file: None
Scanned: 2016-10-25 15:30:08.548598
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

salhernandez/Flask
https://github.com/salhernandez/Flask
Entry file: None
Scanned: 2016-10-25 15:30:09.083152
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wangrenlearn/flask
https://github.com/wangrenlearn/flask
Entry file: None
Scanned: 2016-10-25 15:30:09.602326
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

TheNixNinja/flask-boilerplate
https://github.com/TheNixNinja/flask-boilerplate
Entry file: None
Scanned: 2016-10-25 15:30:10.141142
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/TheNixNinja/flask-boilerplate.

murilobsd/zeus
https://github.com/murilobsd/zeus
Entry file: None
Scanned: 2016-10-25 15:30:16.441890
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/murilobsd/zeus.

xuelangZF/NaHan
https://github.com/xuelangZF/NaHan
Entry file: NaHan/nahan/__init__.py
Scanned: 2016-10-25 15:30:30.574564
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

clef/flask-nameko
https://github.com/clef/flask-nameko
Entry file: flask-nameko/tests/test_flask_pooled_cluster_rpc_proxy.py
Scanned: 2016-10-25 15:30:38.131784
No vulnerabilities found.


rafaelhenrique/flask_tutorial
https://github.com/rafaelhenrique/flask_tutorial
Entry file: flask_tutorial/tvseries/__init__.py
Scanned: 2016-10-25 15:30:44.387074
No vulnerabilities found.


haklabrador/podatci-s-burza
https://github.com/haklabrador/podatci-s-burza
Entry file: podatci-s-burza/webserver.py
Scanned: 2016-10-25 15:30:45.995308
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sousic/flask_study
https://github.com/sousic/flask_study
Entry file: flask_study/flask_study.py
Scanned: 2016-10-25 15:30:49.461297
Vulnerability 1:
File: flask_study/views/cookies.py
 > User input at line 13, trigger word "get(": 
	username = request.cookies.get('username')
File: flask_study/views/cookies.py
 > reaches line 14, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('cookies/readcookie.html',username=username)

Vulnerability 2:
File: flask_study/views/cookies.py
 > User input at line 19, trigger word "form[": 
	username = request.form['username']
File: flask_study/views/cookies.py
 > reaches line 23, trigger word "set_cookie(": 
	response.set_cookie('username', username)

Vulnerability 3:
File: flask_study/views/fileUpload.py
 > User input at line 21, trigger word "files[": 
	f = request.files['file']
Reassigned in: 
	File: flask_study/views/fileUpload.py
	 > Line 23: filename = secure_filename(f.filename)
	File: flask_study/views/fileUpload.py
	 > Line 29: ret_MAYBE_FUNCTION_NAME = response
File: flask_study/views/fileUpload.py
 > reaches line 25, trigger word "render_template(": 
	response = make_response(render_template('fileupload/index.html',filename=filename))



weinbergdavid/python-flask-security
https://github.com/weinbergdavid/python-flask-security
Entry file: python-flask-security/run.py
Scanned: 2016-10-25 15:31:12.798394
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

opentracing-contrib/python-flask
https://github.com/opentracing-contrib/python-flask
Entry file: python-flask/tests/test_flask_opentracing.py
Scanned: 2016-10-25 15:31:15.348842
No vulnerabilities found.


davidgomes/flask-pygood
https://github.com/davidgomes/flask-pygood
Entry file: flask-pygood/flask_pygood/test/demo.py
Scanned: 2016-10-25 15:31:16.715832
No vulnerabilities found.


aaossa/flask-openshift
https://github.com/aaossa/flask-openshift
Entry file: flask-openshift/flask_openshift_template.py
Scanned: 2016-10-25 15:31:18.363657
Vulnerability 1:
File: flask-openshift/flask_openshift_template.py
 > User input at line 14, trigger word "get(": 
	username = request.form.get('username')
Reassigned in: 
	File: flask-openshift/flask_openshift_template.py
	 > Line 16: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
File: flask-openshift/flask_openshift_template.py
 > reaches line 15, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user',username=username))

Vulnerability 2:
File: flask-openshift/flask_openshift_template.py
 > User input at line 14, trigger word "get(": 
	username = request.form.get('username')
Reassigned in: 
	File: flask-openshift/flask_openshift_template.py
	 > Line 16: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
File: flask-openshift/flask_openshift_template.py
 > reaches line 15, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user',username=username))



k0itsu/flasktaskr
https://github.com/k0itsu/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:31:18.903602
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rama16-meet/flasky
https://github.com/rama16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:31:19.430864
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dina16-meet/flasky
https://github.com/dina16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:31:19.970707
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

orr16-meet/flasky
https://github.com/orr16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:31:20.506395
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

roni16-meet/flasky
https://github.com/roni16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:31:21.025345
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

penglee87/flaskblog
https://github.com/penglee87/flaskblog
Entry file: None
Scanned: 2016-10-25 15:31:21.561460
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/penglee87/flaskblog.

atsk1618/flasko
https://github.com/atsk1618/flasko
Entry file: flasko/flasko.py
Scanned: 2016-10-25 15:31:23.453760
No vulnerabilities found.


nsujan/flaskbot
https://github.com/nsujan/flaskbot
Entry file: flaskbot/wsgi/myflaskapp.py
Scanned: 2016-10-25 15:31:25.160457
No vulnerabilities found.


davbrink/flaskblog
https://github.com/davbrink/flaskblog
Entry file: None
Scanned: 2016-10-25 15:31:26.185209
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/davbrink/flaskblog.

dongshuiquan/flasky
https://github.com/dongshuiquan/flasky
Entry file: None
Scanned: 2016-10-25 15:31:26.724870
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

caseydunham/flaskr
https://github.com/caseydunham/flaskr
Entry file: None
Scanned: 2016-10-25 15:31:27.250833
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/caseydunham/flaskr.

francium/flaskr
https://github.com/francium/flaskr
Entry file: None
Scanned: 2016-10-25 15:31:27.771256
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/francium/flaskr.

Qqlick/Flasktaskr
https://github.com/Qqlick/Flasktaskr
Entry file: Flasktaskr/views.py
Scanned: 2016-10-25 15:31:29.406916
No vulnerabilities found.


ToDolin/flaskgit
https://github.com/ToDolin/flaskgit
Entry file: flaskgit/flasky/app/__init__.py
Scanned: 2016-10-25 15:31:30.944489
No vulnerabilities found.


yolandaz/flaskcars
https://github.com/yolandaz/flaskcars
Entry file: flaskcars/app.py
Scanned: 2016-10-25 15:31:41.103668
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskcars/venv/lib/python2.7/sre_compile.py

PansFortress/flaskr
https://github.com/PansFortress/flaskr
Entry file: None
Scanned: 2016-10-25 15:31:41.662717
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/PansFortress/flaskr.

goodman1209/flaskrestserver
https://github.com/goodman1209/flaskrestserver
Entry file: flaskrestserver/hello.py
Scanned: 2016-10-25 15:31:43.068276
No vulnerabilities found.


Ivicel/flasky
https://github.com/Ivicel/flasky
Entry file: None
Scanned: 2016-10-25 15:31:43.588834
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

weihg/flaskr
https://github.com/weihg/flaskr
Entry file: None
Scanned: 2016-10-25 15:31:44.120293
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/weihg/flaskr.

Dasmemes/flasky
https://github.com/Dasmemes/flasky
Entry file: None
Scanned: 2016-10-25 15:31:44.641280
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

penglee87/flaskweb
https://github.com/penglee87/flaskweb
Entry file: flaskweb/app/__init__.py
Scanned: 2016-10-25 15:31:46.367936
Vulnerability 1:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskweb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskweb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskweb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskweb/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskweb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskweb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskweb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskweb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flaskweb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskweb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskweb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskweb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskweb/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskweb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskweb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskweb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskweb/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskweb/app/main/views.py
 > User input at line 25, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 33: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 34: posts = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',post_form=post_form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskweb/app/main/views.py
 > User input at line 28, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 26: show_followed = False
File: flaskweb/app/main/views.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',post_form=post_form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskweb/app/main/views.py
 > User input at line 52, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 50: show_followed = False
	File: flaskweb/app/main/views.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
	File: flaskweb/app/main/views.py
	 > Line 48: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.create'))
File: flaskweb/app/main/views.py
 > reaches line 58, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('create.html',post_form=post_form, show_followed=show_followed)

Vulnerability 19:
File: flaskweb/app/main/views.py
 > User input at line 64, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 65: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 68: posts = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 69, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 20:
File: flaskweb/app/main/views.py
 > User input at line 128, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 130: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flaskweb/app/main/views.py
	 > Line 132: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 135: comments = pagination.items
	File: flaskweb/app/main/views.py
	 > Line 127: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskweb/app/main/views.py
 > reaches line 136, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 21:
File: flaskweb/app/main/views.py
 > User input at line 221, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 222: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 225: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskweb/app/main/views.py
	 > Line 220: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 227, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 22:
File: flaskweb/app/main/views.py
 > User input at line 238, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 239: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 242: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskweb/app/main/views.py
	 > Line 237: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskweb/app/main/views.py
 > reaches line 244, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 23:
File: flaskweb/app/main/views.py
 > User input at line 269, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskweb/app/main/views.py
	 > Line 270: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskweb/app/main/views.py
	 > Line 273: comments = pagination.items
File: flaskweb/app/main/views.py
 > reaches line 274, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



yuyanqiuqiu/flaskr
https://github.com/yuyanqiuqiu/flaskr
Entry file: None
Scanned: 2016-10-25 15:31:46.887549
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yuyanqiuqiu/flaskr.

marvinmarnold/flasky
https://github.com/marvinmarnold/flasky
Entry file: None
Scanned: 2016-10-25 15:31:47.422164
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bassel-meet/flasky
https://github.com/bassel-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:31:48.974447
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sima16-meet/flasky
https://github.com/sima16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:31:56.489329
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tamar16-meet/flasky
https://github.com/tamar16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:32:14.022584
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

alma16-meet/flasky
https://github.com/alma16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:32:16.553923
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

guy16-meet/flasky
https://github.com/guy16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:32:18.115565
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

aixiamomo/flasky
https://github.com/aixiamomo/flasky
Entry file: None
Scanned: 2016-10-25 15:32:19.627024
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yuyanqiuqiu/flaskblog
https://github.com/yuyanqiuqiu/flaskblog
Entry file: None
Scanned: 2016-10-25 15:32:20.158637
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yuyanqiuqiu/flaskblog.

Halcae/flaskapp
https://github.com/Halcae/flaskapp
Entry file: None
Scanned: 2016-10-25 15:32:20.685236
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Halcae/flaskapp.

Kermit95/Flaskr
https://github.com/Kermit95/Flaskr
Entry file: Flaskr/flaskr.py
Scanned: 2016-10-25 15:32:27.604335
No vulnerabilities found.


wwpika/flaskww
https://github.com/wwpika/flaskww
Entry file: None
Scanned: 2016-10-25 15:32:34.173652
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yasmeen16-meet/flasky
https://github.com/yasmeen16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:32:34.708360
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

themuppet2/flasktaskr
https://github.com/themuppet2/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:32:35.250814
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

LongstreetSolutions/flaskr
https://github.com/LongstreetSolutions/flaskr
Entry file: None
Scanned: 2016-10-25 15:32:35.800878
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/LongstreetSolutions/flaskr.

stevehaigh/flasktest
https://github.com/stevehaigh/flasktest
Entry file: flasktest/flasktest.py
Scanned: 2016-10-25 15:32:37.158378
No vulnerabilities found.


juniorkrvl/flasky
https://github.com/juniorkrvl/flasky
Entry file: None
Scanned: 2016-10-25 15:32:37.688930
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

davbrink/flasktaskr
https://github.com/davbrink/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:32:38.216837
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SachinMaharana/flaskblog
https://github.com/SachinMaharana/flaskblog
Entry file: None
Scanned: 2016-10-25 15:32:38.733899
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SachinMaharana/flaskblog.

dhan12/Flaskblog
https://github.com/dhan12/Flaskblog
Entry file: Flaskblog/run.py
Scanned: 2016-10-25 15:32:43.479801
Vulnerability 1:
File: Flaskblog/flaskblog/routes.py
 > User input at line 42, trigger word "form[": 
	searchText = request.form['search']
Reassigned in: 
	File: Flaskblog/flaskblog/routes.py
	 > Line 54: searchText = request.args.get('search', '')
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: blog_posts = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: maxReached = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 62: older_page = getPageLink(page + 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 64: newer_page = getPageLink(page - 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('blog.html',locals())
File: Flaskblog/flaskblog/routes.py
 > reaches line 43, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('flaskblog.blogapp',page='0', tag='', search=searchText))

Vulnerability 2:
File: Flaskblog/flaskblog/routes.py
 > User input at line 54, trigger word "get(": 
	searchText = request.args.get('search', '')
Reassigned in: 
	File: Flaskblog/flaskblog/routes.py
	 > Line 42: searchText = request.form['search']
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: blog_posts = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: maxReached = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 62: older_page = getPageLink(page + 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 64: newer_page = getPageLink(page - 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('blog.html',locals())
File: Flaskblog/flaskblog/routes.py
 > reaches line 43, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('flaskblog.blogapp',page='0', tag='', search=searchText))

Vulnerability 3:
File: Flaskblog/flaskblog/routes.py
 > User input at line 42, trigger word "form[": 
	searchText = request.form['search']
Reassigned in: 
	File: Flaskblog/flaskblog/routes.py
	 > Line 54: searchText = request.args.get('search', '')
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: blog_posts = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: maxReached = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 62: older_page = getPageLink(page + 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 64: newer_page = getPageLink(page - 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('blog.html',locals())
File: Flaskblog/flaskblog/routes.py
 > reaches line 43, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('flaskblog.blogapp',page='0', tag='', search=searchText))

Vulnerability 4:
File: Flaskblog/flaskblog/routes.py
 > User input at line 54, trigger word "get(": 
	searchText = request.args.get('search', '')
Reassigned in: 
	File: Flaskblog/flaskblog/routes.py
	 > Line 42: searchText = request.form['search']
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: blog_posts = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 56: maxReached = getPostsForUi(pageNum=page, tag=tag, searchText=searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 62: older_page = getPageLink(page + 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 64: newer_page = getPageLink(page - 1, tag, searchText)
	File: Flaskblog/flaskblog/routes.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('blog.html',locals())
File: Flaskblog/flaskblog/routes.py
 > reaches line 43, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('flaskblog.blogapp',page='0', tag='', search=searchText))



amjad16-meet/flasky
https://github.com/amjad16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:32:44.011109
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

elias16-meet/flasky
https://github.com/elias16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:32:44.534834
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bluethon/flasky
https://github.com/bluethon/flasky
Entry file: None
Scanned: 2016-10-25 15:32:45.050199
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

NathanJ4620/flasker
https://github.com/NathanJ4620/flasker
Entry file: flasker/test.py
Scanned: 2016-10-25 15:32:46.386896
No vulnerabilities found.


rahulmkumar/flaskapp
https://github.com/rahulmkumar/flaskapp
Entry file: None
Scanned: 2016-10-25 15:32:46.901223
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rahulmkumar/flaskapp.

teodorgarzdin/Flaskr
https://github.com/teodorgarzdin/Flaskr
Entry file: Flaskr/Flaskr/flaskr/flaskr.py
Scanned: 2016-10-25 15:32:48.232775
No vulnerabilities found.


linjialongmao/flasky
https://github.com/linjialongmao/flasky
Entry file: None
Scanned: 2016-10-25 15:32:48.778714
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

algalanb/flaskapp
https://github.com/algalanb/flaskapp
Entry file: None
Scanned: 2016-10-25 15:32:49.295767
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/algalanb/flaskapp.

sinwar/flaskr
https://github.com/sinwar/flaskr
Entry file: None
Scanned: 2016-10-25 15:32:49.808019
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sinwar/flaskr.

ptrees/flaskr
https://github.com/ptrees/flaskr
Entry file: None
Scanned: 2016-10-25 15:32:50.319578
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ptrees/flaskr.

jcue/flasktaskr
https://github.com/jcue/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:32:50.836929
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

qhdong/flaskr
https://github.com/qhdong/flaskr
Entry file: None
Scanned: 2016-10-25 15:32:51.350645
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/qhdong/flaskr.

aksenovpb/flaskproject
https://github.com/aksenovpb/flaskproject
Entry file: flaskproject/main.py
Scanned: 2016-10-25 15:32:52.751739
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pengshiqi/Flaskr
https://github.com/pengshiqi/Flaskr
Entry file: Flaskr/flaskr.py
Scanned: 2016-10-25 15:32:58.143076
No vulnerabilities found.


stylianos-kampakis/flasktaskr
https://github.com/stylianos-kampakis/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:33:14.670124
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yara16-meet/flasky
https://github.com/yara16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:33:17.216994
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

nimala16-meet/Flasky-
https://github.com/nimala16-meet/Flasky-
Entry file: None
Scanned: 2016-10-25 15:33:24.735088
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/nimala16-meet/Flasky-.

shiran16-meet/flasky
https://github.com/shiran16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:33:25.261478
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fadi16-meet/flasky
https://github.com/fadi16-meet/flasky
Entry file: None
Scanned: 2016-10-25 15:33:25.785166
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

igoroppo6/flasky
https://github.com/igoroppo6/flasky
Entry file: None
Scanned: 2016-10-25 15:33:26.300307
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

evanzd/flasky
https://github.com/evanzd/flasky
Entry file: None
Scanned: 2016-10-25 15:33:26.808290
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Dawson-G/flaskwebapp
https://github.com/Dawson-G/flaskwebapp
Entry file: flaskwebapp/main.py
Scanned: 2016-10-25 15:33:29.162126
No vulnerabilities found.


chijie/flaskdemo
https://github.com/chijie/flaskdemo
Entry file: None
Scanned: 2016-10-25 15:33:35.724957
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

diazdeentr/flasktest
https://github.com/diazdeentr/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 15:33:37.034913
No vulnerabilities found.


yinqiaoyicjx/flask
https://github.com/yinqiaoyicjx/flask
Entry file: None
Scanned: 2016-10-25 15:33:38.892048
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

krandmm/flask
https://github.com/krandmm/flask
Entry file: None
Scanned: 2016-10-25 15:33:39.432771
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yangliu2/flask
https://github.com/yangliu2/flask
Entry file: None
Scanned: 2016-10-25 15:33:39.947388
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

KeyJia/Flask
https://github.com/KeyJia/Flask
Entry file: None
Scanned: 2016-10-25 15:33:40.463871
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Coolwater7/flask
https://github.com/Coolwater7/flask
Entry file: None
Scanned: 2016-10-25 15:33:40.975173
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sepihere/flask
https://github.com/sepihere/flask
Entry file: None
Scanned: 2016-10-25 15:33:44.494959
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

saiprakashreddymarasani/flask
https://github.com/saiprakashreddymarasani/flask
Entry file: None
Scanned: 2016-10-25 15:33:45.025524
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

deonna/flask
https://github.com/deonna/flask
Entry file: None
Scanned: 2016-10-25 15:33:45.535841
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ksbek/flask
https://github.com/ksbek/flask
Entry file: None
Scanned: 2016-10-25 15:33:46.077058
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tis86/flask
https://github.com/tis86/flask
Entry file: None
Scanned: 2016-10-25 15:33:47.644776
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

theparadoxer02/flask
https://github.com/theparadoxer02/flask
Entry file: None
Scanned: 2016-10-25 15:33:48.187558
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

alazar-gm/flask
https://github.com/alazar-gm/flask
Entry file: None
Scanned: 2016-10-25 15:33:49.731697
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

krasytod/flask
https://github.com/krasytod/flask
Entry file: None
Scanned: 2016-10-25 15:33:50.281781
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

feirendada/Flask
https://github.com/feirendada/Flask
Entry file: None
Scanned: 2016-10-25 15:33:50.817238
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Vaspy/Flask
https://github.com/Vaspy/Flask
Entry file: None
Scanned: 2016-10-25 15:33:51.350559
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

vipitsoft/flask
https://github.com/vipitsoft/flask
Entry file: None
Scanned: 2016-10-25 15:33:51.875892
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

reed-chi/flask
https://github.com/reed-chi/flask
Entry file: None
Scanned: 2016-10-25 15:33:52.393148
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

huhjuang/Flask
https://github.com/huhjuang/Flask
Entry file: None
Scanned: 2016-10-25 15:33:52.944771
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sebas095/Flask
https://github.com/sebas095/Flask
Entry file: None
Scanned: 2016-10-25 15:34:15.036006
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SicunStudio/aunet-flask
https://github.com/SicunStudio/aunet-flask
Entry file: None
Scanned: 2016-10-25 15:34:21.466256
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SicunStudio/aunet-flask.

hit9/flask-docjson
https://github.com/hit9/flask-docjson
Entry file: flask-docjson/flask_docjson.py
Scanned: 2016-10-25 15:34:27.112399
No vulnerabilities found.


codigofacilito/flask_cf
https://github.com/codigofacilito/flask_cf
Entry file: flask_cf/Project/main.py
Scanned: 2016-10-25 15:34:29.040356
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lizTheDeveloper/__g26_flask
https://github.com/lizTheDeveloper/__g26_flask
Entry file: __g26_flask/app.py
Scanned: 2016-10-25 15:34:30.647535
Vulnerability 1:
File: __g26_flask/app.py
 > User input at line 27, trigger word "get(": 
	user = load_user(session.get('user_id'))
File: __g26_flask/app.py
 > reaches line 29, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',title='Pokestraveganzamon', pokemon=pokelist, user=user)



mosquito/flask-example
https://github.com/mosquito/flask-example
Entry file: flask-example/flask_example/app.py
Scanned: 2016-10-25 15:34:34.126359
No vulnerabilities found.


zakzou/flask-weixin-pay
https://github.com/zakzou/flask-weixin-pay
Entry file: flask-weixin-pay/example.py
Scanned: 2016-10-25 15:34:35.568008
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

hitakaken/flask-wechat
https://github.com/hitakaken/flask-wechat
Entry file: flask-wechat/example/run.py
Scanned: 2016-10-25 15:34:37.583457
No vulnerabilities found.


ZakStrassberg/flask_products_group_project
https://github.com/ZakStrassberg/flask_products_group_project
Entry file: flask_products_group_project/server.py
Scanned: 2016-10-25 15:34:39.034422
No vulnerabilities found.


teuton0215/microblog
https://github.com/teuton0215/microblog
Entry file: None
Scanned: 2016-10-25 15:34:40.994018
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/teuton0215/microblog.

iamrajhans/FlaskBackend
https://github.com/iamrajhans/FlaskBackend
Entry file: FlaskBackend/drone/main.py
Scanned: 2016-10-25 15:34:42.570379
No vulnerabilities found.


afropolymath/papers
https://github.com/afropolymath/papers
Entry file: papers/api/__init__.py
Scanned: 2016-10-25 15:34:44.854725
Vulnerability 1:
File: papers/api/controllers/files.py
 > User input at line 149, trigger word "get(": 
	parent_id = args.get('parent_id', None)
Reassigned in: 
	File: papers/api/controllers/files.py
	 > Line 161: update_fields['tag'] = parent_id == '0'g.file['id']'{}#{}'.format(folder_access['tag'], folder['last_index'])
	File: papers/api/controllers/files.py
	 > Line 166: update_fields['parent_id'] = parent_id
	File: papers/api/controllers/files.py
	 > Line 152: update_fields['name'] = name
File: papers/api/controllers/files.py
 > reaches line 156, trigger word "filter(": 
	folder_access = Folder.filter('id''creator'parent_iduser_id)



on3iro/cookiecutter-flask
https://github.com/on3iro/cookiecutter-flask
Entry file: cookiecutter-flask/{{cookiecutter.app_name}}/{{cookiecutter.app_name}}/app.py
Scanned: 2016-10-25 15:34:46.966186
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

benman1/tensorflow_flask
https://github.com/benman1/tensorflow_flask
Entry file: tensorflow_flask/api.py
Scanned: 2016-10-25 15:34:48.288966
No vulnerabilities found.


remcohaszing/flask-openapi
https://github.com/remcohaszing/flask-openapi
Entry file: flask-openapi/example/app.py
Scanned: 2016-10-25 15:34:50.328285
No vulnerabilities found.


lechain/flaskr
https://github.com/lechain/flaskr
Entry file: None
Scanned: 2016-10-25 15:34:50.848629
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/lechain/flaskr.

penglee87/flaskr
https://github.com/penglee87/flaskr
Entry file: None
Scanned: 2016-10-25 15:34:51.379314
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/penglee87/flaskr.

asimonia/Flaskbook
https://github.com/asimonia/Flaskbook
Entry file: Flaskbook/application.py
Scanned: 2016-10-25 15:34:52.851476
Vulnerability 1:
File: Flaskbook/user/views.py
 > User input at line 39, trigger word ".data": 
	user = User.objects.filter(username=form.username.data).first()
File: Flaskbook/user/views.py
 > reaches line 39, trigger word "filter(": 
	user = User.objects.filter(username=form.username.data).first()

Vulnerability 2:
File: Flaskbook/user/views.py
 > User input at line 46, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: Flaskbook/user/views.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = 'User logged in'
	File: Flaskbook/user/views.py
	 > Line 53: ret_MAYBE_FUNCTION_NAME = render_template('user/login.html',form=form, error=error)
File: Flaskbook/user/views.py
 > reaches line 48, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)



rouzazari/flaskfirst
https://github.com/rouzazari/flaskfirst
Entry file: flaskfirst/app/__init__.py
Scanned: 2016-10-25 15:34:54.168200
No vulnerabilities found.


smilemlz/flasktest
https://github.com/smilemlz/flasktest
Entry file: flasktest/testem.py
Scanned: 2016-10-25 15:34:55.470460
No vulnerabilities found.


Runningdogs/flasky
https://github.com/Runningdogs/flasky
Entry file: None
Scanned: 2016-10-25 15:34:55.988341
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Markmwaura/Flaskblog
https://github.com/Markmwaura/Flaskblog
Entry file: Flaskblog/app/__init__.py
Scanned: 2016-10-25 15:34:58.252311
No vulnerabilities found.


YaleYeah/flasky
https://github.com/YaleYeah/flasky
Entry file: None
Scanned: 2016-10-25 15:34:58.797599
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

seizans/flasko
https://github.com/seizans/flasko
Entry file: flasko/main.py
Scanned: 2016-10-25 15:35:00.134191
No vulnerabilities found.


faridalrafi/flaskopencv
https://github.com/faridalrafi/flaskopencv
Entry file: flaskopencv/app.py
Scanned: 2016-10-25 15:35:04.042439
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pecone/flaskr
https://github.com/pecone/flaskr
Entry file: None
Scanned: 2016-10-25 15:35:04.585391
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pecone/flaskr.

bencelder/flaskr
https://github.com/bencelder/flaskr
Entry file: None
Scanned: 2016-10-25 15:35:15.232160
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/bencelder/flaskr.

vennyk/flasktaskr
https://github.com/vennyk/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:35:17.765391
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

akjanik/flasktutorial
https://github.com/akjanik/flasktutorial
Entry file: None
Scanned: 2016-10-25 15:35:19.333979
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/akjanik/flasktutorial.

EenTang/flaskdev
https://github.com/EenTang/flaskdev
Entry file: None
Scanned: 2016-10-25 15:35:33.593319
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hyteer/flaskdemo
https://github.com/hyteer/flaskdemo
Entry file: None
Scanned: 2016-10-25 15:35:34.238419
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lxw15337674/flasklearn
https://github.com/lxw15337674/flasklearn
Entry file: flasklearn/flasklearn.py
Scanned: 2016-10-25 15:35:44.282615
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

liangfei2016x/flaskweb
https://github.com/liangfei2016x/flaskweb
Entry file: None
Scanned: 2016-10-25 15:35:54.891929
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mcquam/flasktaskr
https://github.com/mcquam/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:35:55.446914
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Sventenhaaf/flasktries
https://github.com/Sventenhaaf/flasktries
Entry file: flasktries/app.py
Scanned: 2016-10-25 15:36:02.600217
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flasktries/env/lib/python2.7/sre_compile.py

munendrasn/Flaskr
https://github.com/munendrasn/Flaskr
Entry file: Flaskr/flaskr/flaskr.py
Scanned: 2016-10-25 15:36:04.036913
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Eyali1001/flaskcalculator
https://github.com/Eyali1001/flaskcalculator
Entry file: flaskcalculator/calculator.py
Scanned: 2016-10-25 15:36:05.383829
Vulnerability 1:
File: flaskcalculator/calculator.py
 > User input at line 14, trigger word "form[": 
	result = int(request.form['title']) + int(request.form['text'])
File: flaskcalculator/calculator.py
 > reaches line 15, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultpage.html',result=result)



babydeya/flaskr
https://github.com/babydeya/flaskr
Entry file: None
Scanned: 2016-10-25 15:36:05.918624
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/babydeya/flaskr.

rouzazari/flaskangular
https://github.com/rouzazari/flaskangular
Entry file: flaskangular/app/__init__.py
Scanned: 2016-10-25 15:36:07.323349
No vulnerabilities found.


yantiz/flasktaskr
https://github.com/yantiz/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:36:07.992067
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

nocotan/flaski
https://github.com/nocotan/flaski
Entry file: flaski/app.py
Scanned: 2016-10-25 15:36:09.400440
No vulnerabilities found.


berezovskiydenis/flasktaskr
https://github.com/berezovskiydenis/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:36:09.934808
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

freakxx/flaskdemo
https://github.com/freakxx/flaskdemo
Entry file: None
Scanned: 2016-10-25 15:36:10.471366
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Baindaer/flaskr
https://github.com/Baindaer/flaskr
Entry file: None
Scanned: 2016-10-25 15:36:10.983919
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Baindaer/flaskr.

lindentao/flaskr
https://github.com/lindentao/flaskr
Entry file: None
Scanned: 2016-10-25 15:36:11.538964
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/lindentao/flaskr.

demory191/flasktaskr
https://github.com/demory191/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:36:12.111405
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Daylightmazekun/flaskfollow
https://github.com/Daylightmazekun/flaskfollow
Entry file: flaskfollow/app/__init__.py
Scanned: 2016-10-25 15:36:14.040781
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

0x24a537r9/flasktest
https://github.com/0x24a537r9/flasktest
Entry file: flasktest/polling_monitor.py
Scanned: 2016-10-25 15:36:15.357543
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

trevorwitter/flaskr
https://github.com/trevorwitter/flaskr
Entry file: None
Scanned: 2016-10-25 15:36:15.882874
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/trevorwitter/flaskr.

caser789/flaskrr
https://github.com/caser789/flaskrr
Entry file: flaskrr/flaskr/flaskr.py
Scanned: 2016-10-25 15:36:17.224644
No vulnerabilities found.


xuxiaoxing/flasky
https://github.com/xuxiaoxing/flasky
Entry file: None
Scanned: 2016-10-25 15:36:17.742779
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tw7613781/flasky
https://github.com/tw7613781/flasky
Entry file: None
Scanned: 2016-10-25 15:36:18.313114
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhang555/flasky
https://github.com/zhang555/flasky
Entry file: None
Scanned: 2016-10-25 15:36:19.063410
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fiezwang/flasky
https://github.com/fiezwang/flasky
Entry file: None
Scanned: 2016-10-25 15:36:19.708524
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

swdmike/flasky
https://github.com/swdmike/flasky
Entry file: None
Scanned: 2016-10-25 15:36:20.222226
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

manuellah/flaskapp
https://github.com/manuellah/flaskapp
Entry file: None
Scanned: 2016-10-25 15:36:20.749413
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/manuellah/flaskapp.

musarahm/flaskbook
https://github.com/musarahm/flaskbook
Entry file: flaskbook/application.py
Scanned: 2016-10-25 15:36:22.358044
Vulnerability 1:
File: flaskbook/home/views.py
 > User input at line 15, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/home/views.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = 'Welcome to Flaskbook!'
File: flaskbook/home/views.py
 > reaches line 15, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 2:
File: flaskbook/home/views.py
 > User input at line 15, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/home/views.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = 'Welcome to Flaskbook!'
File: flaskbook/home/views.py
 > reaches line 19, trigger word "filter(": 
	feed_messages = Feed.objects.filter(user=user).order_by('-create_date')[10]

Vulnerability 3:
File: flaskbook/home/views.py
 > User input at line 15, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/home/views.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = 'Welcome to Flaskbook!'
File: flaskbook/home/views.py
 > reaches line 23, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('home/feed_home.html',user=user, form=form, feed_messages=feed_messages)

Vulnerability 4:
File: flaskbook/relationship/views.py
 > User input at line 14, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 18: rel = Relationship.get_relationship(logged_user, to_user)
	File: flaskbook/relationship/views.py
	 > Line 27: reverse_rel = Relationship.objects.get(from_user=to_user, to_user=logged_user)
File: flaskbook/relationship/views.py
 > reaches line 14, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 5:
File: flaskbook/relationship/views.py
 > User input at line 14, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 18: rel = Relationship.get_relationship(logged_user, to_user)
	File: flaskbook/relationship/views.py
	 > Line 27: reverse_rel = Relationship.objects.get(from_user=to_user, to_user=logged_user)
File: flaskbook/relationship/views.py
 > reaches line 41, trigger word "render_template(": 
	body_html = render_template('mail/relationship/added_friend.html',from_user=logged_user, to_user=to_user)

Vulnerability 6:
File: flaskbook/relationship/views.py
 > User input at line 14, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 18: rel = Relationship.get_relationship(logged_user, to_user)
	File: flaskbook/relationship/views.py
	 > Line 27: reverse_rel = Relationship.objects.get(from_user=to_user, to_user=logged_user)
File: flaskbook/relationship/views.py
 > reaches line 46, trigger word "render_template(": 
	body_text = render_template('mail/relationship/added_friend.txt',from_user=logged_user, to_user=to_user)

Vulnerability 7:
File: flaskbook/relationship/views.py
 > User input at line 67, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 71: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 67, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 8:
File: flaskbook/relationship/views.py
 > User input at line 67, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 71: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 74, trigger word "filter(": 
	rel = Relationship.objects.filter(from_user=logged_user, to_user=to_user).delete()

Vulnerability 9:
File: flaskbook/relationship/views.py
 > User input at line 67, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 71: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 77, trigger word "filter(": 
	reverse_rel = Relationship.objects.filter(from_user=to_user, to_user=logged_user).delete()

Vulnerability 10:
File: flaskbook/relationship/views.py
 > User input at line 91, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 95: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 91, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 11:
File: flaskbook/relationship/views.py
 > User input at line 91, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 95: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 99, trigger word "filter(": 
	rel = Relationship.objects.filter(from_user=logged_user, to_user=to_user).delete()

Vulnerability 12:
File: flaskbook/relationship/views.py
 > User input at line 91, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 95: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 102, trigger word "filter(": 
	reverse_rel = Relationship.objects.filter(from_user=to_user, to_user=logged_user).delete()

Vulnerability 13:
File: flaskbook/relationship/views.py
 > User input at line 123, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 127: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 123, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 14:
File: flaskbook/relationship/views.py
 > User input at line 123, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/relationship/views.py
	 > Line 127: rel = Relationship.get_relationship(logged_user, to_user)
File: flaskbook/relationship/views.py
 > reaches line 131, trigger word "filter(": 
	rel = Relationship.objects.filter(from_user=logged_user, to_user=to_user).delete()

Vulnerability 15:
File: flaskbook/user/views.py
 > User input at line 25, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 27: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 40, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 16:
File: flaskbook/user/views.py
 > User input at line 27, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 40, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 17:
File: flaskbook/user/views.py
 > User input at line 25, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 27: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 41, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 18:
File: flaskbook/user/views.py
 > User input at line 27, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.data.lower()code)
File: flaskbook/user/views.py
 > reaches line 41, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 19:
File: flaskbook/user/views.py
 > User input at line 57, trigger word ".data": 
	user = User.objects.filter(username=form.username.data).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 70: user = None
File: flaskbook/user/views.py
 > reaches line 57, trigger word "filter(": 
	user = User.objects.filter(username=form.username.data).first()

Vulnerability 20:
File: flaskbook/user/views.py
 > User input at line 64, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 68: ret_MAYBE_FUNCTION_NAME = redirect(url_for('home_app.home'))
	File: flaskbook/user/views.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = render_template('user/login.html',form=form, error=error)
File: flaskbook/user/views.py
 > reaches line 66, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 21:
File: flaskbook/user/views.py
 > User input at line 92, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 84: logged_user = None
	File: flaskbook/user/views.py
	 > Line 93: rel = Relationship.get_relationship(logged_user, user)
	File: flaskbook/user/views.py
	 > Line 85: rel = None
File: flaskbook/user/views.py
 > reaches line 92, trigger word "filter(": 
	logged_user = User.objects.filter(username=session.get('username')).first()

Vulnerability 22:
File: flaskbook/user/views.py
 > User input at line 92, trigger word "get(": 
	logged_user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 84: logged_user = None
	File: flaskbook/user/views.py
	 > Line 93: rel = Relationship.get_relationship(logged_user, user)
	File: flaskbook/user/views.py
	 > Line 85: rel = None
File: flaskbook/user/views.py
 > reaches line 118, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user/profile.html',user=user, logged_user=logged_user, rel=rel, friends=friends, friends_total=friends_total, friends_page=friends_page, form=form, profile_messages=profile_messages)

Vulnerability 23:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 136, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 24:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 148, trigger word "filter(": 
	if User.objects.filter(username=form.username.data.lower()).first():

Vulnerability 25:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 154, trigger word "filter(": 
	if User.objects.filter(email=form.email.data.lower()).first():

Vulnerability 26:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 168, trigger word "render_template(": 
	body_html = render_template('mail/user/change_email.html',user=user)

Vulnerability 27:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 169, trigger word "render_template(": 
	body_text = render_template('mail/user/change_email.txt',user=user)

Vulnerability 28:
File: flaskbook/user/views.py
 > User input at line 136, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 138: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 143: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 144: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 146: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 164: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 175: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 141: image_ts = None
File: flaskbook/user/views.py
 > reaches line 180, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user/edit.html',form=form, error=error, message=message, user=user)

Vulnerability 29:
File: flaskbook/user/views.py
 > User input at line 203, trigger word ".data": 
	user = User.objects.filter(email=form.email.data.lower()).first()
File: flaskbook/user/views.py
 > reaches line 203, trigger word "filter(": 
	user = User.objects.filter(email=form.email.data.lower()).first()

Vulnerability 30:
File: flaskbook/user/views.py
 > User input at line 203, trigger word ".data": 
	user = User.objects.filter(email=form.email.data.lower()).first()
File: flaskbook/user/views.py
 > reaches line 212, trigger word "render_template(": 
	body_html = render_template('mail/user/password_reset.html',user=user)

Vulnerability 31:
File: flaskbook/user/views.py
 > User input at line 203, trigger word ".data": 
	user = User.objects.filter(email=form.email.data.lower()).first()
File: flaskbook/user/views.py
 > reaches line 213, trigger word "render_template(": 
	body_text = render_template('mail/user/password_reset.txt',user=user)

Vulnerability 32:
File: flaskbook/user/views.py
 > User input at line 261, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
File: flaskbook/user/views.py
 > reaches line 261, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 33:
File: flaskbook/feed/views.py
 > User input at line 33, trigger word "get(": 
	from_user = User.objects.get(username=session.get('username'))
Reassigned in: 
	File: flaskbook/feed/views.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = 'Error!'
	File: flaskbook/feed/views.py
	 > Line 68: ret_MAYBE_FUNCTION_NAME = redirect(ref)
File: flaskbook/feed/views.py
 > reaches line 70, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user_app.profile',username=from_user.username))

Vulnerability 34:
File: flaskbook/feed/views.py
 > User input at line 33, trigger word "get(": 
	from_user = User.objects.get(username=session.get('username'))
Reassigned in: 
	File: flaskbook/feed/views.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = 'Error!'
	File: flaskbook/feed/views.py
	 > Line 68: ret_MAYBE_FUNCTION_NAME = redirect(ref)
File: flaskbook/feed/views.py
 > reaches line 70, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user_app.profile',username=from_user.username))

Vulnerability 35:
File: flaskbook/feed/views.py
 > User input at line 119, trigger word "get(": 
	from_user = User.objects.get(username=session.get('username'))
File: flaskbook/feed/views.py
 > reaches line 122, trigger word "filter(": 
	existing_like = Message.objects.filter(parent=message_id, message_type=LIKE, from_user=from_user).count()



HJeongWon/flaskr
https://github.com/HJeongWon/flaskr
Entry file: None
Scanned: 2016-10-25 15:36:23.030946
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/HJeongWon/flaskr.

ChuckiePae/flaskr
https://github.com/ChuckiePae/flaskr
Entry file: None
Scanned: 2016-10-25 15:36:23.589978
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ChuckiePae/flaskr.

qhdong/flasky
https://github.com/qhdong/flasky
Entry file: None
Scanned: 2016-10-25 15:36:27.104015
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wuqingwuqingwu/flaskk
https://github.com/wuqingwuqingwu/flaskk
Entry file: flaskk/chapter3a.py
Scanned: 2016-10-25 15:36:42.025078
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskk/venv/lib/python2.7/sre_compile.py

oscarnyl/flaskpost
https://github.com/oscarnyl/flaskpost
Entry file: flaskpost/flaskpost/__init__.py
Scanned: 2016-10-25 15:36:46.567566
No vulnerabilities found.


linjialongmao/flasky
https://github.com/linjialongmao/flasky
Entry file: None
Scanned: 2016-10-25 15:36:56.106470
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

algalanb/flaskapp
https://github.com/algalanb/flaskapp
Entry file: None
Scanned: 2016-10-25 15:36:56.617738
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/algalanb/flaskapp.

Unknown22/Flaskr
https://github.com/Unknown22/Flaskr
Entry file: Flaskr/flaskr.py
Scanned: 2016-10-25 15:37:05.054589
No vulnerabilities found.


sinwar/flaskr
https://github.com/sinwar/flaskr
Entry file: None
Scanned: 2016-10-25 15:37:05.597890
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sinwar/flaskr.

lux600/flasktest
https://github.com/lux600/flasktest
Entry file: flasktest/hello_world.py
Scanned: 2016-10-25 15:37:11.237442
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

AdamWawrow/flasktaskr
https://github.com/AdamWawrow/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:37:11.813926
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

KamiNoSierhej/flaskkk
https://github.com/KamiNoSierhej/flaskkk
Entry file: flaskkk/flaskkk/Polczan.py
Scanned: 2016-10-25 15:37:13.278581
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

reed-chi/flasktaskr
https://github.com/reed-chi/flasktaskr
Entry file: None
Scanned: 2016-10-25 15:37:13.821754
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Katebasoft/Flaskr
https://github.com/Katebasoft/Flaskr
Entry file: None
Scanned: 2016-10-25 15:37:21.746637
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zangree/flaskytest
https://github.com/zangree/flaskytest
Entry file: flaskytest/app_manager.py
Scanned: 2016-10-25 15:37:23.141729
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

he1chenglong/flasktest
https://github.com/he1chenglong/flasktest
Entry file: flasktest/code/02template/flaskapp.py
Scanned: 2016-10-25 15:37:24.998174
No vulnerabilities found.


omegayang/flasklearn
https://github.com/omegayang/flasklearn
Entry file: flasklearn/app/__init__.py
Scanned: 2016-10-25 15:37:26.742959
Vulnerability 1:
File: flasklearn/app/main/views.py
 > User input at line 64, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasklearn/app/main/views.py
	 > Line 65: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasklearn/app/main/views.py
	 > Line 68: posts = pagination.items
	File: flasklearn/app/main/views.py
	 > Line 63: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasklearn/app/main/views.py
 > reaches line 69, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: flasklearn/app/main/views.py
 > User input at line 126, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasklearn/app/main/views.py
	 > Line 127: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flasklearn/app/main/views.py
	 > Line 130: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flasklearn/app/main/views.py
	 > Line 125: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasklearn/app/main/views.py
 > reaches line 132, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 3:
File: flasklearn/app/main/views.py
 > User input at line 141, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasklearn/app/main/views.py
	 > Line 142: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flasklearn/app/main/views.py
	 > Line 145: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flasklearn/app/main/views.py
	 > Line 140: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasklearn/app/main/views.py
 > reaches line 147, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by ', endpoint='.followed_by', pagination=pagination, follows=follows)



ranchow/flaskapp
https://github.com/ranchow/flaskapp
Entry file: None
Scanned: 2016-10-25 15:37:27.304905
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ranchow/flaskapp.

lassegit/flask-reactjs
https://github.com/lassegit/flask-reactjs
Entry file: None
Scanned: 2016-10-25 15:37:30.490623
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/lassegit/flask-reactjs.

vimalloc/flask-jwt-extended
https://github.com/vimalloc/flask-jwt-extended
Entry file: flask-jwt-extended/tests/test_blacklist.py
Scanned: 2016-10-25 15:37:32.788891
No vulnerabilities found.


timmyreilly/introduction-to-flask
https://github.com/timmyreilly/introduction-to-flask
Entry file: introduction-to-flask/hello.py
Scanned: 2016-10-25 15:37:35.113260
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

cuttlesoft/flask-workshop
https://github.com/cuttlesoft/flask-workshop
Entry file: flask-workshop/app/__init__.py
Scanned: 2016-10-25 15:37:38.698193
No vulnerabilities found.


iamdavidmt/flask
https://github.com/iamdavidmt/flask
Entry file: None
Scanned: 2016-10-25 15:37:39.235601
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

DIYer22/flask
https://github.com/DIYer22/flask
Entry file: None
Scanned: 2016-10-25 15:37:39.782257
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

woowooh/flask
https://github.com/woowooh/flask
Entry file: None
Scanned: 2016-10-25 15:37:40.310767
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jacksonyoudi/flask
https://github.com/jacksonyoudi/flask
Entry file: None
Scanned: 2016-10-25 15:37:41.365602
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jamesd3ao/Flask
https://github.com/jamesd3ao/Flask
Entry file: None
Scanned: 2016-10-25 15:37:41.931208
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

YellowGB/Flask
https://github.com/YellowGB/Flask
Entry file: None
Scanned: 2016-10-25 15:37:42.598234
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

konwan/flask
https://github.com/konwan/flask
Entry file: None
Scanned: 2016-10-25 15:37:43.185491
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lsyff210/flask
https://github.com/lsyff210/flask
Entry file: None
Scanned: 2016-10-25 15:37:43.977575
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dalyddaly/flask
https://github.com/dalyddaly/flask
Entry file: None
Scanned: 2016-10-25 15:37:44.566033
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Carryopendoor1/flask
https://github.com/Carryopendoor1/flask
Entry file: None
Scanned: 2016-10-25 15:37:46.145807
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

CliveCullen/flask
https://github.com/CliveCullen/flask
Entry file: None
Scanned: 2016-10-25 15:37:56.670646
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jasondebolt/flask
https://github.com/jasondebolt/flask
Entry file: None
Scanned: 2016-10-25 15:37:57.222967
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rdeeds/flask
https://github.com/rdeeds/flask
Entry file: None
Scanned: 2016-10-25 15:38:04.737807
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

nsuJolie/flask
https://github.com/nsuJolie/flask
Entry file: None
Scanned: 2016-10-25 15:38:06.271669
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mod2695/flask
https://github.com/mod2695/flask
Entry file: None
Scanned: 2016-10-25 15:38:06.888142
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rionagreally/Flask
https://github.com/rionagreally/Flask
Entry file: None
Scanned: 2016-10-25 15:38:12.413536
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhaokefei/flask
https://github.com/zhaokefei/flask
Entry file: None
Scanned: 2016-10-25 15:38:12.926238
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

djjjj/flask
https://github.com/djjjj/flask
Entry file: None
Scanned: 2016-10-25 15:38:14.444630
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

xjr7670/flask
https://github.com/xjr7670/flask
Entry file: None
Scanned: 2016-10-25 15:38:15.009614
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

k9imJ/flask
https://github.com/k9imJ/flask
Entry file: None
Scanned: 2016-10-25 15:38:15.540520
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

berstearns/flask
https://github.com/berstearns/flask
Entry file: None
Scanned: 2016-10-25 15:38:23.060845
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fortune599/flask
https://github.com/fortune599/flask
Entry file: None
Scanned: 2016-10-25 15:38:24.611268
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yueqingwang/flask
https://github.com/yueqingwang/flask
Entry file: None
Scanned: 2016-10-25 15:38:26.167163
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

minglan01/flask
https://github.com/minglan01/flask
Entry file: None
Scanned: 2016-10-25 15:38:27.740875
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kkltcjk/flask
https://github.com/kkltcjk/flask
Entry file: None
Scanned: 2016-10-25 15:38:28.288990
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tcyfs/flask
https://github.com/tcyfs/flask
Entry file: None
Scanned: 2016-10-25 15:38:29.810110
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

arcVyas/flask
https://github.com/arcVyas/flask
Entry file: None
Scanned: 2016-10-25 15:38:31.330114
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sakuuat/Flask
https://github.com/sakuuat/Flask
Entry file: None
Scanned: 2016-10-25 15:38:33.852028
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lastone9182/flask
https://github.com/lastone9182/flask
Entry file: None
Scanned: 2016-10-25 15:38:36.376124
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

juliascript/Flask
https://github.com/juliascript/Flask
Entry file: None
Scanned: 2016-10-25 15:38:39.912836
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

larry1994/flask
https://github.com/larry1994/flask
Entry file: None
Scanned: 2016-10-25 15:38:40.481591
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jyntran/flask
https://github.com/jyntran/flask
Entry file: None
Scanned: 2016-10-25 15:38:40.990479
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jience/flask
https://github.com/jience/flask
Entry file: None
Scanned: 2016-10-25 15:38:41.510765
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mayurvaidya09/Flask
https://github.com/mayurvaidya09/Flask
Entry file: None
Scanned: 2016-10-25 15:38:42.055610
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

harryjia/flask
https://github.com/harryjia/flask
Entry file: None
Scanned: 2016-10-25 15:38:42.620298
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

randm-/flask
https://github.com/randm-/flask
Entry file: None
Scanned: 2016-10-25 15:38:43.136224
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

davinbutler/flask
https://github.com/davinbutler/flask
Entry file: None
Scanned: 2016-10-25 15:38:43.651891
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Gershine/Flask
https://github.com/Gershine/Flask
Entry file: None
Scanned: 2016-10-25 15:38:44.176792
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rahulVudutala/flask
https://github.com/rahulVudutala/flask
Entry file: None
Scanned: 2016-10-25 15:38:44.710057
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jesusalatorre/Flask
https://github.com/jesusalatorre/Flask
Entry file: None
Scanned: 2016-10-25 15:38:46.263619
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sanie4eg/Flask
https://github.com/sanie4eg/Flask
Entry file: None
Scanned: 2016-10-25 15:38:56.794846
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

skraiman/flask
https://github.com/skraiman/flask
Entry file: None
Scanned: 2016-10-25 15:38:57.313242
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

g00302826/Flask
https://github.com/g00302826/Flask
Entry file: None
Scanned: 2016-10-25 15:39:04.863705
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ricardonhuang/flask
https://github.com/ricardonhuang/flask
Entry file: None
Scanned: 2016-10-25 15:39:06.435243
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cmeisinger/flask
https://github.com/cmeisinger/flask
Entry file: None
Scanned: 2016-10-25 15:39:07.044457
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

vojtahelle/flask
https://github.com/vojtahelle/flask
Entry file: None
Scanned: 2016-10-25 15:39:12.563003
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Morfyo/Flask
https://github.com/Morfyo/Flask
Entry file: None
Scanned: 2016-10-25 15:39:13.841675
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hamdimuzakkiy/Flask
https://github.com/hamdimuzakkiy/Flask
Entry file: None
Scanned: 2016-10-25 15:39:15.373975
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

VishnuArukat/flask
https://github.com/VishnuArukat/flask
Entry file: None
Scanned: 2016-10-25 15:39:23.887201
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fushouhai/flask
https://github.com/fushouhai/flask
Entry file: None
Scanned: 2016-10-25 15:39:25.401395
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

darylkeane/flask
https://github.com/darylkeane/flask
Entry file: None
Scanned: 2016-10-25 15:39:26.927311
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Tangugo/flask
https://github.com/Tangugo/flask
Entry file: None
Scanned: 2016-10-25 15:39:28.442990
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bharatsush/flask
https://github.com/bharatsush/flask
Entry file: None
Scanned: 2016-10-25 15:39:28.963141
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

LittltZhao/Flask
https://github.com/LittltZhao/Flask
Entry file: None
Scanned: 2016-10-25 15:39:30.494947
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sadscv/flask
https://github.com/sadscv/flask
Entry file: None
Scanned: 2016-10-25 15:39:32.002567
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chenlei28695/flask
https://github.com/chenlei28695/flask
Entry file: None
Scanned: 2016-10-25 15:39:34.584968
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

I-am-Gabi/flask-minicurso
https://github.com/I-am-Gabi/flask-minicurso
Entry file: flask-minicurso/minicurso-flask.py
Scanned: 2016-10-25 15:39:39.553399
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhangheli/flask-google
https://github.com/zhangheli/flask-google
Entry file: flask-google/g.py
Scanned: 2016-10-25 15:39:40.869318
No vulnerabilities found.


arpitbbhayani/flasksr
https://github.com/arpitbbhayani/flasksr
Entry file: flasksr/examples/basicsr.py
Scanned: 2016-10-25 15:39:42.268533
No vulnerabilities found.


bellcodo/fisrt-flask-app
https://github.com/bellcodo/fisrt-flask-app
Entry file: fisrt-flask-app/hello_app.py
Scanned: 2016-10-25 15:39:43.561876
No vulnerabilities found.


lk-geimfari/flask_church
https://github.com/lk-geimfari/flask_church
Entry file: flask_church/example.py
Scanned: 2016-10-25 15:39:45.125775
No vulnerabilities found.


padznich/_flask
https://github.com/padznich/_flask
Entry file: _flask/proj_5_TDD_1/app.py
Scanned: 2016-10-25 15:39:46.585218
No vulnerabilities found.


EverestYAO/flask-blog
https://github.com/EverestYAO/flask-blog
Entry file: flask-blog/flask/Scripts/flask-blog/app/__init__.py
Scanned: 2016-10-25 15:39:48.575573
Vulnerability 1:
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > User input at line 19, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 20: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 23: posts = pagination.items
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 31: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 33: posts = pagination.items
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > User input at line 26, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 24: show_followed = False
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > User input at line 96, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 98: page = post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 100: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 103: comments = pagination.items
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 95: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > reaches line 104, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 4:
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > User input at line 160, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 161: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 163: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 159: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > reaches line 164, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of ', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 5:
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > User input at line 173, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 174: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 177: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 172: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > reaches line 179, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 6:
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > User input at line 201, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 202: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
	 > Line 204: comments = pagination.items
File: flask-blog/flask/Scripts/flask-blog/app/main/views.py
 > reaches line 205, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



pandapan0021/myblog
https://github.com/pandapan0021/myblog
Entry file: None
Scanned: 2016-10-25 15:39:57.133608
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

qwertypomy/flask-example-app
https://github.com/qwertypomy/flask-example-app
Entry file: flask-example-app/app.py
Scanned: 2016-10-25 15:40:02.879970
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

Millyn/uFlask
https://github.com/Millyn/uFlask
Entry file: uFlask/project/__init__.py
Scanned: 2016-10-25 15:40:04.415110
No vulnerabilities found.


hit9/flask-idempotent2
https://github.com/hit9/flask-idempotent2
Entry file: flask-idempotent2/example.py
Scanned: 2016-10-25 15:40:05.967900
No vulnerabilities found.


rofrano/nyu-lab-restful-flask
https://github.com/rofrano/nyu-lab-restful-flask
Entry file: nyu-lab-restful-flask/server.py
Scanned: 2016-10-25 15:40:07.362847
No vulnerabilities found.


Sthacks/sthacksWebsite
https://github.com/Sthacks/sthacksWebsite
Entry file: sthacksWebsite/app.py
Scanned: 2016-10-25 15:40:09.461069
No vulnerabilities found.


on3iro/cookiecutter-flask
https://github.com/on3iro/cookiecutter-flask
Entry file: cookiecutter-flask/{{cookiecutter.app_name}}/{{cookiecutter.app_name}}/app.py
Scanned: 2016-10-25 15:40:11.130094
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mmarconm/flask_templates
https://github.com/mmarconm/flask_templates
Entry file: flask_templates/app.py
Scanned: 2016-10-25 15:40:13.451876
No vulnerabilities found.


AminHP/flask-mvc
https://github.com/AminHP/flask-mvc
Entry file: flask-mvc/project/application.py
Scanned: 2016-10-25 15:40:14.889815
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jkaberg/tvhProxy
https://github.com/jkaberg/tvhProxy
Entry file: tvhProxy/tvhProxy.py
Scanned: 2016-10-25 15:40:16.292469
No vulnerabilities found.


DanielTimLee/flask_tutorial
https://github.com/DanielTimLee/flask_tutorial
Entry file: None
Scanned: 2016-10-25 15:40:17.820319
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/DanielTimLee/flask_tutorial.

atomist-project-templates/flask-service
https://github.com/atomist-project-templates/flask-service
Entry file: flask-service/flask_service/__init__.py
Scanned: 2016-10-25 15:40:19.333442
Vulnerability 1:
File: flask-service/flask_service/tests/test_main_views.py
 > User input at line 10, trigger word "get(": 
	res = client.get(url_for('main_app.swagger'))
File: flask-service/flask_service/tests/test_main_views.py
 > reaches line 10, trigger word "url_for(": 
	res = client.get(url_for('main_app.swagger'))

Vulnerability 2:
File: flask-service/flask_service/my_app/tests/test_views.py
 > User input at line 6, trigger word "get(": 
	res = client.get(url_for('my_app_app.index'))
File: flask-service/flask_service/my_app/tests/test_views.py
 > reaches line 6, trigger word "url_for(": 
	res = client.get(url_for('my_app_app.index'))



EenTang/flaskdev
https://github.com/EenTang/flaskdev
Entry file: None
Scanned: 2016-10-25 15:40:19.851994
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

martyni/flaskstrap
https://github.com/martyni/flaskstrap
Entry file: flaskstrap/flaskstrap/app.py
Scanned: 2016-10-25 15:40:25.716084
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ramramu3433/flaskapp
https://github.com/ramramu3433/flaskapp
Entry file: None
Scanned: 2016-10-25 15:40:26.235197
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ramramu3433/flaskapp.

irritant/flasktory
https://github.com/irritant/flasktory
Entry file: flasktory/template/app/__init__.py
Scanned: 2016-10-25 15:40:28.610347
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

naviplay/flasktutorial
https://github.com/naviplay/flasktutorial
Entry file: None
Scanned: 2016-10-25 15:40:29.140120
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/naviplay/flasktutorial.

MagicRoc/flaskoc
https://github.com/MagicRoc/flaskoc
Entry file: flaskoc/hello.py
Scanned: 2016-10-25 15:40:30.820739
Vulnerability 1:
File: flaskoc/app/main/views.py
 > User input at line 56, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskoc/app/main/views.py
	 > Line 57: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskoc/app/main/views.py
	 > Line 60: posts = pagination.items
	File: flaskoc/app/main/views.py
	 > Line 55: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskoc/app/main/views.py
 > reaches line 61, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: flaskoc/app/main/views.py
 > User input at line 72, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskoc/app/main/views.py
	 > Line 73: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskoc/app/main/views.py
	 > Line 76: posts = pagination.items
File: flaskoc/app/main/views.py
 > reaches line 77, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)



kaish5536/Flaskr
https://github.com/kaish5536/Flaskr
Entry file: None
Scanned: 2016-10-25 15:40:31.349790
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sanjayankur31/flaskr
https://github.com/sanjayankur31/flaskr
Entry file: None
Scanned: 2016-10-25 15:40:32.902278
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sanjayankur31/flaskr.

shalev67/flasky
https://github.com/shalev67/flasky
Entry file: None
Scanned: 2016-10-25 15:40:35.472456
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

isyippee/flasky
https://github.com/isyippee/flasky
Entry file: None
Scanned: 2016-10-25 15:40:37.986897
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mwoo99/flasktemplate
https://github.com/mwoo99/flasktemplate
Entry file: flasktemplate/flask_template.py
Scanned: 2016-10-25 15:40:41.348043
No vulnerabilities found.


ChrisDBrooks/flaskbyexample
https://github.com/ChrisDBrooks/flaskbyexample
Entry file: flaskbyexample/hello.py
Scanned: 2016-10-25 15:40:42.678284
No vulnerabilities found.


mkykadir/flaskrofficialtut
https://github.com/mkykadir/flaskrofficialtut
Entry file: flaskrofficialtut/flaskr.py
Scanned: 2016-10-25 15:40:44.043829
No vulnerabilities found.


rbunch-dc/flasksql
https://github.com/rbunch-dc/flasksql
Entry file: flasksql/flaskMysql.py
Scanned: 2016-10-25 15:40:47.296219
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yorolifarg/flasksample
https://github.com/yorolifarg/flasksample
Entry file: flasksample/chapter2/app.py
Scanned: 2016-10-25 15:40:50.960304
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pradyumnac/flasklearn
https://github.com/pradyumnac/flasklearn
Entry file: flasklearn/code/redisdemo.py
Scanned: 2016-10-25 15:40:52.365940
No vulnerabilities found.


gd452/flask
https://github.com/gd452/flask
Entry file: None
Scanned: 2016-10-25 22:52:58.936313
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

llh335/flask
https://github.com/llh335/flask
Entry file: None
Scanned: 2016-10-25 22:52:59.461930
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bh45k4r/flask
https://github.com/bh45k4r/flask
Entry file: None
Scanned: 2016-10-25 22:52:59.983826
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

paulmin55/flask
https://github.com/paulmin55/flask
Entry file: None
Scanned: 2016-10-25 22:53:00.510000
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

CarlEkerot/flask-orm
https://github.com/CarlEkerot/flask-orm
Entry file: flask-orm/webapp/__init__.py
Scanned: 2016-10-25 22:53:02.247094
No vulnerabilities found.


ibininja/upload_file_python
https://github.com/ibininja/upload_file_python
Entry file: upload_file_python/src/app_display_multiple_images.py
Scanned: 2016-10-25 22:53:03.552835
No vulnerabilities found.


fraoustin/flaskserver
https://github.com/fraoustin/flaskserver
Entry file: None
Scanned: 2016-10-25 22:53:04.096722
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/fraoustin/flaskserver.

ecerami/hello_flask
https://github.com/ecerami/hello_flask
Entry file: hello_flask/app.py
Scanned: 2016-10-25 22:53:05.376527
No vulnerabilities found.


kai1/flasktest
https://github.com/kai1/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 22:53:07.086537
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

willianribeiro/flaskr
https://github.com/willianribeiro/flaskr
Entry file: None
Scanned: 2016-10-25 22:53:07.611841
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/willianribeiro/flaskr.

StuartChristie/Flasky
https://github.com/StuartChristie/Flasky
Entry file: None
Scanned: 2016-10-25 22:53:08.112348
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/StuartChristie/Flasky.

milinbhakta/flaskmaterialdesign
https://github.com/milinbhakta/flaskmaterialdesign
Entry file: flaskmaterialdesign/venv/Lib/site-packages/flask/sessions.py
Scanned: 2016-10-25 22:53:13.544515
No vulnerabilities found.


Hellemos/flaskapp
https://github.com/Hellemos/flaskapp
Entry file: None
Scanned: 2016-10-25 22:53:14.610560
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Hellemos/flaskapp.

ssssergey/flaskengine
https://github.com/ssssergey/flaskengine
Entry file: flaskengine/app/__init__.py
Scanned: 2016-10-25 22:53:15.991679
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

milinbhakta/flaskjinja
https://github.com/milinbhakta/flaskjinja
Entry file: flaskjinja/hello.py
Scanned: 2016-10-25 22:53:22.038783
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

saucecode/flaskcat
https://github.com/saucecode/flaskcat
Entry file: flaskcat/flaskcat.py
Scanned: 2016-10-25 22:53:23.375791
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wiggitywalt/flasktaskr
https://github.com/wiggitywalt/flasktaskr
Entry file: None
Scanned: 2016-10-25 22:53:23.904316
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ashishkx/Flaskr
https://github.com/ashishkx/Flaskr
Entry file: None
Scanned: 2016-10-25 22:53:24.416388
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jward1/flasktaskr
https://github.com/jward1/flasktaskr
Entry file: None
Scanned: 2016-10-25 22:53:24.931689
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

schoolofcode-me/web_blog
https://github.com/schoolofcode-me/web_blog
Entry file: web_blog/src/app.py
Scanned: 2016-10-25 22:53:26.347500
No vulnerabilities found.


arpm/FlaskTaskr
https://github.com/arpm/FlaskTaskr
Entry file: None
Scanned: 2016-10-25 22:53:26.882383
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/arpm/FlaskTaskr.

iKalin/flask1
https://github.com/iKalin/flask1
Entry file: flask1/routes.py
Scanned: 2016-10-25 22:53:30.342007
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

iamrajhans/FlaskPYDemo
https://github.com/iamrajhans/FlaskPYDemo
Entry file: None
Scanned: 2016-10-25 22:53:31.697268
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/iamrajhans/FlaskPYDemo.

MortalCatalyst/flaskTR
https://github.com/MortalCatalyst/flaskTR
Entry file: flaskTR/flasktaskr/views.py
Scanned: 2016-10-25 22:53:32.988051
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

QuadPiece/Quad-Devices-Two
https://github.com/QuadPiece/Quad-Devices-Two
Entry file: Quad-Devices-Two/run.py
Scanned: 2016-10-25 22:53:34.279342
No vulnerabilities found.


dbunker/Flask-Tread
https://github.com/dbunker/Flask-Tread
Entry file: Flask-Tread/examples/blog/app/mainapp/__init__.py
Scanned: 2016-10-25 22:53:35.717929
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

martincalvert/GAE-Flask
https://github.com/martincalvert/GAE-Flask
Entry file: GAE-Flask/routes.py
Scanned: 2016-10-25 22:53:38.461088
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

fergyfresh/flask-staysafe
https://github.com/fergyfresh/flask-staysafe
Entry file: flask-staysafe/app/__init__.py
Scanned: 2016-10-25 22:55:02.509582
No vulnerabilities found.


arvelt/hello-flask
https://github.com/arvelt/hello-flask
Entry file: hello-flask/main.py
Scanned: 2016-10-25 22:55:04.187753
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

andrewheekin/flask-metatag
https://github.com/andrewheekin/flask-metatag
Entry file: flask-metatag/app.py
Scanned: 2016-10-25 22:55:05.534757
No vulnerabilities found.


Seneckiy/workwithFlask
https://github.com/Seneckiy/workwithFlask
Entry file: workwithFlask/hello.py
Scanned: 2016-10-25 22:55:07.888469
No vulnerabilities found.


xuefeng-huang/flask_task
https://github.com/xuefeng-huang/flask_task
Entry file: flask_task/__init__.py
Scanned: 2016-10-25 22:55:09.253433
No vulnerabilities found.


ichy-wayland/flask-temp
https://github.com/ichy-wayland/flask-temp
Entry file: flask-temp/main.py
Scanned: 2016-10-25 22:55:10.642719
No vulnerabilities found.


RodrigoVillatoro/flask_blog
https://github.com/RodrigoVillatoro/flask_blog
Entry file: flask_blog/blog_app/my_app.py
Scanned: 2016-10-25 22:55:12.470274
Vulnerability 1:
File: flask_blog/blog_app/views.py
 > User input at line 42, trigger word "get(": 
	user_email = request.form.get('email')
File: flask_blog/blog_app/views.py
 > reaches line 43, trigger word "filter(": 
	user = User.query.filter(User.email == user_email).first()

Vulnerability 2:
File: flask_blog/blog_app/helpers.py
 > User input at line 5, trigger word "get(": 
	page = request.args.get('page')
Reassigned in: 
	File: flask_blog/blog_app/helpers.py
	 > Line 7: page = int(page)
	File: flask_blog/blog_app/helpers.py
	 > Line 9: page = 1
	File: flask_blog/blog_app/helpers.py
	 > Line 10: object_list = query.paginate(page, paginate_by)
File: flask_blog/blog_app/helpers.py
 > reaches line 11, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template(template_name,object_list=object_list, context)

Vulnerability 3:
File: flask_blog/blog_app/entries/blueprint.py
 > User input at line 95, trigger word "files[": 
	image_file = request.files['file']
Reassigned in: 
	File: flask_blog/blog_app/entries/blueprint.py
	 > Line 96: filename = os.path.join(app.config['IMAGES_DIR'], secure_filename(image_file.filename))
File: flask_blog/blog_app/entries/blueprint.py
 > reaches line 101, trigger word "flash(": 
	flash('Saved {}'.format(os.path.basename(filename)), 'success')

Vulnerability 4:
File: flask_blog/blog_app/entries/blueprint.py
 > User input at line 112, trigger word "Markup(": 
	markdown_body = Markup(markdown.markdown(entry.body))
File: flask_blog/blog_app/entries/blueprint.py
 > reaches line 114, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('entries/detail.html',entry=entry, form=form, markdown_body=markdown_body)

Vulnerability 5:
File: flask_blog/blog_app/entries/forms.py
 > User input at line 86, trigger word ".data": 
	entry = Entry.query.filter(Entry.status == Entry.STATUS_PUBLIC & Entry.id == self.entry_id.data).first()
File: flask_blog/blog_app/entries/forms.py
 > reaches line 86, trigger word "filter(": 
	entry = Entry.query.filter(Entry.status == Entry.STATUS_PUBLIC & Entry.id == self.entry_id.data).first()



patrickyoung/simple-flask
https://github.com/patrickyoung/simple-flask
Entry file: simple-flask/hello.py
Scanned: 2016-10-25 22:55:13.775921
No vulnerabilities found.


sancarbar/flask-auth
https://github.com/sancarbar/flask-auth
Entry file: flask-auth/app.py
Scanned: 2016-10-25 22:55:15.056476
No vulnerabilities found.


lifayi2008/my_flask
https://github.com/lifayi2008/my_flask
Entry file: my_flask/app/__init__.py
Scanned: 2016-10-25 22:55:16.491103
No vulnerabilities found.


staticor/learnFlask
https://github.com/staticor/learnFlask
Entry file: None
Scanned: 2016-10-25 22:55:17.820748
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/staticor/learnFlask.

mehmettaskiner/flask-skeleton
https://github.com/mehmettaskiner/flask-skeleton
Entry file: flask-skeleton/app.py
Scanned: 2016-10-25 22:55:19.107333
No vulnerabilities found.


robin-lee/flask-tutorial
https://github.com/robin-lee/flask-tutorial
Entry file: flask-tutorial/app.py
Scanned: 2016-10-25 22:55:20.517485
No vulnerabilities found.


zonzpoo/blog-flask
https://github.com/zonzpoo/blog-flask
Entry file: blog-flask/tests/hello.py
Scanned: 2016-10-25 22:55:21.943925
No vulnerabilities found.


arpm/flask-blog
https://github.com/arpm/flask-blog
Entry file: None
Scanned: 2016-10-25 22:55:25.314758
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

raejoon/lype-flask
https://github.com/raejoon/lype-flask
Entry file: lype-flask/lyre.py
Scanned: 2016-10-25 22:55:26.786581
Vulnerability 1:
File: lype-flask/lyre.py
 > User input at line 239, trigger word "get(": 
	splid = request.args.get('spl', None)
Reassigned in: 
	File: lype-flask/lyre.py
	 > Line 252: plid = splid
	File: lype-flask/lyre.py
	 > Line 256: videos = serv.get_videos(youtube, plid)
	File: lype-flask/lyre.py
	 > Line 257: session['playq'] = videos
	File: lype-flask/lyre.py
	 > Line 258: session['nowplaying'] = -1
	File: lype-flask/lyre.py
	 > Line 267: title = serv.get_title_from_plid(playlists, plid)
	File: lype-flask/lyre.py
	 > Line 269: title = serv.get_title_from_plid(searched_playlists, plid)
	File: lype-flask/lyre.py
	 > Line 228: ret_MAYBE_FUNCTION_NAME = redirect(url_for('oauth2callback'))
	File: lype-flask/lyre.py
	 > Line 231: ret_MAYBE_FUNCTION_NAME = redirect(url_for('oauth2callback'))
	File: lype-flask/lyre.py
	 > Line 240: plid = request.args.get('pl', None)
	File: lype-flask/lyre.py
	 > Line 244: videos = None
	File: lype-flask/lyre.py
	 > Line 246: session['shuffle'] = False
	File: lype-flask/lyre.py
	 > Line 249: session['nowplaying'] = -1
File: lype-flask/lyre.py
 > reaches line 271, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('show_player.html',isMine=isMine, playlists=playlists, spls=searched_playlists, pltitle=title, videos=videos)

Vulnerability 2:
File: lype-flask/lyre.py
 > User input at line 240, trigger word "get(": 
	plid = request.args.get('pl', None)
Reassigned in: 
	File: lype-flask/lyre.py
	 > Line 252: plid = splid
	File: lype-flask/lyre.py
	 > Line 256: videos = serv.get_videos(youtube, plid)
	File: lype-flask/lyre.py
	 > Line 257: session['playq'] = videos
	File: lype-flask/lyre.py
	 > Line 258: session['nowplaying'] = -1
	File: lype-flask/lyre.py
	 > Line 267: title = serv.get_title_from_plid(playlists, plid)
	File: lype-flask/lyre.py
	 > Line 269: title = serv.get_title_from_plid(searched_playlists, plid)
	File: lype-flask/lyre.py
	 > Line 228: ret_MAYBE_FUNCTION_NAME = redirect(url_for('oauth2callback'))
	File: lype-flask/lyre.py
	 > Line 231: ret_MAYBE_FUNCTION_NAME = redirect(url_for('oauth2callback'))
	File: lype-flask/lyre.py
	 > Line 244: videos = None
	File: lype-flask/lyre.py
	 > Line 246: session['shuffle'] = False
	File: lype-flask/lyre.py
	 > Line 249: session['nowplaying'] = -1
File: lype-flask/lyre.py
 > reaches line 271, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('show_player.html',isMine=isMine, playlists=playlists, spls=searched_playlists, pltitle=title, videos=videos)



ayusharma/flask-mysql
https://github.com/ayusharma/flask-mysql
Entry file: flask-mysql/app.py
Scanned: 2016-10-25 22:55:30.027330
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-mysql/venv/lib/python2.7/sre_compile.py

zolaneta/hello_flask
https://github.com/zolaneta/hello_flask
Entry file: hello_flask/Flask.py
Scanned: 2016-10-25 22:55:31.366209
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mrasband/flask-seed
https://github.com/mrasband/flask-seed
Entry file: None
Scanned: 2016-10-25 22:55:32.674385
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mrasband/flask-seed.

zhaojf85/docker-flask
https://github.com/zhaojf85/docker-flask
Entry file: docker-flask/hello-flask/app.py
Scanned: 2016-10-25 22:55:33.971470
No vulnerabilities found.


higoreduardo/flask-blog
https://github.com/higoreduardo/flask-blog
Entry file: None
Scanned: 2016-10-25 22:55:34.511316
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sholsapp/flask-science
https://github.com/sholsapp/flask-science
Entry file: flask-science/flaskscience/__init__.py
Scanned: 2016-10-25 22:55:35.945297
No vulnerabilities found.


luoluohang/flask_blog
https://github.com/luoluohang/flask_blog
Entry file: flask_blog/app/__init__.py
Scanned: 2016-10-25 22:55:37.436175
Vulnerability 1:
File: flask_blog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flask_blog/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flask_blog/app/api_1_0/posts.py
	 > Line 18: next = None
File: flask_blog/app/api_1_0/posts.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flask_blog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flask_blog/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flask_blog/app/api_1_0/posts.py
	 > Line 18: next = None
File: flask_blog/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flask_blog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: flask_blog/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: flask_blog/app/api_1_0/posts.py
	 > Line 18: next = None
File: flask_blog/app/api_1_0/posts.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flask_blog/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 30: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 33: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 5:
File: flask_blog/app/main/views.py
 > User input at line 25, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 23: show_followed = False
	File: flask_blog/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 6:
File: flask_blog/app/main/views.py
 > User input at line 43, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 44: pagination = user.post.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 47: posts = pagination.items
File: flask_blog/app/main/views.py
 > reaches line 48, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 7:
File: flask_blog/app/main/views.py
 > User input at line 102, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 104: page = post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flask_blog/app/main/views.py
	 > Line 105: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 107: comments = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 101: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flask_blog/app/main/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, pagination=pagination, comments=comments)

Vulnerability 8:
File: flask_blog/app/main/views.py
 > User input at line 154, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 155: pagination = user.follower.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 157: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask_blog/app/main/views.py
	 > Line 153: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 159, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, pagination=pagination, title='Followers of', endpoint='.followers', follows=follows)

Vulnerability 9:
File: flask_blog/app/main/views.py
 > User input at line 168, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 169: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 171: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask_blog/app/main/views.py
	 > Line 167: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 173, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, pagination=pagination, follows=follows, title='Followed by', endpoint='.followed_by')

Vulnerability 10:
File: flask_blog/app/main/views.py
 > User input at line 193, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 194: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 197: comments = pagination.items
File: flask_blog/app/main/views.py
 > reaches line 198, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



mnzr/MegaFlask
https://github.com/mnzr/MegaFlask
Entry file: MegaFlask/app/__init__.py
Scanned: 2016-10-25 22:55:38.868789
No vulnerabilities found.


rchibana/MicroBlog
https://github.com/rchibana/MicroBlog
Entry file: MicroBlog/app/__init__.py
Scanned: 2016-10-25 22:55:40.311425
No vulnerabilities found.


damstrom/flask-hello-world
https://github.com/damstrom/flask-hello-world
Entry file: None
Scanned: 2016-10-25 22:55:40.853296
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

atf1999/Flask-Mega-Tutorial
https://github.com/atf1999/Flask-Mega-Tutorial
Entry file: Flask-Mega-Tutorial/server.py
Scanned: 2016-10-25 22:55:42.167166
No vulnerabilities found.


ThukralAman/flaskApp2
https://github.com/ThukralAman/flaskApp2
Entry file: flaskApp2/app.py
Scanned: 2016-10-25 22:55:43.647468
No vulnerabilities found.


apeete/flaskHelloWorld
https://github.com/apeete/flaskHelloWorld
Entry file: flaskHelloWorld/app.py
Scanned: 2016-10-25 22:56:01.647510
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lucidfrontier45/FlaskRethinkDBProject
https://github.com/lucidfrontier45/FlaskRethinkDBProject
Entry file: FlaskRethinkDBProject/webapp/factory.py
Scanned: 2016-10-25 22:56:04.014430
No vulnerabilities found.


jwnwilson/flask_gae_example
https://github.com/jwnwilson/flask_gae_example
Entry file: flask_gae_example/hello_world.py
Scanned: 2016-10-25 22:56:08.399074
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

saichandra286/BlogSpot-using-flask
https://github.com/saichandra286/BlogSpot-using-flask
Entry file: BlogSpot-using-flask/BlogSpot/app/__init__.py
Scanned: 2016-10-25 22:56:09.895689
No vulnerabilities found.


Hyvjan/flask-hello-world
https://github.com/Hyvjan/flask-hello-world
Entry file: None
Scanned: 2016-10-25 22:56:10.461534
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

auslander70/flask_hello_world
https://github.com/auslander70/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-25 22:56:11.770942
No vulnerabilities found.


BugisDev/AppSurvey-Flask
https://github.com/BugisDev/AppSurvey-Flask
Entry file: AppSurvey-Flask/app.py
Scanned: 2016-10-25 22:56:13.208337
No vulnerabilities found.


purpleP/flask_alchemy_rest
https://github.com/purpleP/flask_alchemy_rest
Entry file: flask_alchemy_rest/tests/test_endpoints.py
Scanned: 2016-10-25 22:56:14.910214
No vulnerabilities found.


yueyehm/flask_hello_world
https://github.com/yueyehm/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-25 22:56:16.186736
No vulnerabilities found.


lhr0916/flask_redis_task_q
https://github.com/lhr0916/flask_redis_task_q
Entry file: flask_redis_task_q/web/app.py
Scanned: 2016-10-25 22:56:17.487375
No vulnerabilities found.


PrettyPrinted/flask-request-decorators
https://github.com/PrettyPrinted/flask-request-decorators
Entry file: flask-request-decorators/request_decorators.py
Scanned: 2016-10-25 22:56:18.771571
No vulnerabilities found.


ics/Flask-GnuPG
https://github.com/ics/Flask-GnuPG
Entry file: Flask-GnuPG/test_flask_gnupg.py
Scanned: 2016-10-25 22:56:20.081953
No vulnerabilities found.


johnkabler/flask_dash_learn
https://github.com/johnkabler/flask_dash_learn
Entry file: flask_dash_learn/first_app.py
Scanned: 2016-10-25 22:56:21.376570
No vulnerabilities found.


leitu/netscaler-flask-api
https://github.com/leitu/netscaler-flask-api
Entry file: netscaler-flask-api/netscaler_api/__init__.py
Scanned: 2016-10-25 22:56:22.806756
No vulnerabilities found.


shilpasanthosh/flask-user-login-app
https://github.com/shilpasanthosh/flask-user-login-app
Entry file: flask-user-login-app/loginapp/app.py
Scanned: 2016-10-25 22:56:26.598037
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

rasselpratomo/simple_flask_restful
https://github.com/rasselpratomo/simple_flask_restful
Entry file: simple_flask_restful/app/__init__.py
Scanned: 2016-10-25 22:56:27.936138
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

PrettyPrinted/flask-uploads-intro
https://github.com/PrettyPrinted/flask-uploads-intro
Entry file: flask-uploads-intro/upload.py
Scanned: 2016-10-25 22:56:29.434167
No vulnerabilities found.


kojoidrissa/flask_intro_video
https://github.com/kojoidrissa/flask_intro_video
Entry file: flask_intro_video/5a/hello.py
Scanned: 2016-10-25 22:56:30.972172
Vulnerability 1:
File: flask_intro_video/5a/hello.py
 > User input at line 36, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_intro_video/5a/hello.py
	 > Line 32: name = None
File: flask_intro_video/5a/hello.py
 > reaches line 42, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, name=name, new=new)



joe8767/flask-restful-example
https://github.com/joe8767/flask-restful-example
Entry file: flask-restful-example/api.py
Scanned: 2016-10-25 22:56:32.366072
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mrkewen/flask-hello-world
https://github.com/mrkewen/flask-hello-world
Entry file: None
Scanned: 2016-10-25 22:56:32.880390
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jmsalcido/python-flask-microblog
https://github.com/jmsalcido/python-flask-microblog
Entry file: python-flask-microblog/microblog/app/__init__.py
Scanned: 2016-10-25 22:56:34.424185
Vulnerability 1:
File: python-flask-microblog/microblog/app/views.py
 > User input at line 107, trigger word ".data": 
	username = form.username.data
Reassigned in: 
	File: python-flask-microblog/microblog/app/views.py
	 > Line 108: g.user.username = username
	File: python-flask-microblog/microblog/app/views.py
	 > Line 115: ret_MAYBE_FUNCTION_NAME = render_template('user/edit_user.html',user=user, form=form)
File: python-flask-microblog/microblog/app/views.py
 > reaches line 111, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user_profile',username=username))

Vulnerability 2:
File: python-flask-microblog/microblog/app/views.py
 > User input at line 107, trigger word ".data": 
	username = form.username.data
Reassigned in: 
	File: python-flask-microblog/microblog/app/views.py
	 > Line 108: g.user.username = username
	File: python-flask-microblog/microblog/app/views.py
	 > Line 115: ret_MAYBE_FUNCTION_NAME = render_template('user/edit_user.html',user=user, form=form)
File: python-flask-microblog/microblog/app/views.py
 > reaches line 111, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user_profile',username=username))

Vulnerability 3:
File: python-flask-microblog/microblog/app/forms.py
 > User input at line 34, trigger word ".data": 
	users = User.query.filter(or_(User.username == self.username.data, User.email == self.email.data)).all()
File: python-flask-microblog/microblog/app/forms.py
 > reaches line 34, trigger word "filter(": 
	users = User.query.filter(or_(User.username == self.username.data, User.email == self.email.data)).all()



ettanany/flask-angular-contact-manager
https://github.com/ettanany/flask-angular-contact-manager
Entry file: flask-angular-contact-manager/server/app/__init__.py
Scanned: 2016-10-25 22:56:36.240415
No vulnerabilities found.


nausheenfatma/WebAppWithFlask
https://github.com/nausheenfatma/WebAppWithFlask
Entry file: WebAppWithFlask/model.py
Scanned: 2016-10-25 22:56:37.551302
Vulnerability 1:
File: WebAppWithFlask/controller.py
 > User input at line 21, trigger word "form[": 
	post = Post(request.form['author'], request.form['title'], request.form['content'], request.form['published'])
Reassigned in: 
	File: WebAppWithFlask/controller.py
	 > Line 22: post_add = post.add(post)
	File: WebAppWithFlask/controller.py
	 > Line 27: error = post_add
File: WebAppWithFlask/controller.py
 > reaches line 28, trigger word "flash(": 
	flash(error)

Vulnerability 2:
File: WebAppWithFlask/controller.py
 > User input at line 35, trigger word "get(": 
	post = Post.query.get(id)
Reassigned in: 
	File: WebAppWithFlask/controller.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = redirect(url_for('post_index'))
	File: WebAppWithFlask/controller.py
	 > Line 48: ret_MAYBE_FUNCTION_NAME = redirect(url_for('post_index'))
File: WebAppWithFlask/controller.py
 > reaches line 52, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('update.html',post=post)

Vulnerability 3:
File: WebAppWithFlask/controller.py
 > User input at line 57, trigger word "get(": 
	post = Post.query.get(id)
Reassigned in: 
	File: WebAppWithFlask/controller.py
	 > Line 62: post_delete = post.delete(post)
	File: WebAppWithFlask/controller.py
	 > Line 66: error = post_delete
File: WebAppWithFlask/controller.py
 > reaches line 67, trigger word "flash(": 
	flash(error)



marcfilba/videoStreamingFlask
https://github.com/marcfilba/videoStreamingFlask
Entry file: videoStreamingFlask/main.py
Scanned: 2016-10-25 22:56:38.818608
No vulnerabilities found.


Jacob234/Flask-hello-world
https://github.com/Jacob234/Flask-hello-world
Entry file: Flask-hello-world/hello_world.py
Scanned: 2016-10-25 22:56:40.115612
No vulnerabilities found.


PrettyPrinted/flask-restless-post
https://github.com/PrettyPrinted/flask-restless-post
Entry file: flask-restless-post/restless.py
Scanned: 2016-10-25 22:56:41.391557
No vulnerabilities found.


alexwilkerson/microblog
https://github.com/alexwilkerson/microblog
Entry file: None
Scanned: 2016-10-25 22:56:41.914873
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/alexwilkerson/microblog.

austindavid/flasktaskr-cont
https://github.com/austindavid/flasktaskr-cont
Entry file: flasktaskr-cont/project/__init__.py
Scanned: 2016-10-25 22:56:43.347078
No vulnerabilities found.


RicoChou/MyFlasky
https://github.com/RicoChou/MyFlasky
Entry file: MyFlasky/app/__init__.py
Scanned: 2016-10-25 22:56:45.119184
Vulnerability 1:
File: MyFlasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: MyFlasky/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: MyFlasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: MyFlasky/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: MyFlasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: MyFlasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: MyFlasky/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: MyFlasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: MyFlasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: MyFlasky/app/api_1_0/users.py
	 > Line 23: next = None
File: MyFlasky/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: MyFlasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: MyFlasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: MyFlasky/app/api_1_0/users.py
	 > Line 23: next = None
File: MyFlasky/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: MyFlasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: MyFlasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: MyFlasky/app/api_1_0/users.py
	 > Line 23: next = None
File: MyFlasky/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: MyFlasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: MyFlasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: MyFlasky/app/api_1_0/users.py
	 > Line 45: next = None
File: MyFlasky/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: MyFlasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: MyFlasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: MyFlasky/app/api_1_0/users.py
	 > Line 45: next = None
File: MyFlasky/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: MyFlasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: MyFlasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: MyFlasky/app/api_1_0/users.py
	 > Line 45: next = None
File: MyFlasky/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: MyFlasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: MyFlasky/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: MyFlasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: MyFlasky/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: MyFlasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: MyFlasky/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: MyFlasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: MyFlasky/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: MyFlasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: MyFlasky/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: MyFlasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: MyFlasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: MyFlasky/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: MyFlasky/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/main/views.py
	 > Line 55: posts = pagination.items
	File: MyFlasky/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: MyFlasky/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: MyFlasky/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 45: show_followed = False
	File: MyFlasky/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: MyFlasky/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: MyFlasky/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/main/views.py
	 > Line 67: posts = pagination.items
File: MyFlasky/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: MyFlasky/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: MyFlasky/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/main/views.py
	 > Line 134: comments = pagination.items
	File: MyFlasky/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: MyFlasky/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: MyFlasky/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: MyFlasky/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: MyFlasky/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: MyFlasky/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: MyFlasky/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: MyFlasky/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: MyFlasky/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: MyFlasky/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: MyFlasky/app/main/views.py
	 > Line 246: comments = pagination.items
File: MyFlasky/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



tdvtoan/scorecard-recognition
https://github.com/tdvtoan/scorecard-recognition
Entry file: scorecard-recognition/project/__init__.py
Scanned: 2016-10-25 22:57:03.199318
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

saichandra286/Complete-Angularjs-Flask-Todo-App
https://github.com/saichandra286/Complete-Angularjs-Flask-Todo-App
Entry file: None
Scanned: 2016-10-25 22:57:04.635308
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/saichandra286/Complete-Angularjs-Flask-Todo-App.

quiqua/docker-flask-celery-redis-example
https://github.com/quiqua/docker-flask-celery-redis-example
Entry file: docker-flask-celery-redis-example/src/myapp/app.py
Scanned: 2016-10-25 22:57:06.960086
No vulnerabilities found.


MakeSchool-17/trip-planner-flask-backend-thetopplayer
https://github.com/MakeSchool-17/trip-planner-flask-backend-thetopplayer
Entry file: trip-planner-flask-backend-thetopplayer/server.py
Scanned: 2016-10-25 22:57:11.779892
No vulnerabilities found.


MacHu-GWU/flask-restless-api-client-project
https://github.com/MacHu-GWU/flask-restless-api-client-project
Entry file: flask-restless-api-client-project/tests/CustomizeSerialization/run_server.py
Scanned: 2016-10-25 22:57:13.199443
No vulnerabilities found.


whiskeyromeo/bucketlist
https://github.com/whiskeyromeo/bucketlist
Entry file: None
Scanned: 2016-10-25 22:57:16.571795
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

CHHLeo/foruV1home_flask_pycharm_practice
https://github.com/CHHLeo/foruV1home_flask_pycharm_practice
Entry file: foruV1home_flask_pycharm_practice/flask_pycharm_practice.py
Scanned: 2016-10-25 22:58:02.327129
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

heamon7/learn-restful
https://github.com/heamon7/learn-restful
Entry file: learn-restful/app.py
Scanned: 2016-10-25 22:58:04.196237
Vulnerability 1:
File: learn-restful/app.py
 > User input at line 82, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: learn-restful/app.py
 > reaches line 89, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



goodyvn/flask
https://github.com/goodyvn/flask
Entry file: None
Scanned: 2016-10-25 22:58:06.840590
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

stevebannon/flask
https://github.com/stevebannon/flask
Entry file: None
Scanned: 2016-10-25 22:58:07.373781
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sebkouba/dynamic-flask-form
https://github.com/sebkouba/dynamic-flask-form
Entry file: dynamic-flask-form/multimodel.py
Scanned: 2016-10-25 22:58:08.671271
No vulnerabilities found.


willianribeiro/flaskr
https://github.com/willianribeiro/flaskr
Entry file: None
Scanned: 2016-10-25 22:58:09.229833
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/willianribeiro/flaskr.

solutionspecialist/flaskr
https://github.com/solutionspecialist/flaskr
Entry file: None
Scanned: 2016-10-25 22:58:09.756008
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/solutionspecialist/flaskr.

XingxinLi/flaskr
https://github.com/XingxinLi/flaskr
Entry file: None
Scanned: 2016-10-25 22:58:10.301521
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/XingxinLi/flaskr.

wiggitywalt/flasktaskr
https://github.com/wiggitywalt/flasktaskr
Entry file: None
Scanned: 2016-10-25 22:58:10.827083
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mg6/flaskr
https://github.com/mg6/flaskr
Entry file: None
Scanned: 2016-10-25 22:58:11.345424
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mg6/flaskr.

sourHobbes/flaskdemo
https://github.com/sourHobbes/flaskdemo
Entry file: None
Scanned: 2016-10-25 22:58:11.892680
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Bayaz/flasktaskr
https://github.com/Bayaz/flasktaskr
Entry file: None
Scanned: 2016-10-25 22:58:12.472403
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kewsie/flasky
https://github.com/kewsie/flasky
Entry file: None
Scanned: 2016-10-25 22:58:13.005040
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

metakermit/resin-home-automator
https://github.com/metakermit/resin-home-automator
Entry file: resin-home-automator/src/main.py
Scanned: 2016-10-25 22:58:14.779511
No vulnerabilities found.


guiti1/FlaskAp
https://github.com/guiti1/FlaskAp
Entry file: FlaskAp/FlaskApp/__init__.py
Scanned: 2016-10-25 22:58:18.629201
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskAp/FlaskApp/venv/lib/python2.7/sre_compile.py

zerodaemon/flask1
https://github.com/zerodaemon/flask1
Entry file: flask1/flaskr.py
Scanned: 2016-10-25 22:58:19.952866
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

JoshLandry/FlaskBlog
https://github.com/JoshLandry/FlaskBlog
Entry file: FlaskBlog/Flask_Blog/__init__.py
Scanned: 2016-10-25 22:58:22.016582
Vulnerability 1:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 187, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 190: newEntry = BlogEntry(user=current_user, title=title, entry=entry, rating=rating, artist=artist, tags=tags)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 193, trigger word "flash(": 
	flash('Stored entry: '{}''.format(title))

Vulnerability 2:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 221, trigger word ".data": 
	user = User.get_by_username(form.username.data)
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 227: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 224, trigger word "flash(": 
	flash('Logged in successfully as {}.'.format(user.username))

Vulnerability 3:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 221, trigger word ".data": 
	user = User.get_by_username(form.username.data)
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 227: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 225, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user',username=user.username))

Vulnerability 4:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 221, trigger word ".data": 
	user = User.get_by_username(form.username.data)
Reassigned in: 
	File: FlaskBlog/Flask_Blog/__init__.py
	 > Line 227: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 225, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('user',username=user.username))

Vulnerability 5:
File: FlaskBlog/Flask_Blog/__init__.py
 > User input at line 238, trigger word ".data": 
	user = User(email=form.email.data, username=form.username.data, password=form.password.data)
File: FlaskBlog/Flask_Blog/__init__.py
 > reaches line 243, trigger word "flash(": 
	flash('Welcome, {}! Please login.'.format(user.username))



Bayaz/FlaskBlog
https://github.com/Bayaz/FlaskBlog
Entry file: FlaskBlog/blog.py
Scanned: 2016-10-25 22:58:23.338010
No vulnerabilities found.


colindjk/flaskTest
https://github.com/colindjk/flaskTest
Entry file: flaskTest/app.py
Scanned: 2016-10-25 22:58:24.760344
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Arsh23/random-crossword-generater
https://github.com/Arsh23/random-crossword-generater
Entry file: random-crossword-generater/app.py
Scanned: 2016-10-25 22:58:26.833117
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

spark0128/flask-intro
https://github.com/spark0128/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-25 22:58:44.917086
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

petrgru/flask-remenarna
https://github.com/petrgru/flask-remenarna
Entry file: flask-remenarna/app/__init__.py
Scanned: 2016-10-25 22:58:47.831306
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

bcb/flask-uploads
https://github.com/bcb/flask-uploads
Entry file: flask-uploads/tests/test-uploads.py
Scanned: 2016-10-25 22:58:49.446425
No vulnerabilities found.


mauriciorey/learning_flask
https://github.com/mauriciorey/learning_flask
Entry file: learning_flask/routes.py
Scanned: 2016-10-25 22:58:51.352444
Vulnerability 1:
File: learning_flask/routes.py
 > User input at line 85, trigger word ".data": 
	address = form.address.data
Reassigned in: 
	File: learning_flask/routes.py
	 > Line 89: my_coordinates = p.address_to_latlng(address)
	File: learning_flask/routes.py
	 > Line 90: places = p.query(address)
	File: learning_flask/routes.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: learning_flask/routes.py
	 > Line 77: places = []
	File: learning_flask/routes.py
	 > Line 78: my_coordinates = (42.335647, -71.07505600000002)
	File: learning_flask/routes.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form)
File: learning_flask/routes.py
 > reaches line 93, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form, my_coordinates=my_coordinates, places=places)

Vulnerability 2:
File: learning_flask/routes.py
 > User input at line 85, trigger word ".data": 
	address = form.address.data
Reassigned in: 
	File: learning_flask/routes.py
	 > Line 89: my_coordinates = p.address_to_latlng(address)
	File: learning_flask/routes.py
	 > Line 90: places = p.query(address)
	File: learning_flask/routes.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: learning_flask/routes.py
	 > Line 77: places = []
	File: learning_flask/routes.py
	 > Line 78: my_coordinates = (42.335647, -71.07505600000002)
	File: learning_flask/routes.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form)
File: learning_flask/routes.py
 > reaches line 96, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form, my_coordinates=my_coordinates, places=places)



kumaraswins/flask-angular
https://github.com/kumaraswins/flask-angular
Entry file: flask-angular/app/__init__.py
Scanned: 2016-10-25 22:59:00.589865
No vulnerabilities found.


zengyifa/flask-starter
https://github.com/zengyifa/flask-starter
Entry file: None
Scanned: 2016-10-25 22:59:02.440856
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zengyifa/flask-starter.

rookiebulls/flask-learn
https://github.com/rookiebulls/flask-learn
Entry file: None
Scanned: 2016-10-25 22:59:18.436892
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

climberwb/flask-blog
https://github.com/climberwb/flask-blog
Entry file: None
Scanned: 2016-10-25 22:59:18.963999
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Hyvjan/flask-blog
https://github.com/Hyvjan/flask-blog
Entry file: None
Scanned: 2016-10-25 22:59:19.504864
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

xingyz/flask_thebutton
https://github.com/xingyz/flask_thebutton
Entry file: flask_thebutton/app/__init__.py
Scanned: 2016-10-25 22:59:21.194920
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

brittanymcgarr/learningFlask
https://github.com/brittanymcgarr/learningFlask
Entry file: learningFlask/FlaskPractice/app/app.py
Scanned: 2016-10-25 22:59:23.807485
Vulnerability 1:
File: learningFlask/FlaskPractice/app/helpers.py
 > User input at line 13, trigger word "get(": 
	page = request.args.get('page')
Reassigned in: 
	File: learningFlask/FlaskPractice/app/helpers.py
	 > Line 16: page = int(page)
	File: learningFlask/FlaskPractice/app/helpers.py
	 > Line 18: page = 1
	File: learningFlask/FlaskPractice/app/helpers.py
	 > Line 20: object_list = query.paginate(page, paginate_by)
File: learningFlask/FlaskPractice/app/helpers.py
 > reaches line 22, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template(template_name,object_list=object_list, context)

Vulnerability 2:
File: learningFlask/FlaskPractice/app/entries/blueprint.py
 > User input at line 65, trigger word "files[": 
	image_file = request.files['file']
Reassigned in: 
	File: learningFlask/FlaskPractice/app/entries/blueprint.py
	 > Line 66: filename = os.path.join(app.config['IMAGES_DIR'], secure_filename(image_file.filename))
File: learningFlask/FlaskPractice/app/entries/blueprint.py
 > reaches line 69, trigger word "flash(": 
	flash('Saved %s' % os.path.basename(filename), 'success')



PrettyPrinted/flask-sessions
https://github.com/PrettyPrinted/flask-sessions
Entry file: flask-sessions/session.py
Scanned: 2016-10-25 22:59:25.092248
No vulnerabilities found.


pfig/flask-elasticsearch
https://github.com/pfig/flask-elasticsearch
Entry file: flask-elasticsearch/flask_elasticsearch.py
Scanned: 2016-10-25 22:59:26.509386
No vulnerabilities found.


nimeshkverma/Ideal_Flask
https://github.com/nimeshkverma/Ideal_Flask
Entry file: Ideal_Flask/LargeApp/app/__init__.py
Scanned: 2016-10-25 22:59:30.372248
Vulnerability 1:
File: Ideal_Flask/LargeApp/app/mod_auth/controllers.py
 > User input at line 31, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Ideal_Flask/LargeApp/app/mod_auth/controllers.py
	 > Line 35: session['user_id'] = user.id
File: Ideal_Flask/LargeApp/app/mod_auth/controllers.py
 > reaches line 37, trigger word "flash(": 
	flash('Welcome %s' % user.name)



tholsapp/flask_framework
https://github.com/tholsapp/flask_framework
Entry file: flask_framework/app/__init__.py
Scanned: 2016-10-25 22:59:31.750043
No vulnerabilities found.


evansa/flask-sqlalchemy
https://github.com/evansa/flask-sqlalchemy
Entry file: flask-sqlalchemy/flask-sqlalchemy/__init__.py
Scanned: 2016-10-25 22:59:33.191366
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Kajvdh/nao-flask
https://github.com/Kajvdh/nao-flask
Entry file: nao-flask/app.py
Scanned: 2016-10-25 22:59:34.614123
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

anbasile/flask_sample
https://github.com/anbasile/flask_sample
Entry file: flask_sample/app.py
Scanned: 2016-10-25 22:59:38.392646
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_sample/flask/lib/python2.7/sre_compile.py

androidzhibinw/Flask-reg
https://github.com/androidzhibinw/Flask-reg
Entry file: Flask-reg/app.py
Scanned: 2016-10-25 22:59:40.098682
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mrasband/flask-seed
https://github.com/mrasband/flask-seed
Entry file: None
Scanned: 2016-10-25 22:59:40.649354
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mrasband/flask-seed.

vrokida/demo-flask
https://github.com/vrokida/demo-flask
Entry file: demo-flask/demo-flask.py
Scanned: 2016-10-25 22:59:41.961382
No vulnerabilities found.


Clarity-89/server_flask
https://github.com/Clarity-89/server_flask
Entry file: server_flask/project.py
Scanned: 2016-10-25 22:59:43.889984
No vulnerabilities found.


jcmflenso/flask-udemy
https://github.com/jcmflenso/flask-udemy
Entry file: flask-udemy/hello.py
Scanned: 2016-10-25 22:59:45.196385
No vulnerabilities found.


schakalakka/flask-project
https://github.com/schakalakka/flask-project
Entry file: flask-project/app/__init__.py
Scanned: 2016-10-25 22:59:53.911255
No vulnerabilities found.


simongareste/flask-dummy
https://github.com/simongareste/flask-dummy
Entry file: flask-dummy/flask_dummy/__init__.py
Scanned: 2016-10-25 22:59:55.398065
No vulnerabilities found.


liu1020269358/learn-flask
https://github.com/liu1020269358/learn-flask
Entry file: None
Scanned: 2016-10-25 22:59:59.524116
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

foobaar/flask-expt
https://github.com/foobaar/flask-expt
Entry file: flask-expt/flask-experiment.py
Scanned: 2016-10-25 23:00:00.816662
No vulnerabilities found.


lucafaggianelli/flask-skeleton
https://github.com/lucafaggianelli/flask-skeleton
Entry file: flask-skeleton/app_template/app_name/__init__.py
Scanned: 2016-10-25 23:00:03.535557
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

econne01/flask_blog
https://github.com/econne01/flask_blog
Entry file: flask_blog/app/app.py
Scanned: 2016-10-25 23:00:05.672336
Vulnerability 1:
File: flask_blog/app/views.py
 > User input at line 13, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
File: flask_blog/app/views.py
 > reaches line 20, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next_url or url_for('index'))

Vulnerability 2:
File: flask_blog/app/views.py
 > User input at line 13, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
File: flask_blog/app/views.py
 > reaches line 20, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next_url or url_for('index'))

Vulnerability 3:
File: flask_blog/app/views.py
 > User input at line 13, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
File: flask_blog/app/views.py
 > reaches line 23, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',next_url=next_url)

Vulnerability 4:
File: flask_blog/app/views.py
 > User input at line 55, trigger word "get(": 
	entry = Entry.create(title=request.form.get('title'), content=request.form.get('content'), published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/app/views.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/app/views.py
 > reaches line 61, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('detail',slug=entry.slug))

Vulnerability 5:
File: flask_blog/app/views.py
 > User input at line 55, trigger word "get(": 
	entry = Entry.create(title=request.form.get('title'), content=request.form.get('content'), published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/app/views.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/app/views.py
 > reaches line 61, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('detail',slug=entry.slug))

Vulnerability 6:
File: flask_blog/app/views.py
 > User input at line 55, trigger word "get(": 
	entry = Entry.create(title=request.form.get('title'), content=request.form.get('content'), published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/app/views.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/app/views.py
 > reaches line 63, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('edit',slug=entry.slug))

Vulnerability 7:
File: flask_blog/app/views.py
 > User input at line 55, trigger word "get(": 
	entry = Entry.create(title=request.form.get('title'), content=request.form.get('content'), published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/app/views.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/app/views.py
 > reaches line 63, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('edit',slug=entry.slug))



mdeamon/flask_app
https://github.com/mdeamon/flask_app
Entry file: flask_app/app.py
Scanned: 2016-10-25 23:00:07.171417
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

dlrice/hello-flask
https://github.com/dlrice/hello-flask
Entry file: hello-flask/hello.py
Scanned: 2016-10-25 23:00:08.516472
No vulnerabilities found.


euler1337/flask_tutorial
https://github.com/euler1337/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:00:09.125331
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/euler1337/flask_tutorial.

devyash/Intelligent-Public-Grievance-System
https://github.com/devyash/Intelligent-Public-Grievance-System
Entry file: Intelligent-Public-Grievance-System/app.py
Scanned: 2016-10-25 23:00:15.905252
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

elphinkuo/ji_python_flask
https://github.com/elphinkuo/ji_python_flask
Entry file: ji_python_flask/app/musicModify.py
Scanned: 2016-10-25 23:00:17.367839
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

afaki077/minitweet
https://github.com/afaki077/minitweet
Entry file: None
Scanned: 2016-10-25 23:00:19.885409
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/afaki077/minitweet.

ThukralAman/flaskApp2
https://github.com/ThukralAman/flaskApp2
Entry file: flaskApp2/app.py
Scanned: 2016-10-25 23:00:21.688297
No vulnerabilities found.


sbm367/flaskTest2
https://github.com/sbm367/flaskTest2
Entry file: flaskTest2/flaskTest.py
Scanned: 2016-10-25 23:00:23.002941
No vulnerabilities found.


emil-k/climate-compare_FlaskApp
https://github.com/emil-k/climate-compare_FlaskApp
Entry file: climate-compare_FlaskApp/__init__.py
Scanned: 2016-10-25 23:00:31.642521
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: climate-compare_FlaskApp/venv/lib/python2.7/sre_compile.py

Cosaquee/flask-weather-app
https://github.com/Cosaquee/flask-weather-app
Entry file: flask-weather-app/main.py
Scanned: 2016-10-25 23:00:35.613840
No vulnerabilities found.


daytonight/Flask-Web-Development-code
https://github.com/daytonight/Flask-Web-Development-code
Entry file: Flask-Web-Development-code/venv/lib/python2.7/site-packages/flask_sqlalchemy/__init__.py
Scanned: 2016-10-25 23:00:41.259627
No vulnerabilities found.


lkpanganiban/flask-mega-tutorial
https://github.com/lkpanganiban/flask-mega-tutorial
Entry file: flask-mega-tutorial/app/__init__.py
Scanned: 2016-10-25 23:00:42.915677
No vulnerabilities found.


saichandra286/BlogSpot-using-flask
https://github.com/saichandra286/BlogSpot-using-flask
Entry file: BlogSpot-using-flask/BlogSpot/app/__init__.py
Scanned: 2016-10-25 23:00:44.503513
No vulnerabilities found.


afborodin/simple-mysql-flask-app
https://github.com/afborodin/simple-mysql-flask-app
Entry file: None
Scanned: 2016-10-25 23:01:32.976816
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dternyak/my-react-flask-blog
https://github.com/dternyak/my-react-flask-blog
Entry file: my-react-flask-blog/index.py
Scanned: 2016-10-25 23:01:48.978051
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

skriems/flask-cherrypy-dockerized
https://github.com/skriems/flask-cherrypy-dockerized
Entry file: flask-cherrypy-dockerized/app.py
Scanned: 2016-10-25 23:01:50.315894
No vulnerabilities found.


johnkabler/flask_dash_learn
https://github.com/johnkabler/flask_dash_learn
Entry file: flask_dash_learn/first_app.py
Scanned: 2016-10-25 23:01:51.604494
No vulnerabilities found.


broak/flask-hello-world
https://github.com/broak/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:01:52.124866
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ABaldwinHunter/flask-clone-classic
https://github.com/ABaldwinHunter/flask-clone-classic
Entry file: flask-clone-classic/setup.py
Scanned: 2016-10-25 23:01:55.994130
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ldrunner100/flask_hello_world
https://github.com/ldrunner100/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-25 23:01:59.137979
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

FinleySmile/flask_blog_demo
https://github.com/FinleySmile/flask_blog_demo
Entry file: flask_blog_demo/flask_blog_demo.py
Scanned: 2016-10-25 23:02:01.475353
Vulnerability 1:
File: flask_blog_demo/flask_blog_demo.py
 > User input at line 63, trigger word "form[": 
	username = request.form['username']
Reassigned in: 
	File: flask_blog_demo/flask_blog_demo.py
	 > Line 68: ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_entries'))
File: flask_blog_demo/flask_blog_demo.py
 > reaches line 71, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',username=username, error=error)



quandrei/godzilla-foxfire-flask
https://github.com/quandrei/godzilla-foxfire-flask
Entry file: godzilla-foxfire-flask/app/__init__.py
Scanned: 2016-10-25 23:02:03.530545
No vulnerabilities found.


ArTrics/Flask_Angular_Project
https://github.com/ArTrics/Flask_Angular_Project
Entry file: Flask_Angular_Project/index.py
Scanned: 2016-10-25 23:02:08.068371
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask_Angular_Project/venv/lib/python2.7/sre_compile.py

RodrigoVillatoro/flask_social_network
https://github.com/RodrigoVillatoro/flask_social_network
Entry file: flask_social_network/app/__init__.py
Scanned: 2016-10-25 23:02:10.483382
Vulnerability 1:
File: flask_social_network/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 17: posts = pagination.items
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 18: prev_page = None
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 21: next_page = None
File: flask_social_network/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	prev_page = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flask_social_network/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 17: posts = pagination.items
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 18: prev_page = None
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 21: next_page = None
File: flask_social_network/app/api_1_0/posts.py
 > reaches line 23, trigger word "url_for(": 
	next_page = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flask_social_network/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 17: posts = pagination.items
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 18: prev_page = None
	File: flask_social_network/app/api_1_0/posts.py
	 > Line 21: next_page = None
File: flask_social_network/app/api_1_0/posts.py
 > reaches line 24, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prev_pagenext_pagepagination.total)

Vulnerability 4:
File: flask_social_network/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/users.py
	 > Line 21: posts = pagination.items
	File: flask_social_network/app/api_1_0/users.py
	 > Line 22: prev_page = None
	File: flask_social_network/app/api_1_0/users.py
	 > Line 25: next_page = None
File: flask_social_network/app/api_1_0/users.py
 > reaches line 24, trigger word "url_for(": 
	prev_page = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flask_social_network/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/users.py
	 > Line 21: posts = pagination.items
	File: flask_social_network/app/api_1_0/users.py
	 > Line 22: prev_page = None
	File: flask_social_network/app/api_1_0/users.py
	 > Line 25: next_page = None
File: flask_social_network/app/api_1_0/users.py
 > reaches line 27, trigger word "url_for(": 
	next_page = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flask_social_network/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/users.py
	 > Line 21: posts = pagination.items
	File: flask_social_network/app/api_1_0/users.py
	 > Line 22: prev_page = None
	File: flask_social_network/app/api_1_0/users.py
	 > Line 25: next_page = None
File: flask_social_network/app/api_1_0/users.py
 > reaches line 28, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prev_pagenext_pagepagination.total)

Vulnerability 7:
File: flask_social_network/app/api_1_0/users.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/users.py
	 > Line 40: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/users.py
	 > Line 45: posts = pagination.items
	File: flask_social_network/app/api_1_0/users.py
	 > Line 46: prev_page = None
	File: flask_social_network/app/api_1_0/users.py
	 > Line 49: next_page = None
File: flask_social_network/app/api_1_0/users.py
 > reaches line 48, trigger word "url_for(": 
	prev_page = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flask_social_network/app/api_1_0/users.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/users.py
	 > Line 40: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/users.py
	 > Line 45: posts = pagination.items
	File: flask_social_network/app/api_1_0/users.py
	 > Line 46: prev_page = None
	File: flask_social_network/app/api_1_0/users.py
	 > Line 49: next_page = None
File: flask_social_network/app/api_1_0/users.py
 > reaches line 51, trigger word "url_for(": 
	next_page = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flask_social_network/app/api_1_0/users.py
 > User input at line 39, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/users.py
	 > Line 40: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/users.py
	 > Line 45: posts = pagination.items
	File: flask_social_network/app/api_1_0/users.py
	 > Line 46: prev_page = None
	File: flask_social_network/app/api_1_0/users.py
	 > Line 49: next_page = None
File: flask_social_network/app/api_1_0/users.py
 > reaches line 52, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prev_pagenext_pagepagination.total)

Vulnerability 10:
File: flask_social_network/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 16: comments = pagination.items
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 17: prev_page = None
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 20: next_page = None
File: flask_social_network/app/api_1_0/comments.py
 > reaches line 19, trigger word "url_for(": 
	prev_page = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flask_social_network/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 16: comments = pagination.items
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 17: prev_page = None
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 20: next_page = None
File: flask_social_network/app/api_1_0/comments.py
 > reaches line 22, trigger word "url_for(": 
	next_page = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flask_social_network/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 16: comments = pagination.items
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 17: prev_page = None
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 20: next_page = None
File: flask_social_network/app/api_1_0/comments.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prev_pagenext_pagepagination.total)

Vulnerability 13:
File: flask_social_network/app/api_1_0/comments.py
 > User input at line 40, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 41: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 44: comments = pagination.items
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 45: prev_page = None
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 48: next_page = None
File: flask_social_network/app/api_1_0/comments.py
 > reaches line 47, trigger word "url_for(": 
	prev_page = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flask_social_network/app/api_1_0/comments.py
 > User input at line 40, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 41: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 44: comments = pagination.items
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 45: prev_page = None
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 48: next_page = None
File: flask_social_network/app/api_1_0/comments.py
 > reaches line 50, trigger word "url_for(": 
	next_page = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flask_social_network/app/api_1_0/comments.py
 > User input at line 40, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 41: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 44: comments = pagination.items
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 45: prev_page = None
	File: flask_social_network/app/api_1_0/comments.py
	 > Line 48: next_page = None
File: flask_social_network/app/api_1_0/comments.py
 > reaches line 51, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prev_pagenext_pagepagination.total)

Vulnerability 16:
File: flask_social_network/app/main/views.py
 > User input at line 47, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 56: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/main/views.py
	 > Line 61: posts = pagination.items
	File: flask_social_network/app/main/views.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask_social_network/app/main/views.py
 > reaches line 62, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flask_social_network/app/main/views.py
 > User input at line 50, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 48: show_followed = False
	File: flask_social_network/app/main/views.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask_social_network/app/main/views.py
 > reaches line 62, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flask_social_network/app/main/views.py
 > User input at line 74, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 75: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['APP_POSTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/main/views.py
	 > Line 80: posts = pagination.items
File: flask_social_network/app/main/views.py
 > reaches line 81, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flask_social_network/app/main/views.py
 > User input at line 146, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 148: page = post.comments.count() - 1 // current_app.config['APP_COMMENTS_PER_PAGE'] + 1
	File: flask_social_network/app/main/views.py
	 > Line 150: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/main/views.py
	 > Line 155: comments = pagination.items
	File: flask_social_network/app/main/views.py
	 > Line 145: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.post',id=post.id, page=-1))
File: flask_social_network/app/main/views.py
 > reaches line 156, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flask_social_network/app/main/views.py
 > User input at line 220, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 221: pagination = user.followers.paginate(page,per_page=current_app.config['APP_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/main/views.py
	 > Line 226: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask_social_network/app/main/views.py
	 > Line 219: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask_social_network/app/main/views.py
 > reaches line 228, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='main.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flask_social_network/app/main/views.py
 > User input at line 244, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 245: pagination = user.followed.paginate(page,per_page=current_app.config['APP_FOLLOWING_PER_PAGE'], error_out=False)
	File: flask_social_network/app/main/views.py
	 > Line 250: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask_social_network/app/main/views.py
	 > Line 243: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask_social_network/app/main/views.py
 > reaches line 252, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='main.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flask_social_network/app/main/views.py
 > User input at line 282, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_social_network/app/main/views.py
	 > Line 283: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['APP_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_social_network/app/main/views.py
	 > Line 288: comments = pagination.items
File: flask_social_network/app/main/views.py
 > reaches line 289, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



mdublin/Flask-CRUD-template
https://github.com/mdublin/Flask-CRUD-template
Entry file: Flask-CRUD-template/blog/__init__.py
Scanned: 2016-10-25 23:02:15.082103
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

p00gz/flask-imdbratings-app-backend
https://github.com/p00gz/flask-imdbratings-app-backend
Entry file: flask-imdbratings-app-backend/imdbRatings/__init__.py
Scanned: 2016-10-25 23:02:19.183152
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

moonlitesolutions/flask_rest_template
https://github.com/moonlitesolutions/flask_rest_template
Entry file: flask_rest_template/flask_rest/api/api.py
Scanned: 2016-10-25 23:02:22.465419
No vulnerabilities found.


mrkewen/flask-hello-world
https://github.com/mrkewen/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:02:22.986028
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wasw100/flask-sqlalchemy-demo2
https://github.com/wasw100/flask-sqlalchemy-demo2
Entry file: flask-sqlalchemy-demo2/hello.py
Scanned: 2016-10-25 23:02:24.318950
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

artisanofcode/flask-generic-views
https://github.com/artisanofcode/flask-generic-views
Entry file: flask-generic-views/setup.py
Scanned: 2016-10-25 23:02:26.015080
Vulnerability 1:
File: flask-generic-views/flask_generic_views/core.py
 > User input at line 308, trigger word "get(": 
	query = request.environ.get('QUERY_STRING', '')
File: flask-generic-views/flask_generic_views/core.py
 > reaches line 311, trigger word "replace(": 
	url = url_parse(url).replace(query=query).to_url()



mekanix/flask-bootstrap-sql-rest
https://github.com/mekanix/flask-bootstrap-sql-rest
Entry file: flask-bootstrap-sql-rest/manage.py
Scanned: 2016-10-25 23:02:27.418324
No vulnerabilities found.


ayesandarmoe/microblog_flask_tutorial
https://github.com/ayesandarmoe/microblog_flask_tutorial
Entry file: microblog_flask_tutorial/app/__init__.py
Scanned: 2016-10-25 23:02:37.316632
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

alexwilkerson/flask-hello-world
https://github.com/alexwilkerson/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:02:37.932265
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

nausheenfatma/WebAppWithFlask
https://github.com/nausheenfatma/WebAppWithFlask
Entry file: WebAppWithFlask/model.py
Scanned: 2016-10-25 23:02:39.237421
Vulnerability 1:
File: WebAppWithFlask/controller.py
 > User input at line 21, trigger word "form[": 
	post = Post(request.form['author'], request.form['title'], request.form['content'], request.form['published'])
Reassigned in: 
	File: WebAppWithFlask/controller.py
	 > Line 22: post_add = post.add(post)
	File: WebAppWithFlask/controller.py
	 > Line 27: error = post_add
File: WebAppWithFlask/controller.py
 > reaches line 28, trigger word "flash(": 
	flash(error)

Vulnerability 2:
File: WebAppWithFlask/controller.py
 > User input at line 35, trigger word "get(": 
	post = Post.query.get(id)
Reassigned in: 
	File: WebAppWithFlask/controller.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = redirect(url_for('post_index'))
	File: WebAppWithFlask/controller.py
	 > Line 48: ret_MAYBE_FUNCTION_NAME = redirect(url_for('post_index'))
File: WebAppWithFlask/controller.py
 > reaches line 52, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('update.html',post=post)

Vulnerability 3:
File: WebAppWithFlask/controller.py
 > User input at line 57, trigger word "get(": 
	post = Post.query.get(id)
Reassigned in: 
	File: WebAppWithFlask/controller.py
	 > Line 62: post_delete = post.delete(post)
	File: WebAppWithFlask/controller.py
	 > Line 66: error = post_delete
File: WebAppWithFlask/controller.py
 > reaches line 67, trigger word "flash(": 
	flash(error)



yaoelvon/flask-uwsgi-demo
https://github.com/yaoelvon/flask-uwsgi-demo
Entry file: flask-uwsgi-demo/DeployingFlask/myflaskapp.py
Scanned: 2016-10-25 23:02:40.469692
No vulnerabilities found.


Owen-Gillespie/FeatureLabsFlaskDemo
https://github.com/Owen-Gillespie/FeatureLabsFlaskDemo
Entry file: FeatureLabsFlaskDemo/main.py
Scanned: 2016-10-25 23:02:46.873536
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

richardsop/REST-API
https://github.com/richardsop/REST-API
Entry file: REST-API/app.py
Scanned: 2016-10-25 23:02:58.559083
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tianxie/my_flasky
https://github.com/tianxie/my_flasky
Entry file: my_flasky/app/__init__.py
Scanned: 2016-10-25 23:03:00.240089
No vulnerabilities found.


sheldonsmickley/flaskemail_app
https://github.com/sheldonsmickley/flaskemail_app
Entry file: flaskemail_app/emails.py
Scanned: 2016-10-25 23:03:01.702086
Vulnerability 1:
File: flaskemail_app/emails.py
 > User input at line 57, trigger word "form[": 
	url = c.execute('select url from emails where company_name like ?', (request.form['existing_company']))
Reassigned in: 
	File: flaskemail_app/emails.py
	 > Line 58: url = url.fetchall()[0][0]
File: flaskemail_app/emails.py
 > reaches line 57, trigger word "execute(": 
	url = c.execute('select url from emails where company_name like ?', (request.form['existing_company']))

Vulnerability 2:
File: flaskemail_app/emails.py
 > User input at line 57, trigger word "form[": 
	url = c.execute('select url from emails where company_name like ?', (request.form['existing_company']))
Reassigned in: 
	File: flaskemail_app/emails.py
	 > Line 58: url = url.fetchall()[0][0]
File: flaskemail_app/emails.py
 > reaches line 59, trigger word "execute(": 
	c.execute('INSERT into emails (company_name, email, url) values (?, ?, ?)', (request.form['existing_company'], request.form['email'], url))



shas15/Betting-Chips
https://github.com/shas15/Betting-Chips
Entry file: Betting-Chips/test.py
Scanned: 2016-10-25 23:03:03.246985
Vulnerability 1:
File: Betting-Chips/Models/User.py
 > User input at line 20, trigger word "form[": 
	login_id = request.form['id']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats''''''fail')
File: Betting-Chips/Models/User.py
 > reaches line 22, trigger word "filter(": 
	found = User.query.filter(User.id == login_id, User.password == login_password).first()

Vulnerability 2:
File: Betting-Chips/Models/User.py
 > User input at line 21, trigger word "form[": 
	login_password = request.form['password']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats''''''fail')
File: Betting-Chips/Models/User.py
 > reaches line 22, trigger word "filter(": 
	found = User.query.filter(User.id == login_id, User.password == login_password).first()

Vulnerability 3:
File: Betting-Chips/Models/User.py
 > User input at line 20, trigger word "form[": 
	login_id = request.form['id']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats''''''fail')
File: Betting-Chips/Models/User.py
 > reaches line 27, trigger word "jsonify(": 
	print(jsonify('id''password''stats'login_idlogin_password'success').get_data(as_text=True))

Vulnerability 4:
File: Betting-Chips/Models/User.py
 > User input at line 21, trigger word "form[": 
	login_password = request.form['password']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats''''''fail')
File: Betting-Chips/Models/User.py
 > reaches line 27, trigger word "jsonify(": 
	print(jsonify('id''password''stats'login_idlogin_password'success').get_data(as_text=True))

Vulnerability 5:
File: Betting-Chips/Models/User.py
 > User input at line 20, trigger word "form[": 
	login_id = request.form['id']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats''''''fail')
File: Betting-Chips/Models/User.py
 > reaches line 32, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats'login_idlogin_password'success')

Vulnerability 6:
File: Betting-Chips/Models/User.py
 > User input at line 21, trigger word "form[": 
	login_password = request.form['password']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats''''''fail')
File: Betting-Chips/Models/User.py
 > reaches line 32, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('id''password''stats'login_idlogin_password'success')

Vulnerability 7:
File: Betting-Chips/Models/User.py
 > User input at line 45, trigger word "form[": 
	signup_name = request.form['name']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 49: user.name = signup_name
File: Betting-Chips/Models/User.py
 > reaches line 54, trigger word "jsonify(": 
	print(jsonify('name''id''password''stats'signup_namesignup_idsignup_password'success').get_data(as_text=True))

Vulnerability 8:
File: Betting-Chips/Models/User.py
 > User input at line 46, trigger word "form[": 
	signup_id = request.form['id']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 50: user.id = signup_id
File: Betting-Chips/Models/User.py
 > reaches line 54, trigger word "jsonify(": 
	print(jsonify('name''id''password''stats'signup_namesignup_idsignup_password'success').get_data(as_text=True))

Vulnerability 9:
File: Betting-Chips/Models/User.py
 > User input at line 47, trigger word "form[": 
	signup_password = request.form['password']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 51: user.password = signup_password
File: Betting-Chips/Models/User.py
 > reaches line 54, trigger word "jsonify(": 
	print(jsonify('name''id''password''stats'signup_namesignup_idsignup_password'success').get_data(as_text=True))

Vulnerability 10:
File: Betting-Chips/Models/User.py
 > User input at line 45, trigger word "form[": 
	signup_name = request.form['name']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 49: user.name = signup_name
File: Betting-Chips/Models/User.py
 > reaches line 60, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('name''id''password''stats'signup_namesignup_idsignup_password'success')

Vulnerability 11:
File: Betting-Chips/Models/User.py
 > User input at line 46, trigger word "form[": 
	signup_id = request.form['id']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 50: user.id = signup_id
File: Betting-Chips/Models/User.py
 > reaches line 60, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('name''id''password''stats'signup_namesignup_idsignup_password'success')

Vulnerability 12:
File: Betting-Chips/Models/User.py
 > User input at line 47, trigger word "form[": 
	signup_password = request.form['password']
Reassigned in: 
	File: Betting-Chips/Models/User.py
	 > Line 51: user.password = signup_password
File: Betting-Chips/Models/User.py
 > reaches line 60, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('name''id''password''stats'signup_namesignup_idsignup_password'success')



malong5219/SampleBlog
https://github.com/malong5219/SampleBlog
Entry file: None
Scanned: 2016-10-25 23:03:10.675843
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

alexwilkerson/microblog
https://github.com/alexwilkerson/microblog
Entry file: None
Scanned: 2016-10-25 23:03:11.192066
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/alexwilkerson/microblog.

jyang22/Flasky_blog
https://github.com/jyang22/Flasky_blog
Entry file: None
Scanned: 2016-10-25 23:03:16.844809
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tusharpawar/Agrostar_Flaskr
https://github.com/tusharpawar/Agrostar_Flaskr
Entry file: Agrostar_Flaskr/flaskr/flaskr.py
Scanned: 2016-10-25 23:03:21.529501
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

eunseo9808/fakeArtist
https://github.com/eunseo9808/fakeArtist
Entry file: fakeArtist/test.py
Scanned: 2016-10-25 23:03:23.000337
No vulnerabilities found.


semonalbertyeah/quickflask
https://github.com/semonalbertyeah/quickflask
Entry file: quickflask/app.py
Scanned: 2016-10-25 23:03:24.439249
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

aceokay/microblog
https://github.com/aceokay/microblog
Entry file: None
Scanned: 2016-10-25 23:03:25.028119
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/aceokay/microblog.

dantin/microblog
https://github.com/dantin/microblog
Entry file: None
Scanned: 2016-10-25 23:03:25.549576
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dantin/microblog.

buntyke/Flask
https://github.com/buntyke/Flask
Entry file: None
Scanned: 2016-10-25 23:03:28.370288
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

suzf/Flask
https://github.com/suzf/Flask
Entry file: None
Scanned: 2016-10-25 23:03:28.926303
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

b-e/flask
https://github.com/b-e/flask
Entry file: None
Scanned: 2016-10-25 23:03:29.443727
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

psuong/FlaskWorkshop
https://github.com/psuong/FlaskWorkshop
Entry file: FlaskWorkshop/output-string/app.py
Scanned: 2016-10-25 23:03:31.215853
No vulnerabilities found.


BLKStone/flask_image_search
https://github.com/BLKStone/flask_image_search
Entry file: flask_image_search/app/app.py
Scanned: 2016-10-25 23:03:36.345721
No vulnerabilities found.


yj0914/flask-
https://github.com/yj0914/flask-
Entry file: flask-/num1.py
Scanned: 2016-10-25 23:03:37.641919
No vulnerabilities found.


Bleezworld/flask_skeleton
https://github.com/Bleezworld/flask_skeleton
Entry file: flask_skeleton/serveur/__init__.py
Scanned: 2016-10-25 23:03:40.040904
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

TwilioDevEd/lead-alerts-flask
https://github.com/TwilioDevEd/lead-alerts-flask
Entry file: None
Scanned: 2016-10-25 23:03:40.545336
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/TwilioDevEd/lead-alerts-flask.

soasme/flask-perm
https://github.com/soasme/flask-perm
Entry file: flask-perm/example.py
Scanned: 2016-10-25 23:03:43.023343
Vulnerability 1:
File: flask-perm/tests/test_blueprint.py
 > User input at line 68, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'))
File: flask-perm/tests/test_blueprint.py
 > reaches line 68, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'))

Vulnerability 2:
File: flask-perm/tests/test_blueprint.py
 > User input at line 73, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": 0}')
File: flask-perm/tests/test_blueprint.py
 > reaches line 73, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": 0}')

Vulnerability 3:
File: flask-perm/tests/test_blueprint.py
 > User input at line 80, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": %s}' % permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 80, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permissions'),query_string='_filters''{"id": %s}' % permission['id'])

Vulnerability 4:
File: flask-perm/tests/test_blueprint.py
 > User input at line 87, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))
File: flask-perm/tests/test_blueprint.py
 > reaches line 87, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))

Vulnerability 5:
File: flask-perm/tests/test_blueprint.py
 > User input at line 121, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))
File: flask-perm/tests/test_blueprint.py
 > reaches line 114, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.delete_permission',permission_id=permission['id']))

Vulnerability 6:
File: flask-perm/tests/test_blueprint.py
 > User input at line 121, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))
File: flask-perm/tests/test_blueprint.py
 > reaches line 121, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_permission',permission_id=permission['id']))

Vulnerability 7:
File: flask-perm/tests/test_blueprint.py
 > User input at line 172, trigger word ".data": 
	id = json.loads(resp.data)['data']['id']
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 171: resp = add_user_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 173, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.revoke_user_permission',user_permission_id=id))

Vulnerability 8:
File: flask-perm/tests/test_blueprint.py
 > User input at line 188, trigger word ".data": 
	id = json.loads(resp.data)['data']['id']
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 187: resp = add_user_group_permission(client, user_group['id'], permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 189, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.revoke_user_group_permission',user_group_permission_id=id))

Vulnerability 9:
File: flask-perm/tests/test_blueprint.py
 > User input at line 199, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"user_id":1}')
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 198: resp = add_user_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 199, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"user_id":1}')

Vulnerability 10:
File: flask-perm/tests/test_blueprint.py
 > User input at line 210, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 209: resp = add_user_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 210, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])

Vulnerability 11:
File: flask-perm/tests/test_blueprint.py
 > User input at line 221, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"user_group_id":1}')
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 220: resp = add_user_group_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 221, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"user_group_id":1}')

Vulnerability 12:
File: flask-perm/tests/test_blueprint.py
 > User input at line 232, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 231: resp = add_user_group_permission(client, 1, permission['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 232, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_permissions'),query_string='_filters''{"permission_id":%s}' % permission['id'])

Vulnerability 13:
File: flask-perm/tests/test_blueprint.py
 > User input at line 245, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_groups'))
File: flask-perm/tests/test_blueprint.py
 > reaches line 245, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_groups'))

Vulnerability 14:
File: flask-perm/tests/test_blueprint.py
 > User input at line 280, trigger word ".data": 
	id = json.loads(resp.data)['data']['id']
Reassigned in: 
	File: flask-perm/tests/test_blueprint.py
	 > Line 279: resp = add_user_group_member(client, 1, user_group['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 281, trigger word "url_for(": 
	resp = client.delete(url_for('flask_perm_api.delete_user_from_user_group',user_group_member_id=id))

Vulnerability 15:
File: flask-perm/tests/test_blueprint.py
 > User input at line 291, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_members'),query_string='_filters''{"user_group_id":%s}' % user_group['id'])
File: flask-perm/tests/test_blueprint.py
 > reaches line 291, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user_group_members'),query_string='_filters''{"user_group_id":%s}' % user_group['id'])

Vulnerability 16:
File: flask-perm/tests/test_blueprint.py
 > User input at line 304, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_users'))
File: flask-perm/tests/test_blueprint.py
 > reaches line 304, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_users'))

Vulnerability 17:
File: flask-perm/tests/test_blueprint.py
 > User input at line 309, trigger word "get(": 
	resp = client.get(url_for('flask_perm_api.get_user',user_id=1))
File: flask-perm/tests/test_blueprint.py
 > reaches line 309, trigger word "url_for(": 
	resp = client.get(url_for('flask_perm_api.get_user',user_id=1))

Vulnerability 18:
File: flask-perm/flask_perm/admin.py
 > User input at line 12, trigger word "get(": 
	render_data = 'base_api_url''base_web_url''debug'current_app.config.get('PERM_ADMIN_PREFIX') + '/api'current_app.config.get('PERM_ADMIN_PREFIX')current_app.config.get('DEBUG')
Reassigned in: 
	File: flask-perm/flask_perm/admin.py
	 > Line 10: ret_MAYBE_FUNCTION_NAME = redirect(url_for('perm-admin.login'))
File: flask-perm/flask_perm/admin.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('/perm-admin/index.html',render_data)



expersso/flaskr
https://github.com/expersso/flaskr
Entry file: None
Scanned: 2016-10-25 23:03:43.554238
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/expersso/flaskr.

gileez/flasker
https://github.com/gileez/flasker
Entry file: flasker/flasker/__init__.py
Scanned: 2016-10-25 23:03:44.964723
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

rishipuri/flasktodo
https://github.com/rishipuri/flasktodo
Entry file: flasktodo/flasktodo.py
Scanned: 2016-10-25 23:03:46.264306
No vulnerabilities found.


Hyvjan/flasktaskr
https://github.com/Hyvjan/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:03:46.819487
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zachary-russell/Flaskr
https://github.com/zachary-russell/Flaskr
Entry file: None
Scanned: 2016-10-25 23:03:47.340741
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

storress/Flaskserver
https://github.com/storress/Flaskserver
Entry file: Flaskserver/main.py
Scanned: 2016-10-25 23:03:48.639781
No vulnerabilities found.


dadasoz-cuelogic/flaskapp
https://github.com/dadasoz-cuelogic/flaskapp
Entry file: None
Scanned: 2016-10-25 23:03:59.185926
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dadasoz-cuelogic/flaskapp.

nickaustinlee/flasktaskr
https://github.com/nickaustinlee/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:04:01.758036
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sindhus/flaskr
https://github.com/sindhus/flaskr
Entry file: None
Scanned: 2016-10-25 23:04:02.355909
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sindhus/flaskr.

Bayaz/flasktaskr
https://github.com/Bayaz/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:04:03.917017
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

xavinso/flasktaskr
https://github.com/xavinso/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:04:11.477618
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

CharlieWinters/flaskapi
https://github.com/CharlieWinters/flaskapi
Entry file: flaskapi/aydaapi4.py
Scanned: 2016-10-25 23:04:17.368201
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskapi/flaskenv/lib/python2.7/sre_compile.py

kewsie/flasky
https://github.com/kewsie/flasky
Entry file: None
Scanned: 2016-10-25 23:04:18.233695
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

apeete/flaskBlog
https://github.com/apeete/flaskBlog
Entry file: flaskBlog/blog.py
Scanned: 2016-10-25 23:04:25.640459
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskBlog/env/lib/python2.7/sre_compile.py

land-pack/flaskBlog
https://github.com/land-pack/flaskBlog
Entry file: flaskBlog/flaskr.py
Scanned: 2016-10-25 23:04:27.119495
No vulnerabilities found.


OscarMelin/learning-flask-bootstrap
https://github.com/OscarMelin/learning-flask-bootstrap
Entry file: learning-flask-bootstrap/__init__.py
Scanned: 2016-10-25 23:04:32.686418
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: learning-flask-bootstrap/venv/lib/python2.7/sre_compile.py

hnb2/flask-customers
https://github.com/hnb2/flask-customers
Entry file: flask-customers/customers/__init__.py
Scanned: 2016-10-25 23:04:34.178433
Vulnerability 1:
File: flask-customers/customers/back/view.py
 > User input at line 71, trigger word ".data": 
	customer = Customer(email=form.email.data, password=AdminCustomer._generate_password())
Reassigned in: 
	File: flask-customers/customers/back/view.py
	 > Line 69: ret_MAYBE_FUNCTION_NAME = jsonify(errors=form.errors)
File: flask-customers/customers/back/view.py
 > reaches line 82, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(customer=customer.json)

Vulnerability 2:
File: flask-customers/customers/back/view.py
 > User input at line 147, trigger word ".data": 
	page = form.page.data
Reassigned in: 
	File: flask-customers/customers/back/view.py
	 > Line 151: start = page * CustomerService.RESULTS_PER_PAGE
	File: flask-customers/customers/back/view.py
	 > Line 152: stop = start + CustomerService.RESULTS_PER_PAGE
	File: flask-customers/customers/back/view.py
	 > Line 154: raw_customers = CustomerService.get_customers(start=start, stop=stop)
	File: flask-customers/customers/back/view.py
	 > Line 145: ret_MAYBE_FUNCTION_NAME = jsonify(errors=form.errors)
File: flask-customers/customers/back/view.py
 > reaches line 159, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(current_page=page, total_pages=int(total_pages), customers=[customer.json for customer in raw_customers])

Vulnerability 3:
File: flask-customers/customers/front/view.py
 > User input at line 32, trigger word ".data": 
	customer = Customer(email=form.email.data, password=form.password.data)
Reassigned in: 
	File: flask-customers/customers/front/view.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = jsonify(errors=form.errors)
File: flask-customers/customers/front/view.py
 > reaches line 39, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(id=customer.id)



raindrop4steven/tornadoFlask
https://github.com/raindrop4steven/tornadoFlask
Entry file: tornadoFlask/hello.py
Scanned: 2016-10-25 23:04:35.575394
No vulnerabilities found.


samwuu/flask_demo
https://github.com/samwuu/flask_demo
Entry file: flask_demo/app/__init__.py
Scanned: 2016-10-25 23:04:37.030368
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zengyifa/flask-starter
https://github.com/zengyifa/flask-starter
Entry file: None
Scanned: 2016-10-25 23:04:37.570546
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zengyifa/flask-starter.

mauriciorey/learning_flask
https://github.com/mauriciorey/learning_flask
Entry file: learning_flask/routes.py
Scanned: 2016-10-25 23:04:39.463185
Vulnerability 1:
File: learning_flask/routes.py
 > User input at line 85, trigger word ".data": 
	address = form.address.data
Reassigned in: 
	File: learning_flask/routes.py
	 > Line 89: my_coordinates = p.address_to_latlng(address)
	File: learning_flask/routes.py
	 > Line 90: places = p.query(address)
	File: learning_flask/routes.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: learning_flask/routes.py
	 > Line 77: places = []
	File: learning_flask/routes.py
	 > Line 78: my_coordinates = (42.335647, -71.07505600000002)
	File: learning_flask/routes.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form)
File: learning_flask/routes.py
 > reaches line 93, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form, my_coordinates=my_coordinates, places=places)

Vulnerability 2:
File: learning_flask/routes.py
 > User input at line 85, trigger word ".data": 
	address = form.address.data
Reassigned in: 
	File: learning_flask/routes.py
	 > Line 89: my_coordinates = p.address_to_latlng(address)
	File: learning_flask/routes.py
	 > Line 90: places = p.query(address)
	File: learning_flask/routes.py
	 > Line 73: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: learning_flask/routes.py
	 > Line 77: places = []
	File: learning_flask/routes.py
	 > Line 78: my_coordinates = (42.335647, -71.07505600000002)
	File: learning_flask/routes.py
	 > Line 82: ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form)
File: learning_flask/routes.py
 > reaches line 96, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('home.html',form=form, my_coordinates=my_coordinates, places=places)



cjmochrie/Flask-Demo
https://github.com/cjmochrie/Flask-Demo
Entry file: None
Scanned: 2016-10-25 23:04:40.867274
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/cjmochrie/Flask-Demo.

cyan-blue/my_flask
https://github.com/cyan-blue/my_flask
Entry file: my_flask/doc/schedular.py
Scanned: 2016-10-25 23:04:42.319689
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zachary-russell/Flask-Microblog
https://github.com/zachary-russell/Flask-Microblog
Entry file: Flask-Microblog/microblog/app/__init__.py
Scanned: 2016-10-25 23:04:43.633954
No vulnerabilities found.


LeonNie52/Learn_Flask
https://github.com/LeonNie52/Learn_Flask
Entry file: Learn_Flask/hello.py
Scanned: 2016-10-25 23:04:45.507986
Vulnerability 1:
File: Learn_Flask/app/main/views.py
 > User input at line 42, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Learn_Flask/app/main/views.py
	 > Line 50: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Learn_Flask/app/main/views.py
	 > Line 52: posts = pagination.items
	File: Learn_Flask/app/main/views.py
	 > Line 41: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.blog'))
File: Learn_Flask/app/main/views.py
 > reaches line 53, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: Learn_Flask/app/main/views.py
 > User input at line 45, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: Learn_Flask/app/main/views.py
	 > Line 43: show_followed = False
	File: Learn_Flask/app/main/views.py
	 > Line 41: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.blog'))
File: Learn_Flask/app/main/views.py
 > reaches line 53, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: Learn_Flask/app/main/views.py
 > User input at line 68, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Learn_Flask/app/main/views.py
	 > Line 70: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: Learn_Flask/app/main/views.py
	 > Line 72: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Learn_Flask/app/main/views.py
	 > Line 75: comments = pagination.items
	File: Learn_Flask/app/main/views.py
	 > Line 67: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: Learn_Flask/app/main/views.py
 > reaches line 76, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 4:
File: Learn_Flask/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Learn_Flask/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Learn_Flask/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: Learn_Flask/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Learn_Flask/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 5:
File: Learn_Flask/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Learn_Flask/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Learn_Flask/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: Learn_Flask/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Learn_Flask/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 6:
File: Learn_Flask/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Learn_Flask/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Learn_Flask/app/main/views.py
	 > Line 246: comments = pagination.items
File: Learn_Flask/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



penguin-penpen/learnFlask
https://github.com/penguin-penpen/learnFlask
Entry file: None
Scanned: 2016-10-25 23:04:46.042869
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/penguin-penpen/learnFlask.

pfig/flask-elasticsearch
https://github.com/pfig/flask-elasticsearch
Entry file: flask-elasticsearch/flask_elasticsearch.py
Scanned: 2016-10-25 23:04:47.473030
No vulnerabilities found.


olive42/moz-flask
https://github.com/olive42/moz-flask
Entry file: moz-flask/hello.py
Scanned: 2016-10-25 23:04:48.813971
No vulnerabilities found.


nimeshkverma/Ideal_Flask
https://github.com/nimeshkverma/Ideal_Flask
Entry file: Ideal_Flask/LargeApp/app/__init__.py
Scanned: 2016-10-25 23:04:52.506860
Vulnerability 1:
File: Ideal_Flask/LargeApp/app/mod_auth/controllers.py
 > User input at line 31, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Ideal_Flask/LargeApp/app/mod_auth/controllers.py
	 > Line 35: session['user_id'] = user.id
File: Ideal_Flask/LargeApp/app/mod_auth/controllers.py
 > reaches line 37, trigger word "flash(": 
	flash('Welcome %s' % user.name)



tholsapp/flask_framework
https://github.com/tholsapp/flask_framework
Entry file: flask_framework/app/__init__.py
Scanned: 2016-10-25 23:04:54.027785
No vulnerabilities found.


nivanko/flask-catalog
https://github.com/nivanko/flask-catalog
Entry file: flask-catalog/application.py
Scanned: 2016-10-25 23:05:02.390874
Vulnerability 1:
File: flask-catalog/application.py
 > User input at line 184, trigger word "form[": 
	category = db_session.query(Category).filter_by(id=request.form['category_id']).one()
Reassigned in: 
	File: flask-catalog/application.py
	 > Line 160: category = db_session.query(Category).filter_by(name=category_name).one()
	File: flask-catalog/application.py
	 > Line 147: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: flask-catalog/application.py
	 > Line 151: ret_MAYBE_FUNCTION_NAME = '<script>
                    function myFunction() {
                        alert('You are not authorized to edit this item.');
                        window.location.replace('%s');
                    }
                </script>
                <body onload='myFunction()''>' % url_for('list_categories')
File: flask-catalog/application.py
 > reaches line 162, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('edit.html',categories=categories, category_id=category.id, item=item, login=login_session.get('username'))

Vulnerability 2:
File: flask-catalog/application.py
 > User input at line 184, trigger word "form[": 
	category = db_session.query(Category).filter_by(id=request.form['category_id']).one()
Reassigned in: 
	File: flask-catalog/application.py
	 > Line 160: category = db_session.query(Category).filter_by(name=category_name).one()
	File: flask-catalog/application.py
	 > Line 147: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: flask-catalog/application.py
	 > Line 151: ret_MAYBE_FUNCTION_NAME = '<script>
                    function myFunction() {
                        alert('You are not authorized to edit this item.');
                        window.location.replace('%s');
                    }
                </script>
                <body onload='myFunction()''>' % url_for('list_categories')
File: flask-catalog/application.py
 > reaches line 186, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_items',category_name=category.name))

Vulnerability 3:
File: flask-catalog/application.py
 > User input at line 184, trigger word "form[": 
	category = db_session.query(Category).filter_by(id=request.form['category_id']).one()
Reassigned in: 
	File: flask-catalog/application.py
	 > Line 160: category = db_session.query(Category).filter_by(name=category_name).one()
	File: flask-catalog/application.py
	 > Line 147: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: flask-catalog/application.py
	 > Line 151: ret_MAYBE_FUNCTION_NAME = '<script>
                    function myFunction() {
                        alert('You are not authorized to edit this item.');
                        window.location.replace('%s');
                    }
                </script>
                <body onload='myFunction()''>' % url_for('list_categories')
File: flask-catalog/application.py
 > reaches line 186, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_items',category_name=category.name))



jaramago/flask-basic
https://github.com/jaramago/flask-basic
Entry file: flask-basic/app/__init__.py
Scanned: 2016-10-25 23:05:04.125866
No vulnerabilities found.


valdemarpereira/flask_tutorial
https://github.com/valdemarpereira/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:05:04.678998
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/valdemarpereira/flask_tutorial.

jit-1/flask-microblog
https://github.com/jit-1/flask-microblog
Entry file: None
Scanned: 2016-10-25 23:05:06.178663
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jit-1/flask-microblog.

nof4444/Flask-mongodb
https://github.com/nof4444/Flask-mongodb
Entry file: Flask-mongodb/blog.py
Scanned: 2016-10-25 23:05:12.457496
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask-mongodb/env/lib/python2.7/sre_compile.py

VictorDMor/flask-app
https://github.com/VictorDMor/flask-app
Entry file: flask-app/app/__init__.py
Scanned: 2016-10-25 23:05:24.076947
No vulnerabilities found.


setiaji/learn_flask
https://github.com/setiaji/learn_flask
Entry file: learn_flask/__init__.py
Scanned: 2016-10-25 23:05:25.383179
No vulnerabilities found.


sunway1988/MyFlask
https://github.com/sunway1988/MyFlask
Entry file: MyFlask/app/__init__.py
Scanned: 2016-10-25 23:05:27.244613
No vulnerabilities found.


ottoman91/flask_tutorial
https://github.com/ottoman91/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:05:27.802174
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ottoman91/flask_tutorial.

anbasile/flask_sample
https://github.com/anbasile/flask_sample
Entry file: flask_sample/app.py
Scanned: 2016-10-25 23:05:36.619681
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_sample/flask/lib/python2.7/sre_compile.py

HiagoMayk/projetoFlask
https://github.com/HiagoMayk/projetoFlask
Entry file: projetoFlask/routes.py
Scanned: 2016-10-25 23:05:39.226051
No vulnerabilities found.


nimeshkverma/Versioned_Flask
https://github.com/nimeshkverma/Versioned_Flask
Entry file: Versioned_Flask/app/__init__.py
Scanned: 2016-10-25 23:05:41.249014
No vulnerabilities found.


catcoderphp/flask-test
https://github.com/catcoderphp/flask-test
Entry file: flask-test/app.py
Scanned: 2016-10-25 23:05:44.390026
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-test/venv/lib/python2.7/sre_compile.py

huyquyet/flask-demo
https://github.com/huyquyet/flask-demo
Entry file: flask-demo/flask_demo/__init__.py
Scanned: 2016-10-25 23:05:46.619401
No vulnerabilities found.


seonhyeshin/flask-mysql
https://github.com/seonhyeshin/flask-mysql
Entry file: None
Scanned: 2016-10-25 23:05:57.720936
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

euler1337/flask_tutorial
https://github.com/euler1337/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:05:58.234416
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/euler1337/flask_tutorial.

PhilipGough/flask_api
https://github.com/PhilipGough/flask_api
Entry file: flask_api/app/__init__.py
Scanned: 2016-10-25 23:06:02.041726
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lauradebella/treinamentoFlask
https://github.com/lauradebella/treinamentoFlask
Entry file: treinamentoFlask/tutorialPythonClub/app.py
Scanned: 2016-10-25 23:06:19.121166
No vulnerabilities found.


seanbehan/flask_websockets
https://github.com/seanbehan/flask_websockets
Entry file: flask_websockets/app.py
Scanned: 2016-10-25 23:06:21.041760
No vulnerabilities found.


mburke05/flask_tutorial
https://github.com/mburke05/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:06:21.570398
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mburke05/flask_tutorial.

dhruvagarwal/flask_restdemo
https://github.com/dhruvagarwal/flask_restdemo
Entry file: flask_restdemo/example/main.py
Scanned: 2016-10-25 23:06:22.956976
No vulnerabilities found.


elphinkuo/ji_python_flask
https://github.com/elphinkuo/ji_python_flask
Entry file: ji_python_flask/app/musicModify.py
Scanned: 2016-10-25 23:06:24.886857
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

rjuppa/microblog
https://github.com/rjuppa/microblog
Entry file: None
Scanned: 2016-10-25 23:06:25.416125
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rjuppa/microblog.

depaoli/FlaskAppSample
https://github.com/depaoli/FlaskAppSample
Entry file: FlaskAppSample/flask_app_sample/__init__.py
Scanned: 2016-10-25 23:06:26.803815
No vulnerabilities found.


webon100/ross_flask01
https://github.com/webon100/ross_flask01
Entry file: None
Scanned: 2016-10-25 23:06:30.740910
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

AlexProv/flaskRestApiSkeleton
https://github.com/AlexProv/flaskRestApiSkeleton
Entry file: flaskRestApiSkeleton/flaskServer.py
Scanned: 2016-10-25 23:06:32.032067
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tommyblue/flask-react-blog
https://github.com/tommyblue/flask-react-blog
Entry file: flask-react-blog/initializer.py
Scanned: 2016-10-25 23:06:33.750978
No vulnerabilities found.


MikeHannon/python_flask_teams
https://github.com/MikeHannon/python_flask_teams
Entry file: python_flask_teams/server.py
Scanned: 2016-10-25 23:06:35.052364
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Cosaquee/flask-weather-app
https://github.com/Cosaquee/flask-weather-app
Entry file: flask-weather-app/main.py
Scanned: 2016-10-25 23:06:38.808747
No vulnerabilities found.


xavinso/flask_hello_world
https://github.com/xavinso/flask_hello_world
Entry file: flask_hello_world/app.py
Scanned: 2016-10-25 23:06:41.434666
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Ryanglambert/playing_with_flask
https://github.com/Ryanglambert/playing_with_flask
Entry file: playing_with_flask/hello.py
Scanned: 2016-10-25 23:06:43.054984
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

aetherwu/Flask-Docker-Template
https://github.com/aetherwu/Flask-Docker-Template
Entry file: Flask-Docker-Template/flask/web/__init__.py
Scanned: 2016-10-25 23:06:53.195663
Vulnerability 1:
File: Flask-Docker-Template/flask/web/views.py
 > User input at line 234, trigger word ".data": 
	kw = form.name.data
File: Flask-Docker-Template/flask/web/views.py
 > reaches line 236, trigger word "filter(": 
	user = User.query.filter(User.nickname == kw).first()

Vulnerability 2:
File: Flask-Docker-Template/flask/web/views.py
 > User input at line 562, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Flask-Docker-Template/flask/web/views.py
	 > Line 550: user = User.query.filter_by(email=user_email).first()
	File: Flask-Docker-Template/flask/web/views.py
	 > Line 552: current_user.id = user.id
	File: Flask-Docker-Template/flask/web/views.py
	 > Line 577: current_user.id = user.id
File: Flask-Docker-Template/flask/web/views.py
 > reaches line 554, trigger word "set_cookie(": 
	response.set_cookie('user_email', str(user.email),expires=time.time() + 6000 * 60)

Vulnerability 3:
File: Flask-Docker-Template/flask/web/views.py
 > User input at line 562, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Flask-Docker-Template/flask/web/views.py
	 > Line 550: user = User.query.filter_by(email=user_email).first()
	File: Flask-Docker-Template/flask/web/views.py
	 > Line 552: current_user.id = user.id
	File: Flask-Docker-Template/flask/web/views.py
	 > Line 577: current_user.id = user.id
File: Flask-Docker-Template/flask/web/views.py
 > reaches line 587, trigger word "set_cookie(": 
	response.set_cookie('user_email', str(user.email),expires=time.time() + 6000 * 60)



tomquirk/js-flavoured-flask
https://github.com/tomquirk/js-flavoured-flask
Entry file: js-flavoured-flask/app/__init__.py
Scanned: 2016-10-25 23:06:54.860396
No vulnerabilities found.


gtlambert/first_flask_app
https://github.com/gtlambert/first_flask_app
Entry file: first_flask_app/app.py
Scanned: 2016-10-25 23:06:59.710937
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

AngelMunoz/Flask-Blueprints-Template
https://github.com/AngelMunoz/Flask-Blueprints-Template
Entry file: Flask-Blueprints-Template/app/__init__.py
Scanned: 2016-10-25 23:07:01.163686
Vulnerability 1:
File: Flask-Blueprints-Template/app/mod_auth/controllers.py
 > User input at line 15, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Flask-Blueprints-Template/app/mod_auth/controllers.py
	 > Line 17: session['user_id'] = user.id
File: Flask-Blueprints-Template/app/mod_auth/controllers.py
 > reaches line 18, trigger word "flash(": 
	flash('Welcome %s' % user.name)



ArTrics/Flask_Angular_Project
https://github.com/ArTrics/Flask_Angular_Project
Entry file: Flask_Angular_Project/index.py
Scanned: 2016-10-25 23:07:05.061438
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask_Angular_Project/venv/lib/python2.7/sre_compile.py

orjanv/ESVtoLeetFlaskApp
https://github.com/orjanv/ESVtoLeetFlaskApp
Entry file: ESVtoLeetFlaskApp/app.py
Scanned: 2016-10-25 23:07:06.568172
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ptmccarthy/flask-microblog-tutorial
https://github.com/ptmccarthy/flask-microblog-tutorial
Entry file: flask-microblog-tutorial/app/__init__.py
Scanned: 2016-10-25 23:07:08.020121
No vulnerabilities found.


bronka/flask-hello-world
https://github.com/bronka/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:07:08.556729
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Pensu/flask-ppc64le
https://github.com/Pensu/flask-ppc64le
Entry file: flask-ppc64le/app.py
Scanned: 2016-10-25 23:07:09.905782
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mdublin/Flask-CRUD-template
https://github.com/mdublin/Flask-CRUD-template
Entry file: Flask-CRUD-template/blog/__init__.py
Scanned: 2016-10-25 23:07:14.888270
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lwjones/flask-hello-world
https://github.com/lwjones/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:07:15.483036
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

renmmotp/Ren_Learns_Flask
https://github.com/renmmotp/Ren_Learns_Flask
Entry file: Ren_Learns_Flask/flaskr/flaskr.py
Scanned: 2016-10-25 23:07:16.909626
No vulnerabilities found.


leonidas/flask-spa-routing-example
https://github.com/leonidas/flask-spa-routing-example
Entry file: None
Scanned: 2016-10-25 23:07:18.212771
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/leonidas/flask-spa-routing-example.

zxqwerxz/test_flask_deploy
https://github.com/zxqwerxz/test_flask_deploy
Entry file: test_flask_deploy/hello.py
Scanned: 2016-10-25 23:07:19.521810
No vulnerabilities found.


mbreisch/flask-hello-world
https://github.com/mbreisch/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:07:20.064672
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sidthakur/docker-single-nginx-flask
https://github.com/sidthakur/docker-single-nginx-flask
Entry file: docker-single-nginx-flask/app/app.py
Scanned: 2016-10-25 23:07:21.366716
No vulnerabilities found.


posenberg/Flask-Kickstarter-Clone
https://github.com/posenberg/Flask-Kickstarter-Clone
Entry file: Flask-Kickstarter-Clone/punchstarter/__init__.py
Scanned: 2016-10-25 23:07:23.409787
Vulnerability 1:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 42, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 43: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 56: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 73, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 2:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 46, trigger word "files[": 
	cover_photo = request.files['cover_photo']
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 47: uploaded_image = cloudinary.uploader.upload(cover_photo,crop='limit', width=600, height=550)
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 53: image_filename = uploaded_image['public_id']
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 56: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 73, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 3:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 56, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 73, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 4:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 42, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 43: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 56: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 73, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 5:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 46, trigger word "files[": 
	cover_photo = request.files['cover_photo']
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 47: uploaded_image = cloudinary.uploader.upload(cover_photo,crop='limit', width=600, height=550)
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 53: image_filename = uploaded_image['public_id']
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 56: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 73, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 6:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 56, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 73, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 7:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 81, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 85, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('project_detail.html',project=project)

Vulnerability 8:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 89, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 102: new_pledge = Pledge(member_id=guest_creator.id, project_id=project.id, amount=request.form.get('amount'), time_created=datetime.datetime.now())
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 94, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('pledge.html',project=project)

Vulnerability 9:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 89, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 102: new_pledge = Pledge(member_id=guest_creator.id, project_id=project.id, amount=request.form.get('amount'), time_created=datetime.datetime.now())
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 111, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 10:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 89, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 102: new_pledge = Pledge(member_id=guest_creator.id, project_id=project.id, amount=request.form.get('amount'), time_created=datetime.datetime.now())
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 111, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 11:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 115, trigger word "get(": 
	query = request.args.get('q') or ''
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 124: query_text = query != ''query'all projects'
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 116, trigger word "filter(": 
	projects = db.session.query(Project).filter(Project.name.ilike('%' + query + '%') | Project.short_description.ilike('%' + query + '%') | Project.long_description.ilike('%' + query + '%')).all()

Vulnerability 12:
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > User input at line 115, trigger word "get(": 
	query = request.args.get('q') or ''
Reassigned in: 
	File: Flask-Kickstarter-Clone/punchstarter/__init__.py
	 > Line 124: query_text = query != ''query'all projects'
File: Flask-Kickstarter-Clone/punchstarter/__init__.py
 > reaches line 126, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search.html',query_text=query_text, projects=projects, project_count=project_count)



pythonvietnam/meetup01-flask
https://github.com/pythonvietnam/meetup01-flask
Entry file: meetup01-flask/hello_world.py
Scanned: 2016-10-25 23:07:24.897470
Vulnerability 1:
File: meetup01-flask/template.py
 > User input at line 9, trigger word "get(": 
	name = request.args.get('name', 'guy')
File: meetup01-flask/template.py
 > reaches line 10, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',name=name)



palden/flask-hello-world
https://github.com/palden/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:07:25.435136
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

shane-kercheval/flask-postgresql-template
https://github.com/shane-kercheval/flask-postgresql-template
Entry file: flask-postgresql-template/app_factory.py
Scanned: 2016-10-25 23:07:27.622357
Vulnerability 1:
File: flask-postgresql-template/app.py
 > User input at line 49, trigger word "get(": 
	next = request.args.get('next')
Reassigned in: 
	File: flask-postgresql-template/app.py
	 > Line 54: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: flask-postgresql-template/app.py
 > reaches line 53, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('app_default'))

Vulnerability 2:
File: flask-postgresql-template/app.py
 > User input at line 49, trigger word "get(": 
	next = request.args.get('next')
Reassigned in: 
	File: flask-postgresql-template/app.py
	 > Line 54: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: flask-postgresql-template/app.py
 > reaches line 53, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('app_default'))



jhh/puka-server-flask
https://github.com/jhh/puka-server-flask
Entry file: None
Scanned: 2016-10-25 23:07:29.038235
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jhh/puka-server-flask.

zhujian0805/my-website-by-flask
https://github.com/zhujian0805/my-website-by-flask
Entry file: my-website-by-flask/flaskr/flaskr.py
Scanned: 2016-10-25 23:07:30.684906
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

charanjp/flask
https://github.com/charanjp/flask
Entry file: None
Scanned: 2016-10-25 23:07:32.705584
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yasskh/flask
https://github.com/yasskh/flask
Entry file: None
Scanned: 2016-10-25 23:07:33.236794
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

poxstone/flask
https://github.com/poxstone/flask
Entry file: None
Scanned: 2016-10-25 23:07:34.742436
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

FlaskTutorial/Flask
https://github.com/FlaskTutorial/Flask
Entry file: None
Scanned: 2016-10-25 23:07:36.283830
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

OnlySHI/flask
https://github.com/OnlySHI/flask
Entry file: None
Scanned: 2016-10-25 23:07:39.814014
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jvuori/flask-uwsgi-nginx-haproxy-docker
https://github.com/jvuori/flask-uwsgi-nginx-haproxy-docker
Entry file: flask-uwsgi-nginx-haproxy-docker/web/app.py
Scanned: 2016-10-25 23:07:43.131840
No vulnerabilities found.


akupara/flask_inspector
https://github.com/akupara/flask_inspector
Entry file: flask_inspector/example/app.py
Scanned: 2016-10-25 23:07:44.874124
No vulnerabilities found.


soasme/flask-personal-access-token
https://github.com/soasme/flask-personal-access-token
Entry file: flask-personal-access-token/example.py
Scanned: 2016-10-25 23:07:56.027994
Vulnerability 1:
File: flask-personal-access-token/flask_personal_access_token/admin.py
 > User input at line 18, trigger word "get(": 
	render_data = 'base_api_url''base_web_url''debug'current_app.config.get('PERSONAL_ACCESS_TOKEN_ADMIN_API_PREFIX')current_app.config.get('PERSONAL_ACCESS_TOKEN_ADMIN_PREFIX')current_app.config.get('DEBUG')
File: flask-personal-access-token/flask_personal_access_token/admin.py
 > reaches line 23, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('/personal_access_token/index.html',render_data)



gileez/flasker
https://github.com/gileez/flasker
Entry file: flasker/flasker/__init__.py
Scanned: 2016-10-25 23:07:57.411753
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

shinycoo/flaskmvcsample
https://github.com/shinycoo/flaskmvcsample
Entry file: flaskmvcsample/app.py
Scanned: 2016-10-25 23:08:01.953027
No vulnerabilities found.


alexwilkerson/flasktaskr
https://github.com/alexwilkerson/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:08:02.538788
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sindhus/flaskr
https://github.com/sindhus/flaskr
Entry file: None
Scanned: 2016-10-25 23:08:06.053736
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sindhus/flaskr.

apeete/flasktaskr
https://github.com/apeete/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:08:07.599551
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

slippers/flasksec
https://github.com/slippers/flasksec
Entry file: flasksec/main/__init__.py
Scanned: 2016-10-25 23:08:09.910689
No vulnerabilities found.


rui7157/Flask-NvRay-Blog
https://github.com/rui7157/Flask-NvRay-Blog
Entry file: Flask-NvRay-Blog/app/__init__.py
Scanned: 2016-10-25 23:08:14.345570
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Ineeza/FlaskAppBuilder
https://github.com/Ineeza/FlaskAppBuilder
Entry file: FlaskAppBuilder/src/classes/__init__.py
Scanned: 2016-10-25 23:08:15.807833
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

junniepat/FlaskApp
https://github.com/junniepat/FlaskApp
Entry file: FlaskApp/app.py
Scanned: 2016-10-25 23:08:17.076305
No vulnerabilities found.


YoungGer/FlaskApps
https://github.com/YoungGer/FlaskApps
Entry file: FlaskApps/helloWorld/hello.py
Scanned: 2016-10-25 23:08:18.664462
No vulnerabilities found.


yasskh/FlaskProject
https://github.com/yasskh/FlaskProject
Entry file: FlaskProject/views.py
Scanned: 2016-10-25 23:08:24.444066
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

DamithaPerera/FlaskApp
https://github.com/DamithaPerera/FlaskApp
Entry file: FlaskApp/app.py
Scanned: 2016-10-25 23:08:25.771465
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

dreammis/Flask02
https://github.com/dreammis/Flask02
Entry file: Flask02/app/__init__.py
Scanned: 2016-10-25 23:08:27.051136
No vulnerabilities found.


land-pack/flaskBlog
https://github.com/land-pack/flaskBlog
Entry file: flaskBlog/flaskr.py
Scanned: 2016-10-25 23:08:28.342252
No vulnerabilities found.


deyoppe/FlaskFire
https://github.com/deyoppe/FlaskFire
Entry file: FlaskFire/core/system/app.py
Scanned: 2016-10-25 23:08:29.829343
No vulnerabilities found.


Njsao/FlaskServer
https://github.com/Njsao/FlaskServer
Entry file: FlaskServer/untitled.py
Scanned: 2016-10-25 23:08:31.255944
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

OscarMelin/learning-flask-bootstrap
https://github.com/OscarMelin/learning-flask-bootstrap
Entry file: learning-flask-bootstrap/__init__.py
Scanned: 2016-10-25 23:08:35.718542
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: learning-flask-bootstrap/venv/lib/python2.7/sre_compile.py

allianRoman/flask-intro
https://github.com/allianRoman/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:08:37.067365
No vulnerabilities found.


hunt3ri/temp-flask
https://github.com/hunt3ri/temp-flask
Entry file: temp-flask/app/__init__.py
Scanned: 2016-10-25 23:08:38.492471
No vulnerabilities found.


noamoss/flask-blog
https://github.com/noamoss/flask-blog
Entry file: None
Scanned: 2016-10-25 23:08:39.018661
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Jiezhi/HelloFlask
https://github.com/Jiezhi/HelloFlask
Entry file: HelloFlask/my_app/__init__.py
Scanned: 2016-10-25 23:08:40.420018
Vulnerability 1:
File: HelloFlask/my_app/product/views.py
 > User input at line 16, trigger word "get(": 
	product = PRODUCTS.get(key)
File: HelloFlask/my_app/product/views.py
 > reaches line 19, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('product.html',product=product)



szhjia/flask-blog
https://github.com/szhjia/flask-blog
Entry file: None
Scanned: 2016-10-25 23:08:40.964187
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

amybethx/flask-intro
https://github.com/amybethx/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:08:42.283667
No vulnerabilities found.


terriwong/flask-intro
https://github.com/terriwong/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:08:43.593363
No vulnerabilities found.


arkenidar/flask-example
https://github.com/arkenidar/flask-example
Entry file: flask-example/server.py
Scanned: 2016-10-25 23:08:44.961630
Vulnerability 1:
File: flask-example/server.py
 > User input at line 8, trigger word "get(": 
	query = request.args.get('query', '')
Reassigned in: 
	File: flask-example/server.py
	 > Line 9: title = query == '''Search page''Search result for ' + query
	File: flask-example/server.py
	 > Line 17: items = query == ''items[item for item in items]
	File: flask-example/server.py
	 > Line 10: items = ['url''title''http://abc.com''abc', 'url''title''http://xyz.com''xyz', 'url''title''http://abcxyz.com''abcxyz', 'url''title''http://123.com''123', 'url''title''http://qwerty.com''qwerty']
File: flask-example/server.py
 > reaches line 19, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('form.html',title=title, query=query, items=items)



ztomazin/flask_exp
https://github.com/ztomazin/flask_exp
Entry file: flask_exp/app/__init__.py
Scanned: 2016-10-25 23:08:51.783682
No vulnerabilities found.


ltaziri/Flask-Intro
https://github.com/ltaziri/Flask-Intro
Entry file: Flask-Intro/nice.py
Scanned: 2016-10-25 23:08:53.249892
No vulnerabilities found.


alitsiya/flask-intro
https://github.com/alitsiya/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:08:54.597074
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

taisa007/timeliner-flask
https://github.com/taisa007/timeliner-flask
Entry file: timeliner-flask/timeliner/timeliner/__init__.py
Scanned: 2016-10-25 23:08:56.019066
No vulnerabilities found.


sandiego206/flask_microblog
https://github.com/sandiego206/flask_microblog
Entry file: flask_microblog/app/__init__.py
Scanned: 2016-10-25 23:08:57.690793
No vulnerabilities found.


Odava/flask-jwt
https://github.com/Odava/flask-jwt
Entry file: flask-jwt/tests/conftest.py
Scanned: 2016-10-25 23:08:59.344943
No vulnerabilities found.


nivanko/flask-catalog
https://github.com/nivanko/flask-catalog
Entry file: flask-catalog/application.py
Scanned: 2016-10-25 23:09:05.000957
Vulnerability 1:
File: flask-catalog/application.py
 > User input at line 184, trigger word "form[": 
	category = db_session.query(Category).filter_by(id=request.form['category_id']).one()
Reassigned in: 
	File: flask-catalog/application.py
	 > Line 160: category = db_session.query(Category).filter_by(name=category_name).one()
	File: flask-catalog/application.py
	 > Line 147: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: flask-catalog/application.py
	 > Line 151: ret_MAYBE_FUNCTION_NAME = '<script>
                    function myFunction() {
                        alert('You are not authorized to edit this item.');
                        window.location.replace('%s');
                    }
                </script>
                <body onload='myFunction()''>' % url_for('list_categories')
File: flask-catalog/application.py
 > reaches line 162, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('edit.html',categories=categories, category_id=category.id, item=item, login=login_session.get('username'))

Vulnerability 2:
File: flask-catalog/application.py
 > User input at line 184, trigger word "form[": 
	category = db_session.query(Category).filter_by(id=request.form['category_id']).one()
Reassigned in: 
	File: flask-catalog/application.py
	 > Line 160: category = db_session.query(Category).filter_by(name=category_name).one()
	File: flask-catalog/application.py
	 > Line 147: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: flask-catalog/application.py
	 > Line 151: ret_MAYBE_FUNCTION_NAME = '<script>
                    function myFunction() {
                        alert('You are not authorized to edit this item.');
                        window.location.replace('%s');
                    }
                </script>
                <body onload='myFunction()''>' % url_for('list_categories')
File: flask-catalog/application.py
 > reaches line 186, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_items',category_name=category.name))

Vulnerability 3:
File: flask-catalog/application.py
 > User input at line 184, trigger word "form[": 
	category = db_session.query(Category).filter_by(id=request.form['category_id']).one()
Reassigned in: 
	File: flask-catalog/application.py
	 > Line 160: category = db_session.query(Category).filter_by(name=category_name).one()
	File: flask-catalog/application.py
	 > Line 147: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
	File: flask-catalog/application.py
	 > Line 151: ret_MAYBE_FUNCTION_NAME = '<script>
                    function myFunction() {
                        alert('You are not authorized to edit this item.');
                        window.location.replace('%s');
                    }
                </script>
                <body onload='myFunction()''>' % url_for('list_categories')
File: flask-catalog/application.py
 > reaches line 186, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_items',category_name=category.name))



ajoshdee/flask-test
https://github.com/ajoshdee/flask-test
Entry file: flask-test/app.py
Scanned: 2016-10-25 23:09:21.100386
No vulnerabilities found.


palden/flask-blog
https://github.com/palden/flask-blog
Entry file: None
Scanned: 2016-10-25 23:09:21.629083
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

humaneu/flask_app
https://github.com/humaneu/flask_app
Entry file: None
Scanned: 2016-10-25 23:09:29.402979
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cclittle13/flask-intro
https://github.com/cclittle13/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:30.701528
No vulnerabilities found.


emlam/flask-intro
https://github.com/emlam/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:31.980637
No vulnerabilities found.


spyapali/Flask-intro
https://github.com/spyapali/Flask-intro
Entry file: Flask-intro/nice.py
Scanned: 2016-10-25 23:09:33.261153
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

celiawaggoner/flask-intro
https://github.com/celiawaggoner/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:34.552919
No vulnerabilities found.


cachar/flask-intro
https://github.com/cachar/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:35.823803
No vulnerabilities found.


KTAtkinson/flask-intro
https://github.com/KTAtkinson/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:37.109719
No vulnerabilities found.


pasysxa/flask-mall
https://github.com/pasysxa/flask-mall
Entry file: flask-mall/myapp/__init__.py
Scanned: 2016-10-25 23:09:38.388285
No vulnerabilities found.


fendouai/venv_flask
https://github.com/fendouai/venv_flask
Entry file: venv_flask/get.py
Scanned: 2016-10-25 23:09:41.851273
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: venv_flask/venv/lib/python2.7/sre_compile.py

leiyue/learning_flask
https://github.com/leiyue/learning_flask
Entry file: learning_flask/miniblog/miniblog.py
Scanned: 2016-10-25 23:09:43.191097
No vulnerabilities found.


florenceloi/flask-intro
https://github.com/florenceloi/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:44.482518
No vulnerabilities found.


DoriRunyon/flask-intro
https://github.com/DoriRunyon/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:45.776644
No vulnerabilities found.


qistchan/WebhookFlask
https://github.com/qistchan/WebhookFlask
Entry file: WebhookFlask/WebHook_Listener.py
Scanned: 2016-10-25 23:09:47.054154
No vulnerabilities found.


GeetikaBatra/Flask_intro
https://github.com/GeetikaBatra/Flask_intro
Entry file: None
Scanned: 2016-10-25 23:09:52.964524
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kooder18/flask_Ecommerce
https://github.com/kooder18/flask_Ecommerce
Entry file: flask_Ecommerce/project.py
Scanned: 2016-10-25 23:09:54.430191
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

alenakruchkova/flask-intro
https://github.com/alenakruchkova/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:55.696198
No vulnerabilities found.


bekkam/flask-intro
https://github.com/bekkam/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:56.970405
No vulnerabilities found.


anniehe/flask-intro
https://github.com/anniehe/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:58.245114
No vulnerabilities found.


Vianey81/flask-intro
https://github.com/Vianey81/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:09:59.522749
No vulnerabilities found.


mcbishop/flask-intro
https://github.com/mcbishop/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:10:00.816932
No vulnerabilities found.


Bandurin/Test-flask
https://github.com/Bandurin/Test-flask
Entry file: Test-flask/db_app.py
Scanned: 2016-10-25 23:10:03.936507
No vulnerabilities found.


0phelia/flask-app
https://github.com/0phelia/flask-app
Entry file: flask-app/flask_webserver.py
Scanned: 2016-10-25 23:10:05.299727
No vulnerabilities found.


lauradebella/treinamentoFlask
https://github.com/lauradebella/treinamentoFlask
Entry file: treinamentoFlask/tutorialPythonClub/app.py
Scanned: 2016-10-25 23:10:12.913813
No vulnerabilities found.


seanbehan/flask_websockets
https://github.com/seanbehan/flask_websockets
Entry file: flask_websockets/app.py
Scanned: 2016-10-25 23:10:14.254870
No vulnerabilities found.


ssam123/flask-tutorial
https://github.com/ssam123/flask-tutorial
Entry file: flask-tutorial/hello.py
Scanned: 2016-10-25 23:10:15.557254
No vulnerabilities found.


ziyoung/learningFlask
https://github.com/ziyoung/learningFlask
Entry file: learningFlask/hello.py
Scanned: 2016-10-25 23:10:21.053381
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: learningFlask/venv/lib/python2.7/sre_compile.py

karayount/flask-intro
https://github.com/karayount/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:10:23.386069
No vulnerabilities found.


go-bears/flask-intro
https://github.com/go-bears/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:10:24.689743
No vulnerabilities found.


mlpeters12/flask-intro
https://github.com/mlpeters12/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:10:31.123604
No vulnerabilities found.


arbonap/flask-intro
https://github.com/arbonap/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:10:32.412428
No vulnerabilities found.


nimeshkverma/SolrFlask
https://github.com/nimeshkverma/SolrFlask
Entry file: SolrFlask/app/app_config.py
Scanned: 2016-10-25 23:10:33.818511
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

gaozhidf/flask_websocket
https://github.com/gaozhidf/flask_websocket
Entry file: flask_websocket/websocket_py3_2/app.py
Scanned: 2016-10-25 23:10:42.863977
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

hilyas/flask-blog
https://github.com/hilyas/flask-blog
Entry file: None
Scanned: 2016-10-25 23:10:43.542768
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dimy407/NBC_Flask
https://github.com/dimy407/NBC_Flask
Entry file: NBC_Flask/flask_app.py
Scanned: 2016-10-25 23:10:49.552512
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ltaziri/Flask-Shopping
https://github.com/ltaziri/Flask-Shopping
Entry file: Flask-Shopping/shoppingsite.py
Scanned: 2016-10-25 23:10:51.316485
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jefersondaniel/notebook-api
https://github.com/jefersondaniel/notebook-api
Entry file: notebook-api/app/__init__.py
Scanned: 2016-10-25 23:10:52.785124
No vulnerabilities found.


ddrsmile/flask-hello-world
https://github.com/ddrsmile/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:10:53.319597
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

webon100/ross_flask01
https://github.com/webon100/ross_flask01
Entry file: None
Scanned: 2016-10-25 23:10:53.842900
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

saviour123/flaskStudentData
https://github.com/saviour123/flaskStudentData
Entry file: flaskStudentData/app.py
Scanned: 2016-10-25 23:10:55.136276
Vulnerability 1:
File: flaskStudentData/app.py
 > User input at line 29, trigger word "form[": 
	name = request.form['nm']
File: flaskStudentData/app.py
 > reaches line 35, trigger word "execute(": 
	cur = con.cursor().execute('INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)', (name, addr, city, pin))

Vulnerability 2:
File: flaskStudentData/app.py
 > User input at line 30, trigger word "form[": 
	addr = request.form['add']
File: flaskStudentData/app.py
 > reaches line 35, trigger word "execute(": 
	cur = con.cursor().execute('INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)', (name, addr, city, pin))

Vulnerability 3:
File: flaskStudentData/app.py
 > User input at line 31, trigger word "form[": 
	city = request.form['city']
File: flaskStudentData/app.py
 > reaches line 35, trigger word "execute(": 
	cur = con.cursor().execute('INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)', (name, addr, city, pin))

Vulnerability 4:
File: flaskStudentData/app.py
 > User input at line 32, trigger word "form[": 
	pin = request.form['pin']
File: flaskStudentData/app.py
 > reaches line 35, trigger word "execute(": 
	cur = con.cursor().execute('INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)', (name, addr, city, pin))



QLGu/flask-zhihu-demo
https://github.com/QLGu/flask-zhihu-demo
Entry file: flask-zhihu-demo/www/__init__.py
Scanned: 2016-10-25 23:10:57.164987
Vulnerability 1:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 35, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 33: show_followed = False
	File: flask-zhihu-demo/www/main/views.py
	 > Line 32: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.signin'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 55, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',show_followed=show_followed, quoras=quoras, users=users)

Vulnerability 2:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 312, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 313: pagination = user.followed.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 314: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 311: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 316, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='关注的人', endpoint='main.followed_by', pagination=pagination, follows=follows)

Vulnerability 3:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 327, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 328: pagination = user.followers.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 329: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 326: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 331, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='的关注者', endpoint='main.followers', pagination=pagination, follows=follows)

Vulnerability 4:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 430, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 431: pagination = user.tags.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 432: following_tags = ['tag'item.tag_set for item in pagination.items]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 429: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 433, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('following_topics.html',user=user, title='关注的话题', endpoint='main.following_tag', pagination=pagination, following_tags=following_tags)

Vulnerability 5:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 444, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 445: pagination = topic.users.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 446: tag_followers = ['user'item.user_set for item in pagination.items]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 443: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 447, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('topic_followers.html',topic=topic, title='人关注了该话题', endpoint='main.tag_followers', pagination=pagination, tag_followers=tag_followers)

Vulnerability 6:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 500, trigger word ".data": 
	question = Question(title=form.title.data, content=form.content.data)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 523: ret_MAYBE_FUNCTION_NAME = render_template('question_add.html',form=form)
File: flask-zhihu-demo/www/main/views.py
 > reaches line 522, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.question',id=question.id))

Vulnerability 7:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 500, trigger word ".data": 
	question = Question(title=form.title.data, content=form.content.data)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 523: ret_MAYBE_FUNCTION_NAME = render_template('question_add.html',form=form)
File: flask-zhihu-demo/www/main/views.py
 > reaches line 522, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.question',id=question.id))

Vulnerability 8:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 563, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 564: pagination = user.user_questions.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 565: questions = pagination.items
	File: flask-zhihu-demo/www/main/views.py
	 > Line 569: questions[j] = questions[j + 1]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 569: questions[j + 1] = questions[j]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 562: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 570, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('following_questions.html',user=user, endpoint='main.people_questions', pagination=pagination, questions=questions)

Vulnerability 9:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 617, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 618: pagination = question.users.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 619: question_followers = ['user'item.q_user for item in pagination.items]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 616: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 620, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('question_followers.html',question=question, endpoint='main.question_followers', pagination=pagination, question_followers=question_followers)

Vulnerability 10:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 705, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 706: pagination = user.user_answers.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 707: answers = pagination.items
	File: flask-zhihu-demo/www/main/views.py
	 > Line 711: answers[j] = answers[j + 1]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 711: answers[j + 1] = answers[j]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 704: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 712, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('following_answers.html',user=user, endpoint='main.people_answers', pagination=pagination, answers=answers)

Vulnerability 11:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 791, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 792: pagination = answer.users.paginate(page,per_page=100, error_out=False)
	File: flask-zhihu-demo/www/main/views.py
	 > Line 793: answer_followers = ['user'item.a_user for item in pagination.items]
	File: flask-zhihu-demo/www/main/views.py
	 > Line 790: ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.index'))
File: flask-zhihu-demo/www/main/views.py
 > reaches line 794, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('answer_followers.html',answer=answer, endpoint='main.answer_followers', pagination=pagination, answer_followers=answer_followers)

Vulnerability 12:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 855, trigger word ".data": 
	collection = Collection(title=form.title.data, desc=form.desc.data)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 865: ret_MAYBE_FUNCTION_NAME = render_template('collection_add.html',form=form)
File: flask-zhihu-demo/www/main/views.py
 > reaches line 864, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.collection',id=collection.id))

Vulnerability 13:
File: flask-zhihu-demo/www/main/views.py
 > User input at line 855, trigger word ".data": 
	collection = Collection(title=form.title.data, desc=form.desc.data)
Reassigned in: 
	File: flask-zhihu-demo/www/main/views.py
	 > Line 865: ret_MAYBE_FUNCTION_NAME = render_template('collection_add.html',form=form)
File: flask-zhihu-demo/www/main/views.py
 > reaches line 864, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('main.collection',id=collection.id))



AndyMcLEOD/PythonFlaskApp
https://github.com/AndyMcLEOD/PythonFlaskApp
Entry file: PythonFlaskApp/app.py
Scanned: 2016-10-25 23:11:01.011310
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mlsh2387/Ex_20160119_Flask-Intro
https://github.com/mlsh2387/Ex_20160119_Flask-Intro
Entry file: Ex_20160119_Flask-Intro/nice.py
Scanned: 2016-10-25 23:11:02.559146
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jkravanja/paypal_flask_payment
https://github.com/jkravanja/paypal_flask_payment
Entry file: paypal_flask_payment/payment.py
Scanned: 2016-10-25 23:11:03.880003
Vulnerability 1:
File: paypal_flask_payment/payment.py
 > User input at line 36, trigger word "get(": 
	paymentId = request.args.get('paymentId')
Reassigned in: 
	File: paypal_flask_payment/payment.py
	 > Line 40: payment = paypalrestsdk.Payment.find(paymentId)
	File: paypal_flask_payment/payment.py
	 > Line 42: ret_MAYBE_FUNCTION_NAME = 'OK <br/> paymentId: {} <br/> PayerID: {} <br/>'.format(paymentId, PayerID)
	File: paypal_flask_payment/payment.py
	 > Line 45: ret_MAYBE_FUNCTION_NAME = payment.error
File: paypal_flask_payment/payment.py
 > reaches line 41, trigger word "execute(": 
	if payment.execute('payer_id'PayerID):

Vulnerability 2:
File: paypal_flask_payment/payment.py
 > User input at line 37, trigger word "get(": 
	PayerID = request.args.get('PayerID')
Reassigned in: 
	File: paypal_flask_payment/payment.py
	 > Line 42: ret_MAYBE_FUNCTION_NAME = 'OK <br/> paymentId: {} <br/> PayerID: {} <br/>'.format(paymentId, PayerID)
	File: paypal_flask_payment/payment.py
	 > Line 45: ret_MAYBE_FUNCTION_NAME = payment.error
File: paypal_flask_payment/payment.py
 > reaches line 41, trigger word "execute(": 
	if payment.execute('payer_id'PayerID):



yalove/flask-nginx-gunicorn
https://github.com/yalove/flask-nginx-gunicorn
Entry file: flask-nginx-gunicorn/app/hello.py
Scanned: 2016-10-25 23:11:05.244104
No vulnerabilities found.


tolmun/flask-ng-sample
https://github.com/tolmun/flask-ng-sample
Entry file: flask-ng-sample/project/__init__.py
Scanned: 2016-10-25 23:11:07.002621
Vulnerability 1:
File: flask-ng-sample/project/api/views.py
 > User input at line 132, trigger word ".data": 
	users = schema.dump(results,many=True).data
File: flask-ng-sample/project/api/views.py
 > reaches line 133, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('users'users)

Vulnerability 2:
File: flask-ng-sample/project/api/views.py
 > User input at line 154, trigger word ".data": 
	user = schema.dump(results).data
File: flask-ng-sample/project/api/views.py
 > reaches line 155, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('user'user)



Michotastico/NetworkInformationFlaskServer
https://github.com/Michotastico/NetworkInformationFlaskServer
Entry file: NetworkInformationFlaskServer/main.py
Scanned: 2016-10-25 23:11:08.368114
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tjhakseth/Nice-Flask-Intro
https://github.com/tjhakseth/Nice-Flask-Intro
Entry file: Nice-Flask-Intro/nice.py
Scanned: 2016-10-25 23:11:09.733666
No vulnerabilities found.


adamphillips/pi-flask-video-streaming
https://github.com/adamphillips/pi-flask-video-streaming
Entry file: pi-flask-video-streaming/app/main.py
Scanned: 2016-10-25 23:11:11.090668
No vulnerabilities found.


AngelMunoz/Flask-Blueprints-Template
https://github.com/AngelMunoz/Flask-Blueprints-Template
Entry file: Flask-Blueprints-Template/app/__init__.py
Scanned: 2016-10-25 23:11:12.377643
Vulnerability 1:
File: Flask-Blueprints-Template/app/mod_auth/controllers.py
 > User input at line 15, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Flask-Blueprints-Template/app/mod_auth/controllers.py
	 > Line 17: session['user_id'] = user.id
File: Flask-Blueprints-Template/app/mod_auth/controllers.py
 > reaches line 18, trigger word "flash(": 
	flash('Welcome %s' % user.name)



SeventhResolve/Flask-Intro-Nice-File
https://github.com/SeventhResolve/Flask-Intro-Nice-File
Entry file: Flask-Intro-Nice-File/nice.py
Scanned: 2016-10-25 23:11:13.662625
No vulnerabilities found.


torykit/docker-flask-console
https://github.com/torykit/docker-flask-console
Entry file: docker-flask-console/start.py
Scanned: 2016-10-25 23:11:15.057235
No vulnerabilities found.


koulanurag/Simple-Flask-Application
https://github.com/koulanurag/Simple-Flask-Application
Entry file: Simple-Flask-Application/app.py
Scanned: 2016-10-25 23:11:16.362743
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

franklingu/flask_start_demo
https://github.com/franklingu/flask_start_demo
Entry file: flask_start_demo/hello.py
Scanned: 2016-10-25 23:11:18.144310
No vulnerabilities found.


graphql-python/flask-graphql
https://github.com/graphql-python/flask-graphql
Entry file: flask-graphql/tests/app.py
Scanned: 2016-10-25 23:11:21.621611
Vulnerability 1:
File: flask-graphql/tests/test_graphiqlview.py
 > User input at line 13, trigger word "get(": 
	response = client.get(url_for('graphql'),headers='Accept''text/html')
File: flask-graphql/tests/test_graphiqlview.py
 > reaches line 13, trigger word "url_for(": 
	response = client.get(url_for('graphql'),headers='Accept''text/html')



hhstore/flask-annotated
https://github.com/hhstore/flask-annotated
Entry file: flask-annotated/flask-0.5/flask/module.py
Scanned: 2016-10-25 23:11:24.433796
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhiliang729/flask
https://github.com/zhiliang729/flask
Entry file: None
Scanned: 2016-10-25 23:11:24.951086
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

prakxys/flask
https://github.com/prakxys/flask
Entry file: None
Scanned: 2016-10-25 23:11:30.537637
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

galacticpy/flask
https://github.com/galacticpy/flask
Entry file: None
Scanned: 2016-10-25 23:11:32.289348
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

iFe1er/flask
https://github.com/iFe1er/flask
Entry file: None
Scanned: 2016-10-25 23:11:33.827738
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jarogers095/flask-hello-world
https://github.com/jarogers095/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:11:34.357873
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

alex-paterson/Barebones-Flask-and-Caffe-Classifier
https://github.com/alex-paterson/Barebones-Flask-and-Caffe-Classifier
Entry file: Barebones-Flask-and-Caffe-Classifier/app.py
Scanned: 2016-10-25 23:11:46.016748
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

drone-demos/drone-with-python
https://github.com/drone-demos/drone-with-python
Entry file: drone-with-python/dronedemo/main.py
Scanned: 2016-10-25 23:11:47.410750
No vulnerabilities found.


amirziai/sklearnflask
https://github.com/amirziai/sklearnflask
Entry file: sklearnflask/main.py
Scanned: 2016-10-25 23:11:51.979670
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sanghyunjooPurdue/flaskr
https://github.com/sanghyunjooPurdue/flaskr
Entry file: None
Scanned: 2016-10-25 23:11:52.496294
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sanghyunjooPurdue/flaskr.

becsully/flasktest
https://github.com/becsully/flasktest
Entry file: flasktest/mysite/__init__.py
Scanned: 2016-10-25 23:12:11.252164
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tehasdf/flaskexample
https://github.com/tehasdf/flaskexample
Entry file: flaskexample/flaskexample/app.py
Scanned: 2016-10-25 23:12:12.744795
No vulnerabilities found.


fengyc/flasky
https://github.com/fengyc/flasky
Entry file: None
Scanned: 2016-10-25 23:12:13.261031
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sshimp/flasktaskr
https://github.com/sshimp/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:12:13.797231
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sharma-abhi/flaskr
https://github.com/sharma-abhi/flaskr
Entry file: None
Scanned: 2016-10-25 23:12:14.317717
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sharma-abhi/flaskr.

kwikiel/flaskr
https://github.com/kwikiel/flaskr
Entry file: None
Scanned: 2016-10-25 23:12:14.825964
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/kwikiel/flaskr.

SFurnace/flaskr
https://github.com/SFurnace/flaskr
Entry file: None
Scanned: 2016-10-25 23:12:15.352589
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SFurnace/flaskr.

noamoss/flasktaskr
https://github.com/noamoss/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:12:15.864134
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

AxoSal/GAE-Flask-React-skeleton
https://github.com/AxoSal/GAE-Flask-React-skeleton
Entry file: GAE-Flask-React-skeleton/main.py
Scanned: 2016-10-25 23:12:18.704599
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

jrballot/FlaskTaskr
https://github.com/jrballot/FlaskTaskr
Entry file: None
Scanned: 2016-10-25 23:12:19.238456
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jrballot/FlaskTaskr.

AnshuOnGit/FlaskServices
https://github.com/AnshuOnGit/FlaskServices
Entry file: FlaskServices/read_file.py
Scanned: 2016-10-25 23:12:23.731061
Vulnerability 1:
File: FlaskServices/read_file.py
 > User input at line 40, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/read_file.py
	 > Line 44: filename = secure_filename(file.filename)
File: FlaskServices/read_file.py
 > reaches line 50, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 2:
File: FlaskServices/read_file.py
 > User input at line 40, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/read_file.py
	 > Line 44: filename = secure_filename(file.filename)
File: FlaskServices/read_file.py
 > reaches line 50, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 3:
File: FlaskServices/uploads/read_file.py
 > User input at line 50, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/uploads/read_file.py
	 > Line 54: filename = secure_filename(file.filename)
File: FlaskServices/uploads/read_file.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 4:
File: FlaskServices/uploads/read_file.py
 > User input at line 50, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: FlaskServices/uploads/read_file.py
	 > Line 54: filename = secure_filename(file.filename)
File: FlaskServices/uploads/read_file.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))



ftanevski4/FlaskPycharm
https://github.com/ftanevski4/FlaskPycharm
Entry file: FlaskPycharm/FlaskPycharm.py
Scanned: 2016-10-25 23:12:25.089683
No vulnerabilities found.


yasskh/FlaskProject
https://github.com/yasskh/FlaskProject
Entry file: FlaskProject/views.py
Scanned: 2016-10-25 23:12:30.297453
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yukoga/flasksample1
https://github.com/yukoga/flasksample1
Entry file: flasksample1/hello.py
Scanned: 2016-10-25 23:12:31.633295
No vulnerabilities found.


Njsao/FlaskServer
https://github.com/Njsao/FlaskServer
Entry file: FlaskServer/untitled.py
Scanned: 2016-10-25 23:12:33.053571
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

feeman1989/backstage_flask
https://github.com/feeman1989/backstage_flask
Entry file: None
Scanned: 2016-10-25 23:12:39.227321
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

charanjp/flask_blog
https://github.com/charanjp/flask_blog
Entry file: flask_blog/venv/Lib/site-packages/flask_sqlalchemy/__init__.py
Scanned: 2016-10-25 23:12:44.597849
No vulnerabilities found.


jaleskinen/PythonFlask
https://github.com/jaleskinen/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:12:52.995457
Vulnerability 1:
File: PythonFlask/app/routersi.py
 > User input at line 30, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routersi.py
 > reaches line 31, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



maukka76/PythonFlask
https://github.com/maukka76/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:13:00.049542
No vulnerabilities found.


Namelessi/PythonFlask
https://github.com/Namelessi/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:13:06.440852
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mhgit1/PythonFlask
https://github.com/mhgit1/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:13:12.349082
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jlents/discover-flask
https://github.com/jlents/discover-flask
Entry file: discover-flask/project/__init__.py
Scanned: 2016-10-25 23:13:13.990767
No vulnerabilities found.


nimeshkverma/BootstrapFlask
https://github.com/nimeshkverma/BootstrapFlask
Entry file: None
Scanned: 2016-10-25 23:13:16.474616
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ddrsmile/flask-blog
https://github.com/ddrsmile/flask-blog
Entry file: None
Scanned: 2016-10-25 23:13:17.052025
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dasdachs/flask-blog
https://github.com/dasdachs/flask-blog
Entry file: None
Scanned: 2016-10-25 23:13:17.595252
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

noamoss/flask-blog
https://github.com/noamoss/flask-blog
Entry file: None
Scanned: 2016-10-25 23:13:18.107229
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hugoren/flask_login
https://github.com/hugoren/flask_login
Entry file: None
Scanned: 2016-10-25 23:13:19.394086
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/hugoren/flask_login.

yuz989/uwsgi-flask
https://github.com/yuz989/uwsgi-flask
Entry file: uwsgi-flask/main.py
Scanned: 2016-10-25 23:13:20.679783
No vulnerabilities found.


taisa007/timeliner-flask
https://github.com/taisa007/timeliner-flask
Entry file: timeliner-flask/timeliner/timeliner/__init__.py
Scanned: 2016-10-25 23:13:22.097726
No vulnerabilities found.


ddrsmile/flask-taskr
https://github.com/ddrsmile/flask-taskr
Entry file: flask-taskr/views.py
Scanned: 2016-10-25 23:13:23.777765
No vulnerabilities found.


Roconda/flask-bootstrap
https://github.com/Roconda/flask-bootstrap
Entry file: flask-bootstrap/src/api/__init__.py
Scanned: 2016-10-25 23:13:25.170434
No vulnerabilities found.


maxcell/flask-workshop
https://github.com/maxcell/flask-workshop
Entry file: flask-workshop/hello_world/hello.py
Scanned: 2016-10-25 23:13:26.974575
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sshimp/flask-blog
https://github.com/sshimp/flask-blog
Entry file: None
Scanned: 2016-10-25 23:13:27.536936
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

PavelMPD/flask_auth
https://github.com/PavelMPD/flask_auth
Entry file: flask_auth/web/server.py
Scanned: 2016-10-25 23:13:29.308983
No vulnerabilities found.


seanwbarry/thinkful_flask
https://github.com/seanwbarry/thinkful_flask
Entry file: thinkful_flask/hello_world.py
Scanned: 2016-10-25 23:13:33.238357
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

OrionsSuspenders/flask-blog
https://github.com/OrionsSuspenders/flask-blog
Entry file: None
Scanned: 2016-10-25 23:13:33.826773
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

DaTimsta/flask-test
https://github.com/DaTimsta/flask-test
Entry file: flask-test/flask_app.py
Scanned: 2016-10-25 23:13:35.115047
No vulnerabilities found.


sstriatlon/PyFlask
https://github.com/sstriatlon/PyFlask
Entry file: PyFlask/app.py
Scanned: 2016-10-25 23:13:39.723501
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: PyFlask/venv/lib/python2.7/sre_compile.py

Vianey81/Flask-sql
https://github.com/Vianey81/Flask-sql
Entry file: Flask-sql/hackbright.py
Scanned: 2016-10-25 23:13:41.548152
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

timoparv65/PythonFlask
https://github.com/timoparv65/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:13:48.091962
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 38, trigger word ".data": 
	user = Users.query.filter_by(email=login.email.data)
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 44: session['user_id'] = user[0].id
	File: PythonFlask/app/routers.py
	 > Line 45: session['isLogged'] = True
	File: PythonFlask/app/routers.py
	 > Line 49: friends = Friends.query.filter_by(user_id=user[0].id)
	File: PythonFlask/app/routers.py
	 > Line 54: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 58: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 28: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
File: PythonFlask/app/routers.py
 > reaches line 51, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=friends)

Vulnerability 2:
File: PythonFlask/app/routers.py
 > User input at line 102, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 103, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



JRaisala/PythonFlask
https://github.com/JRaisala/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:13:56.949964
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 22, trigger word ".data": 
	user = Users.query.filter_by(email=login.email.data)
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 26: session['user_id'] = user[0].id
	File: PythonFlask/app/routers.py
	 > Line 27: session['isLogged'] = True
	File: PythonFlask/app/routers.py
	 > Line 29: friends = Friends.query.filter_by(user_id=user[0].id)
	File: PythonFlask/app/routers.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
File: PythonFlask/app/routers.py
 > reaches line 31, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=friends)

Vulnerability 2:
File: PythonFlask/app/routers.py
 > User input at line 76, trigger word "get(": 
	user = Users.query.get(session['user_id'])
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 81: ret_MAYBE_FUNCTION_NAME = render_template('template_friends.html',form=form, isLogged=True)
	File: PythonFlask/app/routers.py
	 > Line 66: ret_MAYBE_FUNCTION_NAME = redirect('/')
	File: PythonFlask/app/routers.py
	 > Line 69: ret_MAYBE_FUNCTION_NAME = render_template('template_friends.html',form=form, isLogged=True)
File: PythonFlask/app/routers.py
 > reaches line 78, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=user.friends)

Vulnerability 3:
File: PythonFlask/app/routers.py
 > User input at line 98, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 99, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



jraappan/PythonFlask
https://github.com/jraappan/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:14:04.530431
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 27, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 28, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



hannu78/PythonFlask
https://github.com/hannu78/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:14:10.951658
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 46, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 47, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_name.html',uname=name)



marcosf63/flask_app
https://github.com/marcosf63/flask_app
Entry file: None
Scanned: 2016-10-25 23:14:11.495774
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

maratkanov-a/flask_project
https://github.com/maratkanov-a/flask_project
Entry file: flask_project/flask_project.py
Scanned: 2016-10-25 23:14:12.832351
No vulnerabilities found.


bellcliff/practice-flask
https://github.com/bellcliff/practice-flask
Entry file: practice-flask/hello.py
Scanned: 2016-10-25 23:14:14.680977
No vulnerabilities found.


GeetikaBatra/Flask_intro
https://github.com/GeetikaBatra/Flask_intro
Entry file: None
Scanned: 2016-10-25 23:14:15.215175
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

changddcn/dd-flask
https://github.com/changddcn/dd-flask
Entry file: None
Scanned: 2016-10-25 23:14:16.842314
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/changddcn/dd-flask.

Decus12/PythonFlask
https://github.com/Decus12/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:14:28.538903
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 49, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 50, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



thiltunen78/PythonFlask
https://github.com/thiltunen78/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:14:35.688652
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 22, trigger word ".data": 
	user = Users.query.filter_by(email=login.email.data)
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 26: session['user_id'] = user[0].id
	File: PythonFlask/app/routers.py
	 > Line 27: session['isLogged'] = True
	File: PythonFlask/app/routers.py
	 > Line 29: friends = Friends.query.filter_by(user_id=user[0].id)
	File: PythonFlask/app/routers.py
	 > Line 33: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 37: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
File: PythonFlask/app/routers.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=friends)

Vulnerability 2:
File: PythonFlask/app/routers.py
 > User input at line 75, trigger word "get(": 
	user = Users.query.get(session['user_id'])
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 79: ret_MAYBE_FUNCTION_NAME = render_template('template_friends.html',form=form, isLogged=True)
	File: PythonFlask/app/routers.py
	 > Line 65: ret_MAYBE_FUNCTION_NAME = redirect('/')
	File: PythonFlask/app/routers.py
	 > Line 68: ret_MAYBE_FUNCTION_NAME = render_template('template_friends.html',form=form, isLogged=True)
File: PythonFlask/app/routers.py
 > reaches line 76, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=user.friends)

Vulnerability 3:
File: PythonFlask/app/routers.py
 > User input at line 95, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 96, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



tere15/PythonFlask
https://github.com/tere15/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:14:50.136152
No vulnerabilities found.


ttakkula/flask_example
https://github.com/ttakkula/flask_example
Entry file: flask_example/app/__init__.py
Scanned: 2016-10-25 23:15:00.867208
Vulnerability 1:
File: flask_example/app/routers.py
 > User input at line 18, trigger word ".data": 
	user = Users.query.filter_by(email=login.email.data)
Reassigned in: 
	File: flask_example/app/routers.py
	 > Line 20: session['user_id'] = user[0].id
	File: flask_example/app/routers.py
	 > Line 21: session['isLogged'] = True
	File: flask_example/app/routers.py
	 > Line 23: friends = Friends.query.filter_by(user_id=user[0].id)
	File: flask_example/app/routers.py
	 > Line 28: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=login, isLogged=False)
	File: flask_example/app/routers.py
	 > Line 32: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=login, isLogged=False)
	File: flask_example/app/routers.py
	 > Line 14: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=login, isLogged=False)
File: flask_example/app/routers.py
 > reaches line 25, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('friends.html',isLogged=True, friends=friends)

Vulnerability 2:
File: flask_example/app/routers.py
 > User input at line 61, trigger word "get(": 
	friend = Users.query.get(session['user_id'])
Reassigned in: 
	File: flask_example/app/routers.py
	 > Line 59: ret_MAYBE_FUNCTION_NAME = redirect('/')
File: flask_example/app/routers.py
 > reaches line 62, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('friends.html',isLogged=True, friends=friend.friends)

Vulnerability 3:
File: flask_example/app/routers.py
 > User input at line 79, trigger word "get(": 
	name = request.args.get('name')
File: flask_example/app/routers.py
 > reaches line 82, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name, browser=agent, preflang=preflang)

Vulnerability 4:
File: flask_example/app/routers.py
 > User input at line 80, trigger word "get(": 
	agent = request.headers.get('User-Agent')
File: flask_example/app/routers.py
 > reaches line 82, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name, browser=agent, preflang=preflang)

Vulnerability 5:
File: flask_example/app/routers.py
 > User input at line 81, trigger word "get(": 
	preflang = request.headers.get('Accept-Language')
File: flask_example/app/routers.py
 > reaches line 82, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name, browser=agent, preflang=preflang)



satyadevi-nyros/werckers_flask
https://github.com/satyadevi-nyros/werckers_flask
Entry file: werckers_flask/app.py
Scanned: 2016-10-25 23:15:03.098054
No vulnerabilities found.


ltaziri/SQL-Flask
https://github.com/ltaziri/SQL-Flask
Entry file: SQL-Flask/hackbright.py
Scanned: 2016-10-25 23:15:04.411898
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

psavela/PythonFlask
https://github.com/psavela/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:15:13.417739
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 21, trigger word ".data": 
	user = Users.query.filter_by(email=login.email.data)
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 25: session['user_id'] = user[0].id
	File: PythonFlask/app/routers.py
	 > Line 26: session['isLogged'] = True
	File: PythonFlask/app/routers.py
	 > Line 28: friends = Friends.query.filter_by(user_id=user[0].id)
	File: PythonFlask/app/routers.py
	 > Line 33: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 37: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 16: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
File: PythonFlask/app/routers.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=friends)

Vulnerability 2:
File: PythonFlask/app/routers.py
 > User input at line 70, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 71, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



KariR61/PythonFlask
https://github.com/KariR61/PythonFlask
Entry file: PythonFlask/app/__init__.py
Scanned: 2016-10-25 23:15:19.490401
Vulnerability 1:
File: PythonFlask/app/routers.py
 > User input at line 19, trigger word ".data": 
	user = Users.query.filter_by(email=login.email.data)
Reassigned in: 
	File: PythonFlask/app/routers.py
	 > Line 22: session['user_id'] = user[0].id
	File: PythonFlask/app/routers.py
	 > Line 23: session['isLogged'] = True
	File: PythonFlask/app/routers.py
	 > Line 25: friends = Friends.query.filter_by(user_id=user[0].id)
	File: PythonFlask/app/routers.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
	File: PythonFlask/app/routers.py
	 > Line 14: ret_MAYBE_FUNCTION_NAME = render_template('template_index.html',form=login, isLogged=False)
File: PythonFlask/app/routers.py
 > reaches line 27, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',isLogged=True, friends=friends)

Vulnerability 2:
File: PythonFlask/app/routers.py
 > User input at line 45, trigger word "get(": 
	name = request.args.get('name')
File: PythonFlask/app/routers.py
 > reaches line 46, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('template_user.html',name=name)



dhruvsrivastava/flask-intro
https://github.com/dhruvsrivastava/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-25 23:15:23.742653
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

cjohns38/flask-intro
https://github.com/cjohns38/flask-intro
Entry file: flask-intro/__init__.py
Scanned: 2016-10-25 23:15:25.308002
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

notaweelos/openshift_flask
https://github.com/notaweelos/openshift_flask
Entry file: openshift_flask/helloflask.py
Scanned: 2016-10-25 23:15:26.595207
No vulnerabilities found.


jkeung/flask_microblog
https://github.com/jkeung/flask_microblog
Entry file: flask_microblog/app/__init__.py
Scanned: 2016-10-25 23:15:28.311771
No vulnerabilities found.


shank7485/Flask-APIs
https://github.com/shank7485/Flask-APIs
Entry file: Flask-APIs/APIs/__init__.py
Scanned: 2016-10-25 23:15:29.748537
Vulnerability 1:
File: Flask-APIs/APIs/main_URLs.py
 > User input at line 49, trigger word "get(": 
	from_address = request.args.get('f_addr')
Reassigned in: 
	File: Flask-APIs/APIs/main_URLs.py
	 > Line 52: comp = comparer_address(from_address, to_address, geo_api_key, uber_api_key)
File: Flask-APIs/APIs/main_URLs.py
 > reaches line 53, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(comp.services_prices())

Vulnerability 2:
File: Flask-APIs/APIs/main_URLs.py
 > User input at line 50, trigger word "get(": 
	to_address = request.args.get('t_addr')
Reassigned in: 
	File: Flask-APIs/APIs/main_URLs.py
	 > Line 52: comp = comparer_address(from_address, to_address, geo_api_key, uber_api_key)
File: Flask-APIs/APIs/main_URLs.py
 > reaches line 53, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(comp.services_prices())

Vulnerability 3:
File: Flask-APIs/APIs/main_URLs.py
 > User input at line 58, trigger word "get(": 
	from_latitude = request.args.get('f_lat')
Reassigned in: 
	File: Flask-APIs/APIs/main_URLs.py
	 > Line 63: comp = comparer_coord(from_latitude, from_longitude, to_latitude, to_longitude, uber_api_key)
File: Flask-APIs/APIs/main_URLs.py
 > reaches line 64, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(comp.services_prices())

Vulnerability 4:
File: Flask-APIs/APIs/main_URLs.py
 > User input at line 59, trigger word "get(": 
	from_longitude = request.args.get('f_long')
Reassigned in: 
	File: Flask-APIs/APIs/main_URLs.py
	 > Line 63: comp = comparer_coord(from_latitude, from_longitude, to_latitude, to_longitude, uber_api_key)
File: Flask-APIs/APIs/main_URLs.py
 > reaches line 64, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(comp.services_prices())

Vulnerability 5:
File: Flask-APIs/APIs/main_URLs.py
 > User input at line 60, trigger word "get(": 
	to_latitude = request.args.get('t_lat')
Reassigned in: 
	File: Flask-APIs/APIs/main_URLs.py
	 > Line 63: comp = comparer_coord(from_latitude, from_longitude, to_latitude, to_longitude, uber_api_key)
File: Flask-APIs/APIs/main_URLs.py
 > reaches line 64, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(comp.services_prices())

Vulnerability 6:
File: Flask-APIs/APIs/main_URLs.py
 > User input at line 61, trigger word "get(": 
	to_longitude = request.args.get('t_long')
Reassigned in: 
	File: Flask-APIs/APIs/main_URLs.py
	 > Line 63: comp = comparer_coord(from_latitude, from_longitude, to_latitude, to_longitude, uber_api_key)
File: Flask-APIs/APIs/main_URLs.py
 > reaches line 64, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(comp.services_prices())



mattyait/Flask_webapp
https://github.com/mattyait/Flask_webapp
Entry file: Flask_webapp/routes.py
Scanned: 2016-10-25 23:15:31.160467
Vulnerability 1:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)

Vulnerability 2:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 69, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 3:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 73, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)

Vulnerability 4:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 78, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 5:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 85, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 6:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 89, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)

Vulnerability 7:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 95, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 8:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 99, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)



nntndfrk/untitled
https://github.com/nntndfrk/untitled
Entry file: untitled/untitled.py
Scanned: 2016-10-25 23:15:32.463720
No vulnerabilities found.


jrballot/FlaskBlogApp
https://github.com/jrballot/FlaskBlogApp
Entry file: FlaskBlogApp/blog.py
Scanned: 2016-10-25 23:15:33.750716
No vulnerabilities found.


jgabrielfreitas/FlaskAndParse
https://github.com/jgabrielfreitas/FlaskAndParse
Entry file: FlaskAndParse/hello_flask.py
Scanned: 2016-10-25 23:15:35.047731
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

bernaerdik/Flask_on_CF
https://github.com/bernaerdik/Flask_on_CF
Entry file: Flask_on_CF/hello.py
Scanned: 2016-10-25 23:15:36.325185
No vulnerabilities found.


go-bears/sql-with-flask
https://github.com/go-bears/sql-with-flask
Entry file: sql-with-flask/hackbright.py
Scanned: 2016-10-25 23:15:37.630463
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

anniehe/project-tracker-flask
https://github.com/anniehe/project-tracker-flask
Entry file: project-tracker-flask/hackbright-web.py
Scanned: 2016-10-25 23:15:38.936213
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

knoxilla/web-flask-dockerized
https://github.com/knoxilla/web-flask-dockerized
Entry file: web-flask-dockerized/app.py
Scanned: 2016-10-25 23:15:40.224489
No vulnerabilities found.


julyano/MiniCursoFlaskPETCC
https://github.com/julyano/MiniCursoFlaskPETCC
Entry file: MiniCursoFlaskPETCC/routes.py
Scanned: 2016-10-25 23:15:41.513425
No vulnerabilities found.


neonbadger/project-tracker-flask
https://github.com/neonbadger/project-tracker-flask
Entry file: project-tracker-flask/hackbright-web.py
Scanned: 2016-10-25 23:15:42.815557
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

DoriRunyon/Project-tracker-flask
https://github.com/DoriRunyon/Project-tracker-flask
Entry file: Project-tracker-flask/hackbright-web.py
Scanned: 2016-10-25 23:15:44.106486
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

emlam/project-tracker-flask
https://github.com/emlam/project-tracker-flask
Entry file: project-tracker-flask/hackbright-web.py
Scanned: 2016-10-25 23:15:45.450561
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Buuntu/TicTacToe-Flask
https://github.com/Buuntu/TicTacToe-Flask
Entry file: TicTacToe-Flask/tictactoe.py
Scanned: 2016-10-25 23:15:46.875899
No vulnerabilities found.


EdilvoLima/CursoPythonFlask
https://github.com/EdilvoLima/CursoPythonFlask
Entry file: CursoPythonFlask/app.py
Scanned: 2016-10-25 23:15:48.285028
No vulnerabilities found.


dternyak/Flask-Postgres-Docker
https://github.com/dternyak/Flask-Postgres-Docker
Entry file: Flask-Postgres-Docker/web/index.py
Scanned: 2016-10-25 23:15:50.162125
No vulnerabilities found.


info3180/python-flask-example
https://github.com/info3180/python-flask-example
Entry file: python-flask-example/hello.py
Scanned: 2016-10-25 23:15:51.457518
Vulnerability 1:
File: python-flask-example/hello.py
 > User input at line 17, trigger word "get(": 
	name = request.args.get('name')
File: python-flask-example/hello.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('process.html',name=name)



janeygak/Hackbright--SQL-with-Flask
https://github.com/janeygak/Hackbright--SQL-with-Flask
Entry file: Hackbright--SQL-with-Flask/hackbright-web.py
Scanned: 2016-10-25 23:15:52.860277
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

SeventhResolve/Project-Tracker-Flask
https://github.com/SeventhResolve/Project-Tracker-Flask
Entry file: Project-Tracker-Flask/hackbright-web.py
Scanned: 2016-10-25 23:15:54.292064
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

alitsiya/project-tracker-flask
https://github.com/alitsiya/project-tracker-flask
Entry file: project-tracker-flask/hackbright-web.py
Scanned: 2016-10-25 23:15:55.693501
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ThomasMarcel/gae-tomalcala-flask
https://github.com/ThomasMarcel/gae-tomalcala-flask
Entry file: gae-tomalcala-flask/main.py
Scanned: 2016-10-25 23:15:57.107355
No vulnerabilities found.


ContinuumIO/flask-kerberos-login
https://github.com/ContinuumIO/flask-kerberos-login
Entry file: flask-kerberos-login/examples/simple.py
Scanned: 2016-10-25 23:15:58.514703
No vulnerabilities found.


badspelr/flask-hello-world
https://github.com/badspelr/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:16:02.075095
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yoophi/flask-appointment-peewee
https://github.com/yoophi/flask-appointment-peewee
Entry file: flask-appointment-peewee/sched/app.py
Scanned: 2016-10-25 23:16:05.515634
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

c1rno/Flask_auth_example
https://github.com/c1rno/Flask_auth_example
Entry file: Flask_auth_example/app/__init__.py
Scanned: 2016-10-25 23:16:15.388339
No vulnerabilities found.


billdwalters/Flask
https://github.com/billdwalters/Flask
Entry file: None
Scanned: 2016-10-25 23:16:26.126361
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

prakxys/flask
https://github.com/prakxys/flask
Entry file: None
Scanned: 2016-10-25 23:16:27.705370
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

galacticpy/flask
https://github.com/galacticpy/flask
Entry file: None
Scanned: 2016-10-25 23:16:29.347089
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

OneBitSoftware/Office365-SharePoint-Python-Flask-Sample
https://github.com/OneBitSoftware/Office365-SharePoint-Python-Flask-Sample
Entry file: Office365-SharePoint-Python-Flask-Sample/src/Python.Office365.AppAuthentication/app.py
Scanned: 2016-10-25 23:16:32.020096
No vulnerabilities found.


NJIT-SIG-WEBDEV/flask-intro
https://github.com/NJIT-SIG-WEBDEV/flask-intro
Entry file: flask-intro/Session1/app.py
Scanned: 2016-10-25 23:16:33.425721
No vulnerabilities found.


imperio-wxm/flask-learn
https://github.com/imperio-wxm/flask-learn
Entry file: None
Scanned: 2016-10-25 23:16:33.996220
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ptrierweiler/myblog
https://github.com/ptrierweiler/myblog
Entry file: None
Scanned: 2016-10-25 23:16:34.550119
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

drone-demos/drone-with-python
https://github.com/drone-demos/drone-with-python
Entry file: drone-with-python/dronedemo/main.py
Scanned: 2016-10-25 23:16:36.962684
No vulnerabilities found.


msopentechcn/aad-graphapi-flask-demo
https://github.com/msopentechcn/aad-graphapi-flask-demo
Entry file: aad-graphapi-flask-demo/app.py
Scanned: 2016-10-25 23:16:38.261686
Vulnerability 1:
File: aad-graphapi-flask-demo/app.py
 > User input at line 100, trigger word "get(": 
	error_code = messages.get('error_code')
File: aad-graphapi-flask-demo/app.py
 > reaches line 102, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('error.html',error_code=error_code, error_message=error_message)

Vulnerability 2:
File: aad-graphapi-flask-demo/app.py
 > User input at line 101, trigger word "get(": 
	error_message = messages.get('error_message')
File: aad-graphapi-flask-demo/app.py
 > reaches line 102, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('error.html',error_code=error_code, error_message=error_message)

Vulnerability 3:
File: aad-graphapi-flask-demo/app.py
 > User input at line 108, trigger word "get(": 
	error_code = errors.get('code')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))

Vulnerability 4:
File: aad-graphapi-flask-demo/app.py
 > User input at line 109, trigger word "get(": 
	error_message = errors.get('message').get('value')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))

Vulnerability 5:
File: aad-graphapi-flask-demo/app.py
 > User input at line 108, trigger word "get(": 
	error_code = errors.get('code')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))

Vulnerability 6:
File: aad-graphapi-flask-demo/app.py
 > User input at line 109, trigger word "get(": 
	error_message = errors.get('message').get('value')
Reassigned in: 
	File: aad-graphapi-flask-demo/app.py
	 > Line 110: messages = json.dumps('error_code''error_message'error_codeerror_message)
	File: aad-graphapi-flask-demo/app.py
	 > Line 113: ret_MAYBE_FUNCTION_NAME = redirect(url_for('list_user'))
File: aad-graphapi-flask-demo/app.py
 > reaches line 111, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('display_error',messages=messages))



amirziai/sklearnflask
https://github.com/amirziai/sklearnflask
Entry file: sklearnflask/main.py
Scanned: 2016-10-25 23:16:39.770002
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

SticksInHand/flaskr
https://github.com/SticksInHand/flaskr
Entry file: None
Scanned: 2016-10-25 23:16:40.294868
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SticksInHand/flaskr.

jayShepard/Flasky
https://github.com/jayShepard/Flasky
Entry file: None
Scanned: 2016-10-25 23:16:40.847401
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jayShepard/Flasky.

vineethtw/flaskexamples
https://github.com/vineethtw/flaskexamples
Entry file: flaskexamples/api/simulations.py
Scanned: 2016-10-25 23:16:43.260017
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kmosho/flaskr
https://github.com/kmosho/flaskr
Entry file: None
Scanned: 2016-10-25 23:16:43.848093
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/kmosho/flaskr.

Duncodes/flasky
https://github.com/Duncodes/flasky
Entry file: None
Scanned: 2016-10-25 23:16:45.354567
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

menglong81/flaskr
https://github.com/menglong81/flaskr
Entry file: None
Scanned: 2016-10-25 23:16:46.869868
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/menglong81/flaskr.

chadelder/flasktaskr
https://github.com/chadelder/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:16:48.399265
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

diegogslomp/flaskr
https://github.com/diegogslomp/flaskr
Entry file: None
Scanned: 2016-10-25 23:16:51.457886
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/diegogslomp/flaskr.

xu00wei/flasky
https://github.com/xu00wei/flasky
Entry file: None
Scanned: 2016-10-25 23:16:52.972011
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

playgrdstar/flasktaskr
https://github.com/playgrdstar/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:16:53.496147
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

toricor/flaskr
https://github.com/toricor/flaskr
Entry file: None
Scanned: 2016-10-25 23:16:55.023518
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/toricor/flaskr.

Lazyppl/Flaskblog
https://github.com/Lazyppl/Flaskblog
Entry file: Flaskblog/app/__init__.py
Scanned: 2016-10-25 23:16:57.432885
No vulnerabilities found.


zeratullich/flaskr
https://github.com/zeratullich/flaskr
Entry file: None
Scanned: 2016-10-25 23:16:57.949015
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zeratullich/flaskr.

noamoss/flasktaskr
https://github.com/noamoss/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:17:02.469801
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

arose13/HerokuCondaScipyFlaskApp
https://github.com/arose13/HerokuCondaScipyFlaskApp
Entry file: HerokuCondaScipyFlaskApp/Web/app.py
Scanned: 2016-10-25 23:17:05.916123
No vulnerabilities found.


jrballot/FlaskTaskr
https://github.com/jrballot/FlaskTaskr
Entry file: None
Scanned: 2016-10-25 23:17:06.450306
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jrballot/FlaskTaskr.

awind/FlaskRestful
https://github.com/awind/FlaskRestful
Entry file: FlaskRestful/app/__init__.py
Scanned: 2016-10-25 23:17:15.897907
Vulnerability 1:
File: FlaskRestful/app/apis.py
 > User input at line 48, trigger word "get(": 
	user = User.query.get(userid)
File: FlaskRestful/app/apis.py
 > reaches line 51, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = user_schema.jsonify(user)



jgabrielfreitas/FlaskFirebase
https://github.com/jgabrielfreitas/FlaskFirebase
Entry file: FlaskFirebase/runner.py
Scanned: 2016-10-25 23:17:22.217026
No vulnerabilities found.


scarabcoder/FlaskSite
https://github.com/scarabcoder/FlaskSite
Entry file: FlaskSite/app/__init__.py
Scanned: 2016-10-25 23:17:25.871051
No vulnerabilities found.


aetherwu/FlaskDocker
https://github.com/aetherwu/FlaskDocker
Entry file: FlaskDocker/app/app.py
Scanned: 2016-10-25 23:17:27.497719
No vulnerabilities found.


angeloski/flask-sandbox
https://github.com/angeloski/flask-sandbox
Entry file: flask-sandbox/intro_to_flask/__init__.py
Scanned: 2016-10-25 23:17:28.795512
No vulnerabilities found.


jonnybazookatone/flask-watchman
https://github.com/jonnybazookatone/flask-watchman
Entry file: None
Scanned: 2016-10-25 23:17:30.172554
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jonnybazookatone/flask-watchman.

Lucky0604/flask-blog
https://github.com/Lucky0604/flask-blog
Entry file: None
Scanned: 2016-10-25 23:17:31.722923
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

arvind-iyer/flask-101
https://github.com/arvind-iyer/flask-101
Entry file: flask-101/app/__init__.py
Scanned: 2016-10-25 23:17:34.130589
No vulnerabilities found.


vbalien/flask-skeleton
https://github.com/vbalien/flask-skeleton
Entry file: flask-skeleton/app/__init__.py
Scanned: 2016-10-25 23:17:35.524055
No vulnerabilities found.


anniee/flask-intro
https://github.com/anniee/flask-intro
Entry file: flask-intro/server.py
Scanned: 2016-10-25 23:17:36.861445
No vulnerabilities found.


dritux/flask-spark
https://github.com/dritux/flask-spark
Entry file: flask-spark/spark/__init__.py
Scanned: 2016-10-25 23:17:38.150479
No vulnerabilities found.


robbintt/flask-template
https://github.com/robbintt/flask-template
Entry file: flask-template/controller.py
Scanned: 2016-10-25 23:17:40.040281
No vulnerabilities found.


felipemfp/flask-microblog
https://github.com/felipemfp/flask-microblog
Entry file: None
Scanned: 2016-10-25 23:17:40.569992
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/felipemfp/flask-microblog.

bronka/flask-blog
https://github.com/bronka/flask-blog
Entry file: None
Scanned: 2016-10-25 23:17:41.112344
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

genagain/learning-flask
https://github.com/genagain/learning-flask
Entry file: learning-flask/app/hello.py
Scanned: 2016-10-25 23:17:47.565510
No vulnerabilities found.


acknowledge/flask-api
https://github.com/acknowledge/flask-api
Entry file: None
Scanned: 2016-10-25 23:17:48.611297
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/acknowledge/flask-api.

JunQian-Andy/flask_mail
https://github.com/JunQian-Andy/flask_mail
Entry file: flask_mail/app/__init__.py
Scanned: 2016-10-25 23:17:49.915215
No vulnerabilities found.


fabricekwizera/flask_intro
https://github.com/fabricekwizera/flask_intro
Entry file: flask_intro/first_app.py
Scanned: 2016-10-25 23:17:51.307378
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_intro/.#first_app.py

relman/flask-srv
https://github.com/relman/flask-srv
Entry file: flask-srv/service.py
Scanned: 2016-10-25 23:17:52.856737
No vulnerabilities found.


volgoweb/flask_api
https://github.com/volgoweb/flask_api
Entry file: flask_api/application.py
Scanned: 2016-10-25 23:17:54.167549
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

leiyue/tutorial_flask
https://github.com/leiyue/tutorial_flask
Entry file: tutorial_flask/base/app.py
Scanned: 2016-10-25 23:17:55.596378
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

sharma-mohit/flask-mongo
https://github.com/sharma-mohit/flask-mongo
Entry file: flask-mongo/mainapp/__init__.py
Scanned: 2016-10-25 23:17:57.463311
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

samgclarke/flask-starter
https://github.com/samgclarke/flask-starter
Entry file: None
Scanned: 2016-10-25 23:17:58.007689
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/samgclarke/flask-starter.

hbldh/flask-pybankid
https://github.com/hbldh/flask-pybankid
Entry file: flask-pybankid/flask_pybankid.py
Scanned: 2016-10-25 23:18:03.482201
Vulnerability 1:
File: flask-pybankid/flask_pybankid.py
 > User input at line 130, trigger word "get(": 
	text_to_sign = request.args.get('userVisibleData', '')
Reassigned in: 
	File: flask-pybankid/flask_pybankid.py
	 > Line 132: response = self.client.sign(text_to_sign, personal_number)
	File: flask-pybankid/flask_pybankid.py
	 > Line 134: ret_MAYBE_FUNCTION_NAME = self.handle_exception(FlaskPyBankIDError.create_from_pybankid_exception(e))
	File: flask-pybankid/flask_pybankid.py
	 > Line 136: ret_MAYBE_FUNCTION_NAME = self.handle_exception(FlaskPyBankIDError(str(e), 500))
File: flask-pybankid/flask_pybankid.py
 > reaches line 138, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(response)



krlex/flask-resume
https://github.com/krlex/flask-resume
Entry file: flask-resume/manage.py
Scanned: 2016-10-25 23:18:05.909073
No vulnerabilities found.


doobeh/flask-lister
https://github.com/doobeh/flask-lister
Entry file: flask-lister/app/core.py
Scanned: 2016-10-25 23:18:08.210911
No vulnerabilities found.


dfitzgerald3/sg_flask
https://github.com/dfitzgerald3/sg_flask
Entry file: sg_flask/__init__.py
Scanned: 2016-10-25 23:18:32.765844
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: sg_flask/venv/lib/python2.7/sre_compile.py

Tmingh/learn_flask
https://github.com/Tmingh/learn_flask
Entry file: learn_flask/learn_flask/flaskr.py
Scanned: 2016-10-25 23:18:34.164082
No vulnerabilities found.


qiuhaoling/my_flask
https://github.com/qiuhaoling/my_flask
Entry file: my_flask/app/__init__.py
Scanned: 2016-10-25 23:18:35.586790
No vulnerabilities found.


ahsanwtc/flask-project
https://github.com/ahsanwtc/flask-project
Entry file: flask-project/hello.py
Scanned: 2016-10-25 23:18:36.868420
No vulnerabilities found.


chadelder/flask-blog
https://github.com/chadelder/flask-blog
Entry file: None
Scanned: 2016-10-25 23:18:37.410914
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rdrsh/flask-hello
https://github.com/rdrsh/flask-hello
Entry file: flask-hello/main.py
Scanned: 2016-10-25 23:18:39.162433
No vulnerabilities found.


Forumouth/flask-simple
https://github.com/Forumouth/flask-simple
Entry file: flask-simple/tests/data/testapp.py
Scanned: 2016-10-25 23:18:40.571791
No vulnerabilities found.


mattyait/Flask_webapp
https://github.com/mattyait/Flask_webapp
Entry file: Flask_webapp/routes.py
Scanned: 2016-10-25 23:18:41.988579
Vulnerability 1:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)

Vulnerability 2:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 69, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 3:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 73, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)

Vulnerability 4:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 78, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 5:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 85, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 6:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 89, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)

Vulnerability 7:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 95, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',message=message)

Vulnerability 8:
File: Flask_webapp/routes.py
 > User input at line 43, trigger word "form[": 
	user_name = request.form['username'].strip()
Reassigned in: 
	File: Flask_webapp/routes.py
	 > Line 68: message = 'User' + user_name + ' Created successfully with sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 72: errors = 'User ' + user_name + ' already exist.'
	File: Flask_webapp/routes.py
	 > Line 77: message = 'User' + user_name + ' Created successfully without sudo privileges'
	File: Flask_webapp/routes.py
	 > Line 84: message = 'User' + user_name + ' modified successfully'
	File: Flask_webapp/routes.py
	 > Line 88: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 94: message = 'User' + user_name + ' deleted successfully'
	File: Flask_webapp/routes.py
	 > Line 98: errors = 'User ' + user_name + ' not exist.'
	File: Flask_webapp/routes.py
	 > Line 102: ret_MAYBE_FUNCTION_NAME = render_template('index.html')
	File: Flask_webapp/routes.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)
	File: Flask_webapp/routes.py
	 > Line 57: errors = 'Please enter the fields values.'
File: Flask_webapp/routes.py
 > reaches line 99, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',errors=errors)



playgrdstar/flask-blog
https://github.com/playgrdstar/flask-blog
Entry file: None
Scanned: 2016-10-25 23:18:42.538549
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rx3bp/flask-freeze
https://github.com/rx3bp/flask-freeze
Entry file: flask-freeze/app.py
Scanned: 2016-10-25 23:18:44.427567
No vulnerabilities found.


worthlesspenny7/tumblelogFlask
https://github.com/worthlesspenny7/tumblelogFlask
Entry file: tumblelogFlask/__init__.py
Scanned: 2016-10-25 23:18:46.225977
No vulnerabilities found.


NaoYamaguchi/flask_login
https://github.com/NaoYamaguchi/flask_login
Entry file: None
Scanned: 2016-10-25 23:18:46.771175
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/NaoYamaguchi/flask_login.

njnr/onece
https://github.com/njnr/onece
Entry file: onece/app/__init__.py
Scanned: 2016-10-25 23:18:48.352859
Vulnerability 1:
File: onece/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: onece/app/main/views.py
	 > Line 23: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: onece/app/main/views.py
	 > Line 26: posts = pagination.items
	File: onece/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: onece/app/main/views.py
 > reaches line 27, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: onece/app/main/views.py
 > User input at line 41, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: onece/app/main/views.py
	 > Line 43: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: onece/app/main/views.py
	 > Line 45: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: onece/app/main/views.py
	 > Line 48: comments = pagination.items
	File: onece/app/main/views.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: onece/app/main/views.py
 > reaches line 49, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 3:
File: onece/app/main/views.py
 > User input at line 54, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: onece/app/main/views.py
	 > Line 55: pagination = Location.query.order_by(Location.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: onece/app/main/views.py
	 > Line 58: locations = pagination.items
File: onece/app/main/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('locations.html',locations=locations, pagination=pagination)

Vulnerability 4:
File: onece/app/main/views.py
 > User input at line 117, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: onece/app/main/views.py
	 > Line 118: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: onece/app/main/views.py
	 > Line 121: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: onece/app/main/views.py
	 > Line 116: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: onece/app/main/views.py
 > reaches line 123, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 5:
File: onece/app/main/views.py
 > User input at line 134, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: onece/app/main/views.py
	 > Line 135: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: onece/app/main/views.py
	 > Line 138: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: onece/app/main/views.py
	 > Line 133: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: onece/app/main/views.py
 > reaches line 140, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)



rmaheshkumarblr/FlaskTestingApp
https://github.com/rmaheshkumarblr/FlaskTestingApp
Entry file: FlaskTestingApp/testingFlaskScript.py
Scanned: 2016-10-25 23:18:52.346343
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jrballot/FlaskBlogApp
https://github.com/jrballot/FlaskBlogApp
Entry file: FlaskBlogApp/blog.py
Scanned: 2016-10-25 23:18:53.647926
No vulnerabilities found.


worthlesspenny7/FlaskYoutubeTutorial
https://github.com/worthlesspenny7/FlaskYoutubeTutorial
Entry file: FlaskYoutubeTutorial/application.py
Scanned: 2016-10-25 23:18:57.569543
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskYoutubeTutorial/lib/python2.7/sre_compile.py

joyzhaoyang/FlaskDirectUploader
https://github.com/joyzhaoyang/FlaskDirectUploader
Entry file: FlaskDirectUploader/application.py
Scanned: 2016-10-25 23:18:59.266086
No vulnerabilities found.


apiarian/RPi-GPIO-flask
https://github.com/apiarian/RPi-GPIO-flask
Entry file: RPi-GPIO-flask/server.py
Scanned: 2016-10-25 23:19:00.605769
No vulnerabilities found.


IvanBodnar/fromzero_flask_blog
https://github.com/IvanBodnar/fromzero_flask_blog
Entry file: fromzero_flask_blog/__init__.py
Scanned: 2016-10-25 23:19:02.348710
Vulnerability 1:
File: fromzero_flask_blog/author/views.py
 > User input at line 27, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: fromzero_flask_blog/author/views.py
	 > Line 31: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
	File: fromzero_flask_blog/author/views.py
	 > Line 37: ret_MAYBE_FUNCTION_NAME = render_template('author/login.html',form=form, error=error)
File: fromzero_flask_blog/author/views.py
 > reaches line 29, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 2:
File: fromzero_flask_blog/blog/views.py
 > User input at line 100, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: fromzero_flask_blog/blog/views.py
	 > Line 102: slug = slugify(title)
	File: fromzero_flask_blog/blog/views.py
	 > Line 103: post = Post(blog, author, title, body, category, filename, slug)
	File: fromzero_flask_blog/blog/views.py
	 > Line 110: ret_MAYBE_FUNCTION_NAME = render_template('blog/post.html',form=form, action='new')
File: fromzero_flask_blog/blog/views.py
 > reaches line 108, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('article',slug=slug))

Vulnerability 3:
File: fromzero_flask_blog/blog/views.py
 > User input at line 100, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: fromzero_flask_blog/blog/views.py
	 > Line 102: slug = slugify(title)
	File: fromzero_flask_blog/blog/views.py
	 > Line 103: post = Post(blog, author, title, body, category, filename, slug)
	File: fromzero_flask_blog/blog/views.py
	 > Line 110: ret_MAYBE_FUNCTION_NAME = render_template('blog/post.html',form=form, action='new')
File: fromzero_flask_blog/blog/views.py
 > reaches line 108, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('article',slug=slug))



alexarnautu/simple-flask-blog
https://github.com/alexarnautu/simple-flask-blog
Entry file: simple-flask-blog/blog.py
Scanned: 2016-10-25 23:19:04.078496
No vulnerabilities found.


mhgit1/PythonFlask_oma
https://github.com/mhgit1/PythonFlask_oma
Entry file: PythonFlask_oma/app/__init__.py
Scanned: 2016-10-25 23:19:11.553437
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

MuriloFerraz/intel_edison_flask
https://github.com/MuriloFerraz/intel_edison_flask
Entry file: intel_edison_flask/flask_example/contole.py
Scanned: 2016-10-25 23:19:13.069146
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

bernaerdik/Flask_on_CF
https://github.com/bernaerdik/Flask_on_CF
Entry file: Flask_on_CF/hello.py
Scanned: 2016-10-25 23:19:14.362762
No vulnerabilities found.


astianseb/flask-simple-distributed-applicaiton
https://github.com/astianseb/flask-simple-distributed-applicaiton
Entry file: flask-simple-distributed-applicaiton/Flasktest/__init__.py
Scanned: 2016-10-25 23:19:15.680546
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tomov/flask-heroku-backend
https://github.com/tomov/flask-heroku-backend
Entry file: flask-heroku-backend/app/__init__.py
Scanned: 2016-10-25 23:19:17.068501
No vulnerabilities found.


knoxilla/web-flask-dockerized
https://github.com/knoxilla/web-flask-dockerized
Entry file: web-flask-dockerized/app.py
Scanned: 2016-10-25 23:19:18.364511
No vulnerabilities found.


akaak/flask-mega-tutorial
https://github.com/akaak/flask-mega-tutorial
Entry file: flask-mega-tutorial/part-iii-forms/app.py
Scanned: 2016-10-25 23:19:20.013795
No vulnerabilities found.


thechad12/Flask-Item-Catalog
https://github.com/thechad12/Flask-Item-Catalog
Entry file: Flask-Item-Catalog/application.py
Scanned: 2016-10-25 23:19:21.829619
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

javicacheiro/rest_api_flask
https://github.com/javicacheiro/rest_api_flask
Entry file: rest_api_flask/rest/app/__init__.py
Scanned: 2016-10-25 23:19:23.740283
No vulnerabilities found.


florenceloi/flask-intro-redo
https://github.com/florenceloi/flask-intro-redo
Entry file: flask-intro-redo/nice.py
Scanned: 2016-10-25 23:19:35.575331
No vulnerabilities found.


eric-boone/python-flask-round1
https://github.com/eric-boone/python-flask-round1
Entry file: python-flask-round1/app/__init__.py
Scanned: 2016-10-25 23:19:37.972896
No vulnerabilities found.


playgrdstar/flask-hello-world
https://github.com/playgrdstar/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:19:39.041943
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

iceskel/flask-restful-api
https://github.com/iceskel/flask-restful-api
Entry file: flask-restful-api/api.py
Scanned: 2016-10-25 23:19:41.457333
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

apiaas/gae-flask-base
https://github.com/apiaas/gae-flask-base
Entry file: gae-flask-base/src/main.py
Scanned: 2016-10-25 23:19:44.272487
No vulnerabilities found.


ddrsmile/flask-taskr-with-blueprint
https://github.com/ddrsmile/flask-taskr-with-blueprint
Entry file: flask-taskr-with-blueprint/project/__init__.py
Scanned: 2016-10-25 23:19:45.877655
No vulnerabilities found.


austinbrovick/flask-book_review_website
https://github.com/austinbrovick/flask-book_review_website
Entry file: flask-book_review_website/app/models/User.py
Scanned: 2016-10-25 23:19:47.327127
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

oscarvazquez/flask_mysql_migrations
https://github.com/oscarvazquez/flask_mysql_migrations
Entry file: None
Scanned: 2016-10-25 23:19:50.873158
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bethesdamd/python_flask_pharma
https://github.com/bethesdamd/python_flask_pharma
Entry file: python_flask_pharma/app.py
Scanned: 2016-10-25 23:19:52.853090
No vulnerabilities found.


billdwalters/Flask
https://github.com/billdwalters/Flask
Entry file: None
Scanned: 2016-10-25 23:19:54.884694
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rlsharpton/flask
https://github.com/rlsharpton/flask
Entry file: None
Scanned: 2016-10-25 23:19:55.396725
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ccapudev/flask
https://github.com/ccapudev/flask
Entry file: None
Scanned: 2016-10-25 23:19:58.458974
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hezx/flask
https://github.com/hezx/flask
Entry file: None
Scanned: 2016-10-25 23:19:59.993110
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

its-dirg/Flask-pyoidc
https://github.com/its-dirg/Flask-pyoidc
Entry file: Flask-pyoidc/tests/test_flask_pyoidc.py
Scanned: 2016-10-25 23:20:03.080923
No vulnerabilities found.


NJIT-SIG-WEBDEV/flask-intro
https://github.com/NJIT-SIG-WEBDEV/flask-intro
Entry file: flask-intro/Session1/app.py
Scanned: 2016-10-25 23:20:04.526181
No vulnerabilities found.


KDmytro/flasktaskr
https://github.com/KDmytro/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:20:05.105708
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dreamtiger2016/flaskr
https://github.com/dreamtiger2016/flaskr
Entry file: None
Scanned: 2016-10-25 23:20:12.672105
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dreamtiger2016/flaskr.

karanj112294/flasktutorial
https://github.com/karanj112294/flasktutorial
Entry file: None
Scanned: 2016-10-25 23:20:14.192597
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/karanj112294/flasktutorial.

chadelder/flasktaskr
https://github.com/chadelder/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:20:15.704239
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jocelynaladin/flaskworkspace
https://github.com/jocelynaladin/flaskworkspace
Entry file: flaskworkspace/__init__.py
Scanned: 2016-10-25 23:20:21.123720
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

davetromp/flasksqlapi
https://github.com/davetromp/flasksqlapi
Entry file: flasksqlapi/runapi.py
Scanned: 2016-10-25 23:20:22.697295
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

xu00wei/flasky
https://github.com/xu00wei/flasky
Entry file: None
Scanned: 2016-10-25 23:20:23.210569
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zzclynn/flaskr
https://github.com/zzclynn/flaskr
Entry file: None
Scanned: 2016-10-25 23:20:23.724980
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zzclynn/flaskr.

psykos/flaskloginskeleton
https://github.com/psykos/flaskloginskeleton
Entry file: flaskloginskeleton/app/__init__.py
Scanned: 2016-10-25 23:20:25.079028
No vulnerabilities found.


AndrewGoldstein/flaskapp
https://github.com/AndrewGoldstein/flaskapp
Entry file: None
Scanned: 2016-10-25 23:20:25.590589
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/AndrewGoldstein/flaskapp.

JamesMilnerUK/Loxo
https://github.com/JamesMilnerUK/Loxo
Entry file: Loxo/loxoapi.py
Scanned: 2016-10-25 23:20:42.353657
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

nescode/punchstarter
https://github.com/nescode/punchstarter
Entry file: punchstarter/punchstarter/__init__.py
Scanned: 2016-10-25 23:20:43.789924
Vulnerability 1:
File: punchstarter/punchstarter/__init__.py
 > User input at line 31, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 32: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 2:
File: punchstarter/punchstarter/__init__.py
 > User input at line 36, trigger word "files[": 
	cover_photo = request.files['cover_photo']
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 37: uploaded_image = cloudinary.uploader.upload(cover_photo,crop='limit', width=680, height=550)
	File: punchstarter/punchstarter/__init__.py
	 > Line 43: image_filename = uploaded_image['public_id']
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 3:
File: punchstarter/punchstarter/__init__.py
 > User input at line 45, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 4:
File: punchstarter/punchstarter/__init__.py
 > User input at line 31, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 32: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 5:
File: punchstarter/punchstarter/__init__.py
 > User input at line 36, trigger word "files[": 
	cover_photo = request.files['cover_photo']
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 37: uploaded_image = cloudinary.uploader.upload(cover_photo,crop='limit', width=680, height=550)
	File: punchstarter/punchstarter/__init__.py
	 > Line 43: image_filename = uploaded_image['public_id']
	File: punchstarter/punchstarter/__init__.py
	 > Line 45: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 6:
File: punchstarter/punchstarter/__init__.py
 > User input at line 45, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), image_filename=image_filename, time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: punchstarter/punchstarter/__init__.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: punchstarter/punchstarter/__init__.py
 > reaches line 60, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 7:
File: punchstarter/punchstarter/__init__.py
 > User input at line 64, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('project_detail.html',project=project)

Vulnerability 8:
File: punchstarter/punchstarter/__init__.py
 > User input at line 72, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 77, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('pledge.html',project=project)

Vulnerability 9:
File: punchstarter/punchstarter/__init__.py
 > User input at line 72, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 93, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 10:
File: punchstarter/punchstarter/__init__.py
 > User input at line 72, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: punchstarter/punchstarter/__init__.py
 > reaches line 93, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 11:
File: punchstarter/punchstarter/__init__.py
 > User input at line 97, trigger word "get(": 
	query = request.args.get('q') or ''
File: punchstarter/punchstarter/__init__.py
 > reaches line 98, trigger word "filter(": 
	projects = db.session.query(Project).filter(Project.name.ilike('%' + query + '%') | Project.short_description.ilike('%' + query + '%') | Project.long_description.ilike('%' + query + '%')).all()

Vulnerability 12:
File: punchstarter/punchstarter/__init__.py
 > User input at line 97, trigger word "get(": 
	query = request.args.get('q') or ''
File: punchstarter/punchstarter/__init__.py
 > reaches line 106, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search.html',query_text=query, projects=projects, project_count=project_count)



edwardszczepanski/FlaskApplication
https://github.com/edwardszczepanski/FlaskApplication
Entry file: FlaskApplication/app.py
Scanned: 2016-10-25 23:20:47.208035
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskApplication/venv/lib/python2.7/sre_compile.py

AllyW/flaskyDeb
https://github.com/AllyW/flaskyDeb
Entry file: flaskyDeb/app/__init__.py
Scanned: 2016-10-25 23:20:49.179464
Vulnerability 1:
File: flaskyDeb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskyDeb/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskyDeb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskyDeb/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskyDeb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskyDeb/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskyDeb/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 55: posts = pagination.items
	File: flaskyDeb/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskyDeb/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 45: show_followed = False
	File: flaskyDeb/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskyDeb/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 67: posts = pagination.items
File: flaskyDeb/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flaskyDeb/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flaskyDeb/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 134: comments = pagination.items
	File: flaskyDeb/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskyDeb/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flaskyDeb/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskyDeb/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flaskyDeb/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskyDeb/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flaskyDeb/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 246: comments = pagination.items
File: flaskyDeb/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



chrismontone/flasktaskr2
https://github.com/chrismontone/flasktaskr2
Entry file: flasktaskr2/project/__init__.py
Scanned: 2016-10-25 23:20:50.839800
No vulnerabilities found.


jgabrielfreitas/FlaskFirebase
https://github.com/jgabrielfreitas/FlaskFirebase
Entry file: FlaskFirebase/runner.py
Scanned: 2016-10-25 23:20:52.142579
No vulnerabilities found.


scarabcoder/FlaskSite
https://github.com/scarabcoder/FlaskSite
Entry file: FlaskSite/app/__init__.py
Scanned: 2016-10-25 23:20:53.770298
No vulnerabilities found.


musicalfish/FlaskApp
https://github.com/musicalfish/FlaskApp
Entry file: FlaskApp/FlaskApp/__init__.py
Scanned: 2016-10-25 23:20:55.091360
No vulnerabilities found.


oscarmeanwell/FlaskMusic
https://github.com/oscarmeanwell/FlaskMusic
Entry file: FlaskMusic/app/routesun.py
Scanned: 2016-10-25 23:20:57.879253
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

TwilioDevEd/eta-notifications-flask
https://github.com/TwilioDevEd/eta-notifications-flask
Entry file: eta-notifications-flask/eta_notifications_flask/__init__.py
Scanned: 2016-10-25 23:21:00.992912
Vulnerability 1:
File: eta-notifications-flask/eta_notifications_flask/views.py
 > User input at line 29, trigger word "get(": 
	order = Order.query.get(order_id)
File: eta-notifications-flask/eta_notifications_flask/views.py
 > reaches line 31, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('show.html',order=order)

Vulnerability 2:
File: eta-notifications-flask/eta_notifications_flask/views.py
 > User input at line 63, trigger word "get(": 
	order = Order.query.get(order_id)
File: eta-notifications-flask/eta_notifications_flask/views.py
 > reaches line 67, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('show.html',order=order)



johnsliao/flask-sqlite3-chartjs-toy
https://github.com/johnsliao/flask-sqlite3-chartjs-toy
Entry file: flask-sqlite3-chartjs-toy/flaskr/flaskr.py
Scanned: 2016-10-25 23:21:02.668942
No vulnerabilities found.


QsBBQ/flask_test
https://github.com/QsBBQ/flask_test
Entry file: flask_test/flask_test.py
Scanned: 2016-10-25 23:21:04.024232
Vulnerability 1:
File: flask_test/flask_test.py
 > User input at line 18, trigger word "get(": 
	age = ages.get(user)
File: flask_test/flask_test.py
 > reaches line 19, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('users.html',user=user, age=age)



pedrocarvalhodev/flask-intro
https://github.com/pedrocarvalhodev/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-25 23:21:05.578688
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lawrencexia/flask_notecards
https://github.com/lawrencexia/flask_notecards
Entry file: flask_notecards/app/__init__.py
Scanned: 2016-10-25 23:21:06.931580
No vulnerabilities found.


ameya0909/Flask-Blog
https://github.com/ameya0909/Flask-Blog
Entry file: Flask-Blog/__init__.py
Scanned: 2016-10-25 23:21:08.234087
No vulnerabilities found.


chrismontone/flask-blog
https://github.com/chrismontone/flask-blog
Entry file: None
Scanned: 2016-10-25 23:21:08.762129
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ziggear/wechat-flask
https://github.com/ziggear/wechat-flask
Entry file: wechat-flask/src/myapp.py
Scanned: 2016-10-25 23:21:10.197152
No vulnerabilities found.


yetship/flask-usages
https://github.com/yetship/flask-usages
Entry file: flask-usages/application/__init__.py
Scanned: 2016-10-25 23:21:11.614704
Vulnerability 1:
File: flask-usages/application/controllers/todo.py
 > User input at line 12, trigger word "get(": 
	todo_id = request.args.get('todo_id')
Reassigned in: 
	File: flask-usages/application/controllers/todo.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = jsonify()
File: flask-usages/application/controllers/todo.py
 > reaches line 15, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(todo_idtodo.content)

Vulnerability 2:
File: flask-usages/application/controllers/todo.py
 > User input at line 21, trigger word "get(": 
	todo = Todo(content=data.get('content'))
File: flask-usages/application/controllers/todo.py
 > reaches line 24, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(todo_id=todo.id, content=todo.content)



drmalex07/flask-helloworld
https://github.com/drmalex07/flask-helloworld
Entry file: flask-helloworld/helloworld/app.py
Scanned: 2016-10-25 23:21:13.187911
No vulnerabilities found.


Oracleli/flask-try
https://github.com/Oracleli/flask-try
Entry file: None
Scanned: 2016-10-25 23:21:15.953471
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Oracleli/flask-try.

al4/flask-tokenauth
https://github.com/al4/flask-tokenauth
Entry file: flask-tokenauth/example.py
Scanned: 2016-10-25 23:21:17.253589
No vulnerabilities found.


marcosomma/first_flask
https://github.com/marcosomma/first_flask
Entry file: first_flask/app/__init__.py
Scanned: 2016-10-25 23:21:19.689501
No vulnerabilities found.


miracleluchen/blog-flask
https://github.com/miracleluchen/blog-flask
Entry file: blog-flask/server.py
Scanned: 2016-10-25 23:21:20.996461
No vulnerabilities found.


meyersj/bootstrap-flask
https://github.com/meyersj/bootstrap-flask
Entry file: bootstrap-flask/app/__init__.py
Scanned: 2016-10-25 23:21:23.286920
No vulnerabilities found.


sharma-mohit/flask-mongo
https://github.com/sharma-mohit/flask-mongo
Entry file: flask-mongo/mainapp/__init__.py
Scanned: 2016-10-25 23:21:25.252249
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jarogers095/flask-blog
https://github.com/jarogers095/flask-blog
Entry file: None
Scanned: 2016-10-25 23:21:25.799380
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Jelly-Yu/learningFlask
https://github.com/Jelly-Yu/learningFlask
Entry file: learningFlask/app/__init__.py
Scanned: 2016-10-25 23:21:27.207361
No vulnerabilities found.


doobeh/flask-lister
https://github.com/doobeh/flask-lister
Entry file: flask-lister/app/core.py
Scanned: 2016-10-25 23:21:36.620643
No vulnerabilities found.


ratherbsurfing/flask-cms
https://github.com/ratherbsurfing/flask-cms
Entry file: None
Scanned: 2016-10-25 23:21:49.359354
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

philtrep/Flask-Skeleton
https://github.com/philtrep/Flask-Skeleton
Entry file: None
Scanned: 2016-10-25 23:21:51.211074
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/philtrep/Flask-Skeleton.

cynrick/kickstarter-flask
https://github.com/cynrick/kickstarter-flask
Entry file: kickstarter-flask/kickstarter/__init__.py
Scanned: 2016-10-25 23:21:52.629108
Vulnerability 1:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 29, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 30: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 32: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), time_start=now, time_end=time_end, time_created=now)
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 46, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 2:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 32, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 46, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 3:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 29, trigger word "get(": 
	time_end = request.form.get('funding_end_date')
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 30: time_end = datetime.datetime.strptime(time_end, '%Y-%m-%d')
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 32: new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), time_start=now, time_end=time_end, time_created=now)
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 46, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 4:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 32, trigger word "get(": 
	new_project = Project(member_id=1, name=request.form.get('project_name'), short_description=request.form.get('short_description'), long_description=request.form.get('long_description'), goal_amount=request.form.get('funding_goal'), time_start=now, time_end=time_end, time_created=now)
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 46, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=new_project.id))

Vulnerability 5:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 50, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 55, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('project_detail.html',project=project)

Vulnerability 6:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 59, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 69: new_pledge = Pledge(member_id=guest_pledgor.id, project_id=project.id, amount=request.form.get('amount'), time_created=datetime.datetime.now())
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 65, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('pledge.html',project=project)

Vulnerability 7:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 59, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 69: new_pledge = Pledge(member_id=guest_pledgor.id, project_id=project.id, amount=request.form.get('amount'), time_created=datetime.datetime.now())
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 79, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 8:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 59, trigger word "get(": 
	project = db.session.query(Project).get(project_id)
Reassigned in: 
	File: kickstarter-flask/kickstarter/__init__.py
	 > Line 69: new_pledge = Pledge(member_id=guest_pledgor.id, project_id=project.id, amount=request.form.get('amount'), time_created=datetime.datetime.now())
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 79, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('project_detail',project_id=project.id))

Vulnerability 9:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 83, trigger word "get(": 
	query = request.args.get('q') or ''
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 84, trigger word "filter(": 
	projects = db.session.query(Project).filter(Project.name.ilike('%' + query + '%') | Project.short_description.ilike('%' + query + '%') | Project.long_description.ilike('%' + query + '%')).all()

Vulnerability 10:
File: kickstarter-flask/kickstarter/__init__.py
 > User input at line 83, trigger word "get(": 
	query = request.args.get('q') or ''
File: kickstarter-flask/kickstarter/__init__.py
 > reaches line 92, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search.html',query_text=query, projects=projects, project_count=project_count)



kessiacastro/flask-blog
https://github.com/kessiacastro/flask-blog
Entry file: None
Scanned: 2016-10-25 23:21:53.167171
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rjturek/flask-etf
https://github.com/rjturek/flask-etf
Entry file: flask-etf/flask_etf_main.py
Scanned: 2016-10-25 23:21:54.448142
No vulnerabilities found.


worthlesspenny7/tumblelogFlask
https://github.com/worthlesspenny7/tumblelogFlask
Entry file: tumblelogFlask/__init__.py
Scanned: 2016-10-25 23:21:55.756823
No vulnerabilities found.


axontrust/alexa-flask
https://github.com/axontrust/alexa-flask
Entry file: alexa-flask/app/__init__.py
Scanned: 2016-10-25 23:21:57.056707
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

asjedh/flask_tutorial
https://github.com/asjedh/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:21:57.625126
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/asjedh/flask_tutorial.

robb216/MyFlask
https://github.com/robb216/MyFlask
Entry file: MyFlask/MyFlask.py
Scanned: 2016-10-25 23:22:00.072074
No vulnerabilities found.


rogerpence/flask-blueprint
https://github.com/rogerpence/flask-blueprint
Entry file: flask-blueprint/application/__init__.py
Scanned: 2016-10-25 23:22:02.794734
No vulnerabilities found.


androidzhibinw/flask-bootstrap
https://github.com/androidzhibinw/flask-bootstrap
Entry file: flask-bootstrap/app/__init__.py
Scanned: 2016-10-25 23:22:04.489653
No vulnerabilities found.


ytanno/PlotFlask
https://github.com/ytanno/PlotFlask
Entry file: PlotFlask/FlaskTest1/FlaskTest1/__init__.py
Scanned: 2016-10-25 23:22:11.161986
No vulnerabilities found.


psykos/psilex-flask
https://github.com/psykos/psilex-flask
Entry file: psilex-flask/app/__init__.py
Scanned: 2016-10-25 23:22:12.600346
No vulnerabilities found.


Hank02/flask_example
https://github.com/Hank02/flask_example
Entry file: flask_example/hello_world.py
Scanned: 2016-10-25 23:22:16.390902
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

VerdigrisReader/flask-workshop
https://github.com/VerdigrisReader/flask-workshop
Entry file: flask-workshop/app/__init__.py
Scanned: 2016-10-25 23:22:18.077424
No vulnerabilities found.


rogerpence/flask-skeleton
https://github.com/rogerpence/flask-skeleton
Entry file: flask-skeleton/application/__init__.py
Scanned: 2016-10-25 23:22:19.514526
No vulnerabilities found.


rodcox89/FlaskDynamoStarterKit
https://github.com/rodcox89/FlaskDynamoStarterKit
Entry file: FlaskDynamoStarterKit/main.py
Scanned: 2016-10-25 23:22:24.564538
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskDynamoStarterKit/venv/lib/python2.7/sre_compile.py

pulysak/FlaskServer-Tests
https://github.com/pulysak/FlaskServer-Tests
Entry file: FlaskServer-Tests/server.py
Scanned: 2016-10-25 23:22:28.859536
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskServer-Tests/flask_env/lib/python2.7/sre_compile.py

rbtoner/FlaskWebApp
https://github.com/rbtoner/FlaskWebApp
Entry file: FlaskWebApp/FanGuardFlask/__init__.py
Scanned: 2016-10-25 23:22:30.997707
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

worthlesspenny7/FlaskYoutubeTutorial
https://github.com/worthlesspenny7/FlaskYoutubeTutorial
Entry file: FlaskYoutubeTutorial/application.py
Scanned: 2016-10-25 23:22:34.305130
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskYoutubeTutorial/lib/python2.7/sre_compile.py

MGago/flaskBasicApp1
https://github.com/MGago/flaskBasicApp1
Entry file: flaskBasicApp1/app/__init__.py
Scanned: 2016-10-25 23:22:42.819224
No vulnerabilities found.


skpdvidby0/Flask-Python-App
https://github.com/skpdvidby0/Flask-Python-App
Entry file: Flask-Python-App/flaskapp.py
Scanned: 2016-10-25 23:22:46.054431
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask-Python-App/virtenv/lib/python2.7/sre_compile.py

sindhus/flask-mega-tutorial
https://github.com/sindhus/flask-mega-tutorial
Entry file: None
Scanned: 2016-10-25 23:22:48.342250
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sindhus/flask-mega-tutorial.

mbreisch/real-python-flask-bdd
https://github.com/mbreisch/real-python-flask-bdd
Entry file: real-python-flask-bdd/flaskr.py
Scanned: 2016-10-25 23:22:50.172043
No vulnerabilities found.


MuriloFerraz/intel_edison_flask
https://github.com/MuriloFerraz/intel_edison_flask
Entry file: intel_edison_flask/flask_example/contole.py
Scanned: 2016-10-25 23:22:51.570868
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

PiyushGoyal443/studentLogin_API_Flask
https://github.com/PiyushGoyal443/studentLogin_API_Flask
Entry file: studentLogin_API_Flask/server.py
Scanned: 2016-10-25 23:22:53.480265
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

GertjanvanhetHof/helloworld_with_flask
https://github.com/GertjanvanhetHof/helloworld_with_flask
Entry file: helloworld_with_flask/mypython.py
Scanned: 2016-10-25 23:22:54.806519
No vulnerabilities found.


taromurao/flask-python-logger-experiment
https://github.com/taromurao/flask-python-logger-experiment
Entry file: flask-python-logger-experiment/app.py
Scanned: 2016-10-25 23:22:56.105054
No vulnerabilities found.


mikicaivosevic/flask-simple-todo
https://github.com/mikicaivosevic/flask-simple-todo
Entry file: flask-simple-todo/app.py
Scanned: 2016-10-25 23:22:57.342807
No vulnerabilities found.


KDmytro/flask-hello-world
https://github.com/KDmytro/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:22:57.881971
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bepetersn/flask-permissions-ex
https://github.com/bepetersn/flask-permissions-ex
Entry file: flask-permissions-ex/ex/__init__.py
Scanned: 2016-10-25 23:22:59.844703
No vulnerabilities found.


EricSchles/db_migrations_flask
https://github.com/EricSchles/db_migrations_flask
Entry file: db_migrations_flask/app/__init__.py
Scanned: 2016-10-25 23:23:02.243067
No vulnerabilities found.


yyssjj33/flask-menu-application
https://github.com/yyssjj33/flask-menu-application
Entry file: flask-menu-application/project.py
Scanned: 2016-10-25 23:23:03.708857
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

androidzhibinw/flask-app-builder-example
https://github.com/androidzhibinw/flask-app-builder-example
Entry file: flask-app-builder-example/myapp/app/__init__.py
Scanned: 2016-10-25 23:23:05.597806
No vulnerabilities found.


jmcevoy1984/Flask-Restful-Tutorial
https://github.com/jmcevoy1984/Flask-Restful-Tutorial
Entry file: Flask-Restful-Tutorial/app.py
Scanned: 2016-10-25 23:23:06.924535
No vulnerabilities found.


kessiacastro/flask-hello-world
https://github.com/kessiacastro/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:23:07.529510
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tim1978/flask-hello-world
https://github.com/tim1978/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:23:12.067859
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jigen7/python_flask_tutorial
https://github.com/jigen7/python_flask_tutorial
Entry file: python_flask_tutorial/app/__init__.py
Scanned: 2016-10-25 23:23:20.022458
No vulnerabilities found.


danieltl/python_flask_final
https://github.com/danieltl/python_flask_final
Entry file: python_flask_final/application.py
Scanned: 2016-10-25 23:23:21.462480
No vulnerabilities found.


devizier/flask-hello-world
https://github.com/devizier/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:23:22.003281
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tomov/flask-location-survey-psych
https://github.com/tomov/flask-location-survey-psych
Entry file: flask-location-survey-psych/app/__init__.py
Scanned: 2016-10-25 23:23:23.418045
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

rakou1986/flask-mvt-min
https://github.com/rakou1986/flask-mvt-min
Entry file: flask-mvt-min/webapp/app.py
Scanned: 2016-10-25 23:23:24.698771
No vulnerabilities found.


mbreisch/real-python-reverse-flask
https://github.com/mbreisch/real-python-reverse-flask
Entry file: None
Scanned: 2016-10-25 23:23:26.013491
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mbreisch/real-python-reverse-flask.

jeet4320/PythonFlask-IBMBluemix
https://github.com/jeet4320/PythonFlask-IBMBluemix
Entry file: PythonFlask-IBMBluemix/welcome.py
Scanned: 2016-10-25 23:23:33.120885
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

junniepat/Python-flask-app
https://github.com/junniepat/Python-flask-app
Entry file: Python-flask-app/app.py
Scanned: 2016-10-25 23:23:34.501674
No vulnerabilities found.


Kwpolska/flask-demo-app
https://github.com/Kwpolska/flask-demo-app
Entry file: flask-demo-app/flaskapp.py
Scanned: 2016-10-25 23:23:35.799200
No vulnerabilities found.


tiangolo/uwsgi-nginx-flask-docker
https://github.com/tiangolo/uwsgi-nginx-flask-docker
Entry file: uwsgi-nginx-flask-docker/example-flask-index-upload/app/main.py
Scanned: 2016-10-25 23:23:48.157201
No vulnerabilities found.


chrisvasey/flask
https://github.com/chrisvasey/flask
Entry file: None
Scanned: 2016-10-25 23:23:49.172727
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bobdorff/flask
https://github.com/bobdorff/flask
Entry file: None
Scanned: 2016-10-25 23:23:49.694584
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rlsharpton/flask
https://github.com/rlsharpton/flask
Entry file: None
Scanned: 2016-10-25 23:23:51.235023
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wildjan/Flask
https://github.com/wildjan/Flask
Entry file: None
Scanned: 2016-10-25 23:23:52.830044
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

smltc/Flask
https://github.com/smltc/Flask
Entry file: None
Scanned: 2016-10-25 23:23:54.350825
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mikelkl/flasky
https://github.com/mikelkl/flasky
Entry file: None
Scanned: 2016-10-25 23:23:55.862088
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

besimaltnok/Flask-Examples
https://github.com/besimaltnok/Flask-Examples
Entry file: Flask-Examples/fileupload.py
Scanned: 2016-10-25 23:23:58.782713
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

luo-jialin/flask-
https://github.com/luo-jialin/flask-
Entry file: flask-/flaskr.py
Scanned: 2016-10-25 23:24:00.198973
No vulnerabilities found.


MLH/my-mlh-flask-example
https://github.com/MLH/my-mlh-flask-example
Entry file: my-mlh-flask-example/app.py
Scanned: 2016-10-25 23:24:02.405295
No vulnerabilities found.


ubbochum/hb2_flask
https://github.com/ubbochum/hb2_flask
Entry file: hb2_flask/hb2_flask.py
Scanned: 2016-10-25 23:24:04.758101
Vulnerability 1:
File: hb2_flask/hb2_flask.py
 > User input at line 362, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 369: index_solr = Solr(start=page - 1 * 10, query=current_user.email, facet='false')
	File: hb2_flask/hb2_flask.py
	 > Line 372: records = index_solr.results
	File: hb2_flask/hb2_flask.py
	 > Line 376: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 379: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 361: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 363: records = []
	File: hb2_flask/hb2_flask.py
	 > Line 365: index_solr = ''
	File: hb2_flask/hb2_flask.py
	 > Line 366: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 380, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',header=lazy_gettext('Home'), site=theme(request.access_route), numFound=num_found, records=records, pagination=pagination, offset=mystart - 1)

Vulnerability 2:
File: hb2_flask/hb2_flask.py
 > User input at line 416, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 417: duplicates_solr = Solr(start=page - 1 * 10, fquery=['dedupid:[* TO *]'], group='true', group_field='dedupid', group_limit=100, facet='false')
	File: hb2_flask/hb2_flask.py
	 > Line 424: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('duplicate groups'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 427: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 415: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 423: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 428, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('duplicates.html',groups=duplicates_solr.results, pagination=pagination, header=lazy_gettext('Duplicates'), site=theme(request.access_route), offset=mystart - 1)

Vulnerability 3:
File: hb2_flask/hb2_flask.py
 > User input at line 433, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 438: persons_solr = Solr(query=query, start=page - 1 * 10, core='person', json_facet='affiliation''type''field''term''affiliation', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 451: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 454: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 434: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 446, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('persons.html',header=lazy_gettext('Persons'), site=theme(request.access_route), facet_data=persons_solr.facets, results=persons_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, now=datetime.datetime.now())

Vulnerability 4:
File: hb2_flask/hb2_flask.py
 > User input at line 433, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 438: persons_solr = Solr(query=query, start=page - 1 * 10, core='person', json_facet='affiliation''type''field''term''affiliation', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 451: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 454: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 434: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 455, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('persons.html',header=lazy_gettext('Persons'), site=theme(request.access_route), facet_data=persons_solr.facets, results=persons_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, pagination=pagination, now=datetime.datetime.now(), del_redirect='persons')

Vulnerability 5:
File: hb2_flask/hb2_flask.py
 > User input at line 472, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 495: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 496: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 471: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 6:
File: hb2_flask/hb2_flask.py
 > User input at line 474, trigger word "get(": 
	query = request.args.get('q', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 477: query = '*:*'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 7:
File: hb2_flask/hb2_flask.py
 > User input at line 480, trigger word "get(": 
	sorting = request.args.get('sort', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 482: sorting = ''
	File: hb2_flask/hb2_flask.py
	 > Line 484: sorting = 'fdate desc'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 8:
File: hb2_flask/hb2_flask.py
 > User input at line 472, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 495: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 496: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 471: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 9:
File: hb2_flask/hb2_flask.py
 > User input at line 474, trigger word "get(": 
	query = request.args.get('q', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 477: query = '*:*'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 10:
File: hb2_flask/hb2_flask.py
 > User input at line 480, trigger word "get(": 
	sorting = request.args.get('sort', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 482: sorting = ''
	File: hb2_flask/hb2_flask.py
	 > Line 484: sorting = 'fdate desc'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 490, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('show_record',record_id=search_solr.results[0].get('id'), pubtype=search_solr.results[0].get('pubtype')))

Vulnerability 11:
File: hb2_flask/hb2_flask.py
 > User input at line 472, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 495: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 496: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 471: pagination = ''
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 499, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultlist.html',records=search_solr.results, pagination=pagination, facet_data=search_solr.facets, header=lazy_gettext('Resultlist'), target='search', site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery)

Vulnerability 12:
File: hb2_flask/hb2_flask.py
 > User input at line 474, trigger word "get(": 
	query = request.args.get('q', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 477: query = '*:*'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 499, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultlist.html',records=search_solr.results, pagination=pagination, facet_data=search_solr.facets, header=lazy_gettext('Resultlist'), target='search', site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery)

Vulnerability 13:
File: hb2_flask/hb2_flask.py
 > User input at line 480, trigger word "get(": 
	sorting = request.args.get('sort', '')
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 482: sorting = ''
	File: hb2_flask/hb2_flask.py
	 > Line 484: sorting = 'fdate desc'
	File: hb2_flask/hb2_flask.py
	 > Line 486: search_solr = Solr(start=page - 1 * 10, query=query, fquery=filterquery, sort=sorting, json_facet=secrets.SOLR_FACETS)
	File: hb2_flask/hb2_flask.py
	 > Line 493: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 499, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('resultlist.html',records=search_solr.results, pagination=pagination, facet_data=search_solr.facets, header=lazy_gettext('Resultlist'), target='search', site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery)

Vulnerability 14:
File: hb2_flask/hb2_flask.py
 > User input at line 742, trigger word "get(": 
	bio = requests.get('https://pub.orcid.org/%s/orcid-bio/' % orcid_id,headers='Accept''application/json').json()
File: hb2_flask/hb2_flask.py
 > reaches line 744, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('name''%s, %s' % (bio.get('orcid-profile').get('orcid-bio').get('personal-details').get('family-name').get('value'), bio.get('orcid-profile').get('orcid-bio').get('personal-details').get('given-names').get('value')))

Vulnerability 15:
File: hb2_flask/hb2_flask.py
 > User input at line 749, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 787: dashboard_solr = Solr(start=page - 1 * 10, query=query, sort='recordCreationDate asc', json_facet=DASHBOARD_FACETS, fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 795: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 798: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 750: mystart = 0
	File: hb2_flask/hb2_flask.py
	 > Line 791: pagination = ''
File: hb2_flask/hb2_flask.py
 > reaches line 801, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('dashboard.html',records=dashboard_solr.results, facet_data=dashboard_solr.facets, header=lazy_gettext('Dashboard'), site=theme(request.access_route), offset=mystart - 1, query=query, filterquery=filterquery, pagination=pagination, now=datetime.datetime.now(), target='dashboard', del_redirect='dashboard')

Vulnerability 16:
File: hb2_flask/hb2_flask.py
 > User input at line 826, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 827: locked_solr = Solr(core='hb2', fquery=['locked:true', 'recordChangeDate:[* TO NOW-1HOUR]'], sort='recordChangeDate asc', start=page - 1 * 10)
	File: hb2_flask/hb2_flask.py
	 > Line 831: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('records'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 834: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 824: ret_MAYBE_FUNCTION_NAME = redirect(url_for('homepage'))
File: hb2_flask/hb2_flask.py
 > reaches line 841, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('superadmin.html',locked_records=locked_solr.results, header=lazy_gettext('Superadmin Board'), import_records=solr_dumps.results, offset=mystart - 1, pagination=pagination, del_redirect='superadmin', form=form, site=theme(request.access_route))

Vulnerability 17:
File: hb2_flask/hb2_flask.py
 > User input at line 912, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 917: orgas_solr = Solr(query=query, start=page - 1 * 10, core='organisation', json_facet='destatis_id''type''field''term''destatis_id', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 929: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Organisational Units'))
	File: hb2_flask/hb2_flask.py
	 > Line 932: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 913: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 925, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('orgas.html',header=lazy_gettext('Organisations'), site=theme(request.access_route), facet_data=orgas_solr.facets, results=orgas_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, now=datetime.datetime.now())

Vulnerability 18:
File: hb2_flask/hb2_flask.py
 > User input at line 912, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 917: orgas_solr = Solr(query=query, start=page - 1 * 10, core='organisation', json_facet='destatis_id''type''field''term''destatis_id', fquery=filterquery)
	File: hb2_flask/hb2_flask.py
	 > Line 929: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('titles'), search_msg=lazy_gettext('Showing {start} to {end} of {found} Organisational Units'))
	File: hb2_flask/hb2_flask.py
	 > Line 932: mystart = 1 + pagination.page - 1 * pagination.per_page
	File: hb2_flask/hb2_flask.py
	 > Line 913: mystart = 0
File: hb2_flask/hb2_flask.py
 > reaches line 933, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('orgas.html',header=lazy_gettext('Organisations'), site=theme(request.access_route), facet_data=orgas_solr.facets, results=orgas_solr.results, offset=mystart - 1, query=query, filterquery=filterquery, pagination=pagination, now=datetime.datetime.now())

Vulnerability 19:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1110, trigger word "replace(": 
	solr_data.setdefault('recordCreationDate', form.data.get(field).strip().replace(' ', 'T') + 'Z')

Vulnerability 20:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1112, trigger word "replace(": 
	solr_data.setdefault('recordChangeDate', form.data.get(field).strip().replace(' ', 'T') + 'Z')

Vulnerability 21:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1141, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('New Record'), site=theme(request.access_route), action='create', pubtype=pubtype)

Vulnerability 22:
File: hb2_flask/hb2_flask.py
 > User input at line 1095, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1103: wtf = json.dumps(form.data)
	File: hb2_flask/hb2_flask.py
	 > Line 1144: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1125: ret_MAYBE_FUNCTION_NAME = jsonify('status'200)
File: hb2_flask/hb2_flask.py
 > reaches line 1160, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('New Record'), site=theme(request.access_route), pubtype=pubtype, action='create', record_id=form.id.data)

Vulnerability 23:
File: hb2_flask/hb2_flask.py
 > User input at line 1167, trigger word "get(": 
	is_part_of = show_record_solr.results[0].get('is_part_of')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 24:
File: hb2_flask/hb2_flask.py
 > User input at line 1168, trigger word "get(": 
	has_part = show_record_solr.results[0].get('has_part')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 25:
File: hb2_flask/hb2_flask.py
 > User input at line 1169, trigger word "get(": 
	other_version = show_record_solr.results[0].get('other_version')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 26:
File: hb2_flask/hb2_flask.py
 > User input at line 1171, trigger word "get(": 
	thedata = json.loads(show_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1173: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 27:
File: hb2_flask/hb2_flask.py
 > User input at line 1172, trigger word "get(": 
	locked = show_record_solr.results[0].get('locked')
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 28:
File: hb2_flask/hb2_flask.py
 > User input at line 1173, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1175, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('title'), site=theme(request.access_route), action='retrieve', record_id=record_id, del_redirect='dashboard', pubtype=pubtype, role_map=ROLE_MAP, lang_map=LANGUAGE_MAP, pubtype_map=PUBTYPE2TEXT, subtype_map=SUBTYPE2TEXT, locked=locked, is_part_of=is_part_of, has_part=has_part, other_version=other_version)

Vulnerability 29:
File: hb2_flask/hb2_flask.py
 > User input at line 1189, trigger word "get(": 
	thedata = json.loads(show_person_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1190: form = PersonAdminForm.from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1192, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('name'), site=theme(request.access_route), action='retrieve', record_id=person_id, pubtype='person', del_redirect='persons')

Vulnerability 30:
File: hb2_flask/hb2_flask.py
 > User input at line 1200, trigger word "get(": 
	thedata = json.loads(show_orga_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1201: form = OrgaAdminForm.from_json(thedata)
File: hb2_flask/hb2_flask.py
 > reaches line 1203, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('record.html',record=form, header=form.data.get('pref_label'), site=theme(request.access_route), action='retrieve', record_id=orga_id, pubtype='organisation', del_redirect='organisations')

Vulnerability 31:
File: hb2_flask/hb2_flask.py
 > User input at line 1213, trigger word "get(": 
	thedata = json.loads(edit_orga_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1218: form = OrgaAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1227: ret_MAYBE_FUNCTION_NAME = redirect(url_for('orgas'))
	File: hb2_flask/hb2_flask.py
	 > Line 1216: form = OrgaAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1223, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('linear_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update')

Vulnerability 32:
File: hb2_flask/hb2_flask.py
 > User input at line 1213, trigger word "get(": 
	thedata = json.loads(edit_orga_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1218: form = OrgaAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1227: ret_MAYBE_FUNCTION_NAME = redirect(url_for('orgas'))
	File: hb2_flask/hb2_flask.py
	 > Line 1216: form = OrgaAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1231, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('linear_form.html',form=form, header=lazy_gettext('Edit: %(orga)s',orga=form.data.get('pref_label')), site=theme(request.access_route), action='update', pubtype='organisation')

Vulnerability 33:
File: hb2_flask/hb2_flask.py
 > User input at line 1242, trigger word "get(": 
	thedata = json.loads(edit_person_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1247: form = PersonAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1257: ret_MAYBE_FUNCTION_NAME = redirect(url_for('persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 1245: form = PersonAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1253, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update')

Vulnerability 34:
File: hb2_flask/hb2_flask.py
 > User input at line 1242, trigger word "get(": 
	thedata = json.loads(edit_person_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1247: form = PersonAdminForm.from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1257: ret_MAYBE_FUNCTION_NAME = redirect(url_for('persons'))
	File: hb2_flask/hb2_flask.py
	 > Line 1245: form = PersonAdminForm()
File: hb2_flask/hb2_flask.py
 > reaches line 1261, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(person)s',person=form.data.get('name')), site=theme(request.access_route), action='update', pubtype='person')

Vulnerability 35:
File: hb2_flask/hb2_flask.py
 > User input at line 1286, trigger word "get(": 
	thedata = json.loads(edit_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
File: hb2_flask/hb2_flask.py
 > reaches line 1299, trigger word "flash(": 
	flash(Markup(lazy_gettext('<p><i class="fa fa-exclamation-triangle fa-3x"></i> <h3>The following data are incompatible with this publication type</h3></p>')) + _diff_struct(thedata, form.data), 'error')

Vulnerability 36:
File: hb2_flask/hb2_flask.py
 > User input at line 1289, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1299, trigger word "flash(": 
	flash(Markup(lazy_gettext('<p><i class="fa fa-exclamation-triangle fa-3x"></i> <h3>The following data are incompatible with this publication type</h3></p>')) + _diff_struct(thedata, form.data), 'error')

Vulnerability 37:
File: hb2_flask/hb2_flask.py
 > User input at line 1291, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1299, trigger word "flash(": 
	flash(Markup(lazy_gettext('<p><i class="fa fa-exclamation-triangle fa-3x"></i> <h3>The following data are incompatible with this publication type</h3></p>')) + _diff_struct(thedata, form.data), 'error')

Vulnerability 38:
File: hb2_flask/hb2_flask.py
 > User input at line 1286, trigger word "get(": 
	thedata = json.loads(edit_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
File: hb2_flask/hb2_flask.py
 > reaches line 1310, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype)

Vulnerability 39:
File: hb2_flask/hb2_flask.py
 > User input at line 1289, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1310, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype)

Vulnerability 40:
File: hb2_flask/hb2_flask.py
 > User input at line 1291, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1310, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype)

Vulnerability 41:
File: hb2_flask/hb2_flask.py
 > User input at line 1286, trigger word "get(": 
	thedata = json.loads(edit_record_solr.results[0].get('wtf_json'))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
File: hb2_flask/hb2_flask.py
 > reaches line 1321, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype, record_id=record_id)

Vulnerability 42:
File: hb2_flask/hb2_flask.py
 > User input at line 1289, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype)()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1291: form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1321, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype, record_id=record_id)

Vulnerability 43:
File: hb2_flask/hb2_flask.py
 > User input at line 1291, trigger word "get(": 
	form = PUBTYPE2FORM.get(pubtype).from_json(thedata)
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1289: form = PUBTYPE2FORM.get(pubtype)()
	File: hb2_flask/hb2_flask.py
	 > Line 1316: ret_MAYBE_FUNCTION_NAME = redirect(url_for('dashboard'))
File: hb2_flask/hb2_flask.py
 > reaches line 1321, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('tabbed_form.html',form=form, header=lazy_gettext('Edit: %(title)s',title=form.data.get('title')), site=theme(request.access_route), action='update', pubtype=pubtype, record_id=record_id)

Vulnerability 44:
File: hb2_flask/hb2_flask.py
 > User input at line 1491, trigger word "form[": 
	target = request.form['next']
File: hb2_flask/hb2_flask.py
 > reaches line 1493, trigger word "url_for(": 
	target = url_for(endpoint,values)

Vulnerability 45:
File: hb2_flask/hb2_flask.py
 > User input at line 1491, trigger word "form[": 
	target = request.form['next']
File: hb2_flask/hb2_flask.py
 > reaches line 1494, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(target)

Vulnerability 46:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 47:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 48:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 49:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1532, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 50:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 51:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 52:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 53:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1565, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('homepage'))

Vulnerability 54:
File: hb2_flask/hb2_flask.py
 > User input at line 1505, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1571: next = get_redirect_target()
File: hb2_flask/hb2_flask.py
 > reaches line 1573, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form, header='Sign In', next=next, site=theme(request.access_route))

Vulnerability 55:
File: hb2_flask/hb2_flask.py
 > User input at line 1571, trigger word "get(": 
	next = get_redirect_target()
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1505: next = get_redirect_target()
	File: hb2_flask/hb2_flask.py
	 > Line 1535: ret_MAYBE_FUNCTION_NAME = redirect('login')
	File: hb2_flask/hb2_flask.py
	 > Line 1568: ret_MAYBE_FUNCTION_NAME = redirect('login')
File: hb2_flask/hb2_flask.py
 > reaches line 1573, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form, header='Sign In', next=next, site=theme(request.access_route))

Vulnerability 56:
File: hb2_flask/hb2_flask.py
 > User input at line 1627, trigger word "get(": 
	page = int(request.args.get('page', 1))
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1628: solr_dumps = Solr(core='hb2_users', query='id:*.json', facet='false', start=page - 1 * 10)
	File: hb2_flask/hb2_flask.py
	 > Line 1631: pagination = Pagination(page=page, total=num_found, found=num_found, bs_version=3, search=True, record_name=lazy_gettext('dumps'), search_msg=lazy_gettext('Showing {start} to {end} of {found} {record_name}'))
	File: hb2_flask/hb2_flask.py
	 > Line 1634: mystart = 1 + pagination.page - 1 * pagination.per_page
File: hb2_flask/hb2_flask.py
 > reaches line 1636, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('solr_dumps.html',records=solr_dumps.results, offset=mystart - 1, pagination=pagination, header=lazy_gettext('Import Dump'), del_redirect='import/solr_dumps', form=form)

Vulnerability 57:
File: hb2_flask/hb2_flask.py
 > User input at line 1652, trigger word "get(": 
	thedata = json.loads(import_solr.results[0].get('dump')[0])
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1645: thedata = ''
	File: hb2_flask/hb2_flask.py
	 > Line 1656: thedata = json.loads(form.file.data.stream.read())
File: hb2_flask/hb2_flask.py
 > reaches line 1665, trigger word "flash(": 
	flash('%s records imported!' % len(thedata), 'success')

Vulnerability 58:
File: hb2_flask/hb2_flask.py
 > User input at line 1656, trigger word ".data": 
	thedata = json.loads(form.file.data.stream.read())
Reassigned in: 
	File: hb2_flask/hb2_flask.py
	 > Line 1645: thedata = ''
	File: hb2_flask/hb2_flask.py
	 > Line 1652: thedata = json.loads(import_solr.results[0].get('dump')[0])
File: hb2_flask/hb2_flask.py
 > reaches line 1665, trigger word "flash(": 
	flash('%s records imported!' % len(thedata), 'success')

Vulnerability 59:
File: hb2_flask/processors/mods_parser.py
 > User input at line 123, trigger word "get(": 
	pnd = name.attrib.get('valueURI').replace('http://d-nb.info/gnd/', '')
Reassigned in: 
	File: hb2_flask/processors/mods_parser.py
	 > Line 120: pnd = ''
File: hb2_flask/processors/mods_parser.py
 > reaches line 123, trigger word "replace(": 
	pnd = name.attrib.get('valueURI').replace('http://d-nb.info/gnd/', '')



Vertabelo/flask-oauth-demo-app
https://github.com/Vertabelo/flask-oauth-demo-app
Entry file: flask-oauth-demo-app/models.py
Scanned: 2016-10-25 23:24:07.407556
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

waharnum/inlibraries.com
https://github.com/waharnum/inlibraries.com
Entry file: None
Scanned: 2016-10-25 23:24:07.951437
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

billyfung/flask_shortener
https://github.com/billyfung/flask_shortener
Entry file: flask_shortener/app.py
Scanned: 2016-10-25 23:24:09.369681
Vulnerability 1:
File: flask_shortener/app.py
 > User input at line 41, trigger word "form[": 
	url_to_parse = request.form['input-url']
Reassigned in: 
	File: flask_shortener/app.py
	 > Line 42: parts = urlparse.urlparse(url_to_parse)
	File: flask_shortener/app.py
	 > Line 47: short_id = shorten(url_to_parse)
File: flask_shortener/app.py
 > reaches line 48, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',short_id=short_id)

Vulnerability 2:
File: flask_shortener/app.py
 > User input at line 52, trigger word "get(": 
	link_target = redis.get('url-target:' + short_id)
File: flask_shortener/app.py
 > reaches line 56, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(link_target)

Vulnerability 3:
File: flask_shortener/app.py
 > User input at line 60, trigger word "get(": 
	link_target = redis.get('url-target:' + short_id)
File: flask_shortener/app.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('details.html',short_id=short_id, click_count=click_count, link_target=link_target)

Vulnerability 4:
File: flask_shortener/app.py
 > User input at line 63, trigger word "get(": 
	click_count = int(redis.get('click-count:' + short_id) or 0)
File: flask_shortener/app.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('details.html',short_id=short_id, click_count=click_count, link_target=link_target)



jarogers095/flasktaskr
https://github.com/jarogers095/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:24:10.415966
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Anddor/flaskr
https://github.com/Anddor/flaskr
Entry file: None
Scanned: 2016-10-25 23:24:14.444205
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Anddor/flaskr.

hammygoonan/Flaskify
https://github.com/hammygoonan/Flaskify
Entry file: Flaskify/project/__init__.py
Scanned: 2016-10-25 23:24:21.990556
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

anujspatel/flaskr
https://github.com/anujspatel/flaskr
Entry file: None
Scanned: 2016-10-25 23:24:22.523946
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/anujspatel/flaskr.

williamcaban/flaskrcloud
https://github.com/williamcaban/flaskrcloud
Entry file: flaskrcloud/flaskr.py
Scanned: 2016-10-25 23:24:23.930061
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

crazyqipython/flaskdemo
https://github.com/crazyqipython/flaskdemo
Entry file: None
Scanned: 2016-10-25 23:24:24.471372
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pythondude325/flaskr
https://github.com/pythondude325/flaskr
Entry file: None
Scanned: 2016-10-25 23:24:25.995501
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pythondude325/flaskr.

fenske/flasky
https://github.com/fenske/flasky
Entry file: None
Scanned: 2016-10-25 23:24:30.507509
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fakegit/flasky
https://github.com/fakegit/flasky
Entry file: None
Scanned: 2016-10-25 23:24:34.019401
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zzclynn/flaskr
https://github.com/zzclynn/flaskr
Entry file: None
Scanned: 2016-10-25 23:24:45.052942
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zzclynn/flaskr.

johnpwillman/flasktest
https://github.com/johnpwillman/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 23:24:48.351511
No vulnerabilities found.


scottmarinoff/Flasky
https://github.com/scottmarinoff/Flasky
Entry file: None
Scanned: 2016-10-25 23:24:48.875448
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/scottmarinoff/Flasky.

JamesMilnerUK/Loxo
https://github.com/JamesMilnerUK/Loxo
Entry file: Loxo/loxoapi.py
Scanned: 2016-10-25 23:24:52.845371
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhou18520786640/FlaskWeb
https://github.com/zhou18520786640/FlaskWeb
Entry file: FlaskWeb/hello.py
Scanned: 2016-10-25 23:24:56.025219
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskWeb/venv/lib/python2.7/sre_compile.py

LaRueGT/FlaskBlog
https://github.com/LaRueGT/FlaskBlog
Entry file: FlaskBlog/blog.py
Scanned: 2016-10-25 23:24:57.473596
No vulnerabilities found.


ethanphunter/FlaskExperiment
https://github.com/ethanphunter/FlaskExperiment
Entry file: FlaskExperiment/main.py
Scanned: 2016-10-25 23:24:59.090318
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

rkholoniuk/FlaskAPI
https://github.com/rkholoniuk/FlaskAPI
Entry file: None
Scanned: 2016-10-25 23:25:00.395183
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rkholoniuk/FlaskAPI.

AllyW/flaskyDeb
https://github.com/AllyW/flaskyDeb
Entry file: flaskyDeb/app/__init__.py
Scanned: 2016-10-25 23:25:02.423863
Vulnerability 1:
File: flaskyDeb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskyDeb/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flaskyDeb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskyDeb/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flaskyDeb/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flaskyDeb/app/api_1_0/posts.py
	 > Line 19: next = None
File: flaskyDeb/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 23: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flaskyDeb/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flaskyDeb/app/api_1_0/users.py
	 > Line 45: next = None
File: flaskyDeb/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 18: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flaskyDeb/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flaskyDeb/app/api_1_0/comments.py
	 > Line 46: next = None
File: flaskyDeb/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flaskyDeb/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 55: posts = pagination.items
	File: flaskyDeb/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flaskyDeb/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 45: show_followed = False
	File: flaskyDeb/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flaskyDeb/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 67: posts = pagination.items
File: flaskyDeb/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flaskyDeb/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flaskyDeb/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 134: comments = pagination.items
	File: flaskyDeb/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskyDeb/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flaskyDeb/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskyDeb/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flaskyDeb/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskyDeb/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskyDeb/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flaskyDeb/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskyDeb/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskyDeb/app/main/views.py
	 > Line 246: comments = pagination.items
File: flaskyDeb/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



jmcerv/FlaskTutorial
https://github.com/jmcerv/FlaskTutorial
Entry file: FlaskTutorial/app/__init__.py
Scanned: 2016-10-25 23:25:13.012865
No vulnerabilities found.


asimonia/FlaskJeopardy
https://github.com/asimonia/FlaskJeopardy
Entry file: FlaskJeopardy/app/__init__.py
Scanned: 2016-10-25 23:25:20.823693
Vulnerability 1:
File: FlaskJeopardy/app/main/views.py
 > User input at line 17, trigger word ".data": 
	show_number = form.show_number.data
Reassigned in: 
	File: FlaskJeopardy/app/main/views.py
	 > Line 32: questions = Questionbank.objects(show_number=show_number, current_round='Jeopardy!')
	File: FlaskJeopardy/app/main/views.py
	 > Line 33: init_game = Game(state='playing', show_number=show_number, current_round='Jeopardy!')
	File: FlaskJeopardy/app/main/views.py
	 > Line 12: ret_MAYBE_FUNCTION_NAME = render_template('questions/index.html',form=form)
File: FlaskJeopardy/app/main/views.py
 > reaches line 54, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('questions/game_board.html',game=init_game)



motleytech/flaskPlate
https://github.com/motleytech/flaskPlate
Entry file: flaskPlate/app/app.py
Scanned: 2016-10-25 23:25:22.644251
No vulnerabilities found.


ciricihq/wkhtmltopdf-flask-aas
https://github.com/ciricihq/wkhtmltopdf-flask-aas
Entry file: wkhtmltopdf-flask-aas/app.py
Scanned: 2016-10-25 23:25:24.190998
No vulnerabilities found.


cr8ivecodesmith/save22-flask-course-src
https://github.com/cr8ivecodesmith/save22-flask-course-src
Entry file: save22-flask-course-src/05-combination/app/app.py
Scanned: 2016-10-25 23:25:25.694284
No vulnerabilities found.


johnsliao/flask-sqlite3-chartjs-toy
https://github.com/johnsliao/flask-sqlite3-chartjs-toy
Entry file: flask-sqlite3-chartjs-toy/flaskr/flaskr.py
Scanned: 2016-10-25 23:25:26.991750
No vulnerabilities found.


raticate/flask-tutorial
https://github.com/raticate/flask-tutorial
Entry file: flask-tutorial/app/__init__.py
Scanned: 2016-10-25 23:25:34.230910
No vulnerabilities found.


yetship/flask-usages
https://github.com/yetship/flask-usages
Entry file: flask-usages/application/__init__.py
Scanned: 2016-10-25 23:25:35.666105
Vulnerability 1:
File: flask-usages/application/controllers/todo.py
 > User input at line 12, trigger word "get(": 
	todo_id = request.args.get('todo_id')
Reassigned in: 
	File: flask-usages/application/controllers/todo.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = jsonify()
File: flask-usages/application/controllers/todo.py
 > reaches line 15, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(todo_idtodo.content)

Vulnerability 2:
File: flask-usages/application/controllers/todo.py
 > User input at line 21, trigger word "get(": 
	todo = Todo(content=data.get('content'))
File: flask-usages/application/controllers/todo.py
 > reaches line 24, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(todo_id=todo.id, content=todo.content)



MaximeGir/flask_skeleton
https://github.com/MaximeGir/flask_skeleton
Entry file: None
Scanned: 2016-10-25 23:25:36.992403
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/MaximeGir/flask_skeleton.

josepablob/flask-blog
https://github.com/josepablob/flask-blog
Entry file: None
Scanned: 2016-10-25 23:25:37.531769
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

johnsliao/flask-bp
https://github.com/johnsliao/flask-bp
Entry file: flask-bp/flaskApp.py
Scanned: 2016-10-25 23:25:38.822827
No vulnerabilities found.


devmtnaing/python_flask
https://github.com/devmtnaing/python_flask
Entry file: python_flask/app/__init__.py
Scanned: 2016-10-25 23:25:40.231153
Vulnerability 1:
File: python_flask/app/mod_auth/controllers.py
 > User input at line 30, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: python_flask/app/mod_auth/controllers.py
	 > Line 34: session['user_id'] = user.id
File: python_flask/app/mod_auth/controllers.py
 > reaches line 36, trigger word "flash(": 
	flash('Welcome %s' % user.name)



faraday-effect/spectacle-flask
https://github.com/faraday-effect/spectacle-flask
Entry file: spectacle-flask/app/__init__.py
Scanned: 2016-10-25 23:25:41.654408
No vulnerabilities found.


swkaen/Flask_LED
https://github.com/swkaen/Flask_LED
Entry file: Flask_LED/hello.py
Scanned: 2016-10-25 23:25:42.972098
No vulnerabilities found.


al4/flask-tokenauth
https://github.com/al4/flask-tokenauth
Entry file: flask-tokenauth/example.py
Scanned: 2016-10-25 23:25:44.368938
No vulnerabilities found.


jgoret/flask-dataset
https://github.com/jgoret/flask-dataset
Entry file: flask-dataset/flask_dataset/__init__.py
Scanned: 2016-10-25 23:25:46.159107
No vulnerabilities found.


cnds/flask_web
https://github.com/cnds/flask_web
Entry file: flask_web/app/__init__.py
Scanned: 2016-10-25 23:25:51.330903
Vulnerability 1:
File: flask_web/app/api_1_0/posts.py
 > User input at line 16, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/api_1_0/posts.py
	 > Line 17: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKBLOG_POSTS_PER_PAGE'], error_out=False)
	File: flask_web/app/api_1_0/posts.py
	 > Line 20: posts = pagination.items
	File: flask_web/app/api_1_0/posts.py
	 > Line 21: prev = None
	File: flask_web/app/api_1_0/posts.py
	 > Line 24: next = None
File: flask_web/app/api_1_0/posts.py
 > reaches line 23, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flask_web/app/api_1_0/posts.py
 > User input at line 16, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/api_1_0/posts.py
	 > Line 17: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKBLOG_POSTS_PER_PAGE'], error_out=False)
	File: flask_web/app/api_1_0/posts.py
	 > Line 20: posts = pagination.items
	File: flask_web/app/api_1_0/posts.py
	 > Line 21: prev = None
	File: flask_web/app/api_1_0/posts.py
	 > Line 24: next = None
File: flask_web/app/api_1_0/posts.py
 > reaches line 26, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flask_web/app/api_1_0/posts.py
 > User input at line 16, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/api_1_0/posts.py
	 > Line 17: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKBLOG_POSTS_PER_PAGE'], error_out=False)
	File: flask_web/app/api_1_0/posts.py
	 > Line 20: posts = pagination.items
	File: flask_web/app/api_1_0/posts.py
	 > Line 21: prev = None
	File: flask_web/app/api_1_0/posts.py
	 > Line 24: next = None
File: flask_web/app/api_1_0/posts.py
 > reaches line 27, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flask_web/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/main/views.py
	 > Line 30: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKBLOG_POSTS_PER_PAGE'], error_out=False)
	File: flask_web/app/main/views.py
	 > Line 34: posts = pagination.items
	File: flask_web/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_web/app/main/views.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 5:
File: flask_web/app/main/views.py
 > User input at line 25, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ' '))
Reassigned in: 
	File: flask_web/app/main/views.py
	 > Line 23: show_followed = False
	File: flask_web/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_web/app/main/views.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 6:
File: flask_web/app/main/views.py
 > User input at line 110, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/main/views.py
	 > Line 112: page = (post.comments.count() - 1, current_app.config['FLASKBLOG_COMMENTS_PER_PAGE'] + 1)
	File: flask_web/app/main/views.py
	 > Line 114: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKBLOG_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_web/app/main/views.py
	 > Line 116: comments = pagination.items
	File: flask_web/app/main/views.py
	 > Line 109: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flask_web/app/main/views.py
 > reaches line 117, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 7:
File: flask_web/app/main/views.py
 > User input at line 159, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/main/views.py
	 > Line 160: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKBLOG_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_web/app/main/views.py
	 > Line 162: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask_web/app/main/views.py
	 > Line 158: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_web/app/main/views.py
 > reaches line 164, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 8:
File: flask_web/app/main/views.py
 > User input at line 190, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_web/app/main/views.py
	 > Line 191: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKBLOG_COMMENT_PER_PAGE'], error_out=False)
	File: flask_web/app/main/views.py
	 > Line 194: comments = pagination.items
File: flask_web/app/main/views.py
 > reaches line 195, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



fenfir/flask_test
https://github.com/fenfir/flask_test
Entry file: flask_test/test.py
Scanned: 2016-10-25 23:25:52.636955
No vulnerabilities found.


danjamin/flask-guide
https://github.com/danjamin/flask-guide
Entry file: flask-guide/app/server.py
Scanned: 2016-10-25 23:25:53.945894
No vulnerabilities found.


stevejgoodman/flask-app
https://github.com/stevejgoodman/flask-app
Entry file: flask-app/app.py
Scanned: 2016-10-25 23:25:55.245733
No vulnerabilities found.


devizier/flask-blog
https://github.com/devizier/flask-blog
Entry file: None
Scanned: 2016-10-25 23:25:55.771110
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rafaelgotts/flask_rest
https://github.com/rafaelgotts/flask_rest
Entry file: flask_rest/flask_rest/app.py
Scanned: 2016-10-25 23:25:57.054592
No vulnerabilities found.


Orlandohub/flask-tutorial
https://github.com/Orlandohub/flask-tutorial
Entry file: flask-tutorial/hello-world.py
Scanned: 2016-10-25 23:25:58.348179
No vulnerabilities found.


python-0/flask_blog
https://github.com/python-0/flask_blog
Entry file: flask_blog/app/__init__.py
Scanned: 2016-10-25 23:25:59.909674
No vulnerabilities found.


bdero/flask-sleep
https://github.com/bdero/flask-sleep
Entry file: flask-sleep/flasksleep.py
Scanned: 2016-10-25 23:26:01.304697
No vulnerabilities found.


miracleluchen/blog-flask
https://github.com/miracleluchen/blog-flask
Entry file: blog-flask/server.py
Scanned: 2016-10-25 23:26:02.890202
No vulnerabilities found.


IvanBodnar/flask_relevamientos
https://github.com/IvanBodnar/flask_relevamientos
Entry file: flask_relevamientos/app.py
Scanned: 2016-10-25 23:26:04.533997
No vulnerabilities found.


ravivooda/flask-server
https://github.com/ravivooda/flask-server
Entry file: None
Scanned: 2016-10-25 23:26:05.937536
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ravivooda/flask-server.

wipatrick/flask-restapi
https://github.com/wipatrick/flask-restapi
Entry file: flask-restapi/api.py
Scanned: 2016-10-25 23:26:07.252484
No vulnerabilities found.


yogeshralhan/flask_1
https://github.com/yogeshralhan/flask_1
Entry file: flask_1/request.py
Scanned: 2016-10-25 23:26:09.332948
No vulnerabilities found.


YeWang0/Flask_Blog
https://github.com/YeWang0/Flask_Blog
Entry file: Flask_Blog/main_db.py
Scanned: 2016-10-25 23:26:14.833031
No vulnerabilities found.


krol3/python-flask
https://github.com/krol3/python-flask
Entry file: python-flask/app.py
Scanned: 2016-10-25 23:26:22.149589
No vulnerabilities found.


ialamin/flask_hello
https://github.com/ialamin/flask_hello
Entry file: flask_hello/hello_world.py
Scanned: 2016-10-25 23:26:26.415456
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ramhiser/flask-docker
https://github.com/ramhiser/flask-docker
Entry file: flask-docker/app.py
Scanned: 2016-10-25 23:26:27.719776
No vulnerabilities found.


jyameo/Flask-Blog
https://github.com/jyameo/Flask-Blog
Entry file: Flask-Blog/blog.py
Scanned: 2016-10-25 23:26:32.063751
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask-Blog/env/lib/python2.7/sre_compile.py

Vasiliy-tech/flask_httpserver
https://github.com/Vasiliy-tech/flask_httpserver
Entry file: flask_httpserver/simple_http.py
Scanned: 2016-10-25 23:26:33.527067
No vulnerabilities found.


chuan137/flask_bess
https://github.com/chuan137/flask_bess
Entry file: flask_bess/main.py
Scanned: 2016-10-25 23:26:36.189616
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

windery/flask-blog
https://github.com/windery/flask-blog
Entry file: None
Scanned: 2016-10-25 23:26:38.761968
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kgandhi37/flask_blog
https://github.com/kgandhi37/flask_blog
Entry file: flask_blog/__init__.py
Scanned: 2016-10-25 23:26:55.544790
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_blog/venv/lib/python3.4/operator.py

Yuhuishishishi/Flask_toy
https://github.com/Yuhuishishishi/Flask_toy
Entry file: Flask_toy/MenuApp.py
Scanned: 2016-10-25 23:26:56.930602
No vulnerabilities found.


heyericnelson/flask_apps
https://github.com/heyericnelson/flask_apps
Entry file: flask_apps/flaskr/flaskr.py
Scanned: 2016-10-25 23:26:58.327784
No vulnerabilities found.


datakiss/flask-miguel
https://github.com/datakiss/flask-miguel
Entry file: flask-miguel/app/__init__.py
Scanned: 2016-10-25 23:26:59.750878
No vulnerabilities found.


timotk/flask-login
https://github.com/timotk/flask-login
Entry file: flask-login/app/__init__.py
Scanned: 2016-10-25 23:27:01.112652
No vulnerabilities found.


johnsliao/flask-toy
https://github.com/johnsliao/flask-toy
Entry file: flask-toy/flaskr/flaskr.py
Scanned: 2016-10-25 23:27:02.795182
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jan26th/flask_test
https://github.com/jan26th/flask_test
Entry file: None
Scanned: 2016-10-25 23:27:05.790909
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dawran6/flask-blog
https://github.com/dawran6/flask-blog
Entry file: None
Scanned: 2016-10-25 23:27:06.302953
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

msapkota/Flask_Blog
https://github.com/msapkota/Flask_Blog
Entry file: Flask_Blog/blog.py
Scanned: 2016-10-25 23:27:09.433514
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wish007/MyFlask
https://github.com/wish007/MyFlask
Entry file: MyFlask/app/__init__.py
Scanned: 2016-10-25 23:27:10.766923
No vulnerabilities found.


rogerpence/flask-skeleton
https://github.com/rogerpence/flask-skeleton
Entry file: flask-skeleton/application/__init__.py
Scanned: 2016-10-25 23:27:12.186291
No vulnerabilities found.


chungsquared/flask-introduction
https://github.com/chungsquared/flask-introduction
Entry file: flask-introduction/app.py
Scanned: 2016-10-25 23:27:14.105141
No vulnerabilities found.


zachbpd/microblog
https://github.com/zachbpd/microblog
Entry file: None
Scanned: 2016-10-25 23:27:14.668629
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zachbpd/microblog.

josepablob/flask-hello-world
https://github.com/josepablob/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:27:15.216213
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Tribe216/microblog
https://github.com/Tribe216/microblog
Entry file: None
Scanned: 2016-10-25 23:27:15.729947
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Tribe216/microblog.

ipsha21/My-flask-application
https://github.com/ipsha21/My-flask-application
Entry file: My-flask-application/app.py
Scanned: 2016-10-25 23:27:17.039097
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

laaroussiBadr/FlaskWebProject
https://github.com/laaroussiBadr/FlaskWebProject
Entry file: FlaskWebProject/FlaskWebProject2/FlaskWebProject2/__init__.py
Scanned: 2016-10-25 23:27:19.398868
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

DonBeck69/FlaskWebProject2
https://github.com/DonBeck69/FlaskWebProject2
Entry file: None
Scanned: 2016-10-25 23:27:21.643518
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sasha-ruby/flask2spark
https://github.com/sasha-ruby/flask2spark
Entry file: flask2spark/flask2spark.py
Scanned: 2016-10-25 23:27:22.934002
No vulnerabilities found.


rjmAmaro/flaskr_flask_tutorial
https://github.com/rjmAmaro/flaskr_flask_tutorial
Entry file: flaskr_flask_tutorial/flaskr/flaskr.py
Scanned: 2016-10-25 23:27:24.328575
No vulnerabilities found.


embasa/FLASK
https://github.com/embasa/FLASK
Entry file: FLASK/app.py
Scanned: 2016-10-25 23:27:27.062945
No vulnerabilities found.


damionlowers/flask
https://github.com/damionlowers/flask
Entry file: None
Scanned: 2016-10-25 23:27:27.605116
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

smltc/Flask
https://github.com/smltc/Flask
Entry file: None
Scanned: 2016-10-25 23:27:29.121712
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rakeshhegishte/Flask
https://github.com/rakeshhegishte/Flask
Entry file: None
Scanned: 2016-10-25 23:27:32.657098
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

RayneHwang/Flask
https://github.com/RayneHwang/Flask
Entry file: None
Scanned: 2016-10-25 23:27:35.173346
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

RoseOu/flasky
https://github.com/RoseOu/flasky
Entry file: None
Scanned: 2016-10-25 23:27:37.720744
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

materialsvirtuallab/flamyngo
https://github.com/materialsvirtuallab/flamyngo
Entry file: flamyngo/flamyngo/app.py
Scanned: 2016-10-25 23:27:40.601063
Vulnerability 1:
File: flamyngo/flamyngo/views.py
 > User input at line 95, trigger word "get(": 
	cname = request.args.get('collection')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 96: settings = CSETTINGS[cname]
	File: flamyngo/flamyngo/views.py
	 > Line 98: projection = [t[0] for t in settings['summary']]
	File: flamyngo/flamyngo/views.py
	 > Line 105: criteria = process_search_string(search_string, settings)
File: flamyngo/flamyngo/views.py
 > reaches line 130, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('index.html',collection_name=cname, results=results, fields=fields, search_string=search_string, mapped_names=mapped_names, unique_key=settings['unique_key'], active_collection=cname, collections=CNAMES, error_message=error_message))

Vulnerability 2:
File: flamyngo/flamyngo/views.py
 > User input at line 97, trigger word "get(": 
	search_string = request.args.get('search_string')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 105: criteria = process_search_string(search_string, settings)
File: flamyngo/flamyngo/views.py
 > reaches line 130, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('index.html',collection_name=cname, results=results, fields=fields, search_string=search_string, mapped_names=mapped_names, unique_key=settings['unique_key'], active_collection=cname, collections=CNAMES, error_message=error_message))

Vulnerability 3:
File: flamyngo/flamyngo/views.py
 > User input at line 142, trigger word "get(": 
	cname = request.args.get('collection')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 4:
File: flamyngo/flamyngo/views.py
 > User input at line 145, trigger word "get(": 
	plot_type = request.args.get('plot_type') or 'scatter'
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 5:
File: flamyngo/flamyngo/views.py
 > User input at line 146, trigger word "get(": 
	search_string = request.args.get('search_string')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 6:
File: flamyngo/flamyngo/views.py
 > User input at line 147, trigger word "get(": 
	xaxis = request.args.get('xaxis')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))

Vulnerability 7:
File: flamyngo/flamyngo/views.py
 > User input at line 148, trigger word "get(": 
	yaxis = request.args.get('yaxis')
Reassigned in: 
	File: flamyngo/flamyngo/views.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collections=CNAMES))
File: flamyngo/flamyngo/views.py
 > reaches line 149, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = make_response(render_template('plot.html',collection=cname, search_string=search_string, plot_type=plot_type, xaxis=xaxis, yaxis=yaxis, active_collection=cname, collections=CNAMES, plot=True))



jonafato/Flask-Copilot
https://github.com/jonafato/Flask-Copilot
Entry file: Flask-Copilot/example/app.py
Scanned: 2016-10-25 23:27:41.998471
No vulnerabilities found.


Upflask/Upflask
https://github.com/Upflask/Upflask
Entry file: Upflask/server.py
Scanned: 2016-10-25 23:27:43.769411
Vulnerability 1:
File: Upflask/server.py
 > User input at line 161, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: Upflask/server.py
	 > Line 165: filename = secure_filename(file.filename)
File: Upflask/server.py
 > reaches line 171, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 2:
File: Upflask/server.py
 > User input at line 161, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: Upflask/server.py
	 > Line 165: filename = secure_filename(file.filename)
File: Upflask/server.py
 > reaches line 171, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))



PrettyPrinted/flask-wtforms
https://github.com/PrettyPrinted/flask-wtforms
Entry file: flask-wtforms/main.py
Scanned: 2016-10-25 23:27:57.098667
No vulnerabilities found.


MLH/my-mlh-flask-example
https://github.com/MLH/my-mlh-flask-example
Entry file: my-mlh-flask-example/app.py
Scanned: 2016-10-25 23:27:58.425076
No vulnerabilities found.


billyfung/flask_shortener
https://github.com/billyfung/flask_shortener
Entry file: flask_shortener/app.py
Scanned: 2016-10-25 23:27:59.830221
Vulnerability 1:
File: flask_shortener/app.py
 > User input at line 41, trigger word "form[": 
	url_to_parse = request.form['input-url']
Reassigned in: 
	File: flask_shortener/app.py
	 > Line 42: parts = urlparse.urlparse(url_to_parse)
	File: flask_shortener/app.py
	 > Line 47: short_id = shorten(url_to_parse)
File: flask_shortener/app.py
 > reaches line 48, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',short_id=short_id)

Vulnerability 2:
File: flask_shortener/app.py
 > User input at line 52, trigger word "get(": 
	link_target = redis.get('url-target:' + short_id)
File: flask_shortener/app.py
 > reaches line 56, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(link_target)

Vulnerability 3:
File: flask_shortener/app.py
 > User input at line 60, trigger word "get(": 
	link_target = redis.get('url-target:' + short_id)
File: flask_shortener/app.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('details.html',short_id=short_id, click_count=click_count, link_target=link_target)

Vulnerability 4:
File: flask_shortener/app.py
 > User input at line 63, trigger word "get(": 
	click_count = int(redis.get('click-count:' + short_id) or 0)
File: flask_shortener/app.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('details.html',short_id=short_id, click_count=click_count, link_target=link_target)



msapkota/flasktaskr
https://github.com/msapkota/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:28:00.362808
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Narcissist1/flasktest
https://github.com/Narcissist1/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 23:28:03.069747
No vulnerabilities found.


super452/flasky
https://github.com/super452/flasky
Entry file: None
Scanned: 2016-10-25 23:28:03.601626
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

boydjohnson/flasktwilio
https://github.com/boydjohnson/flasktwilio
Entry file: flasktwilio/app.py
Scanned: 2016-10-25 23:28:07.903861
Vulnerability 1:
File: flasktwilio/app.py
 > User input at line 14, trigger word "form[": 
	number = request.form['number']
File: flasktwilio/app.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('subscribe_response.html',phone_number=number, lat=lat, lon=lon)

Vulnerability 2:
File: flasktwilio/app.py
 > User input at line 15, trigger word "form[": 
	lat = request.form['latitude']
File: flasktwilio/app.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('subscribe_response.html',phone_number=number, lat=lat, lon=lon)

Vulnerability 3:
File: flasktwilio/app.py
 > User input at line 16, trigger word "form[": 
	lon = request.form['longitude']
File: flasktwilio/app.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('subscribe_response.html',phone_number=number, lat=lat, lon=lon)



yizhianiu/flasky
https://github.com/yizhianiu/flasky
Entry file: None
Scanned: 2016-10-25 23:28:08.421152
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ifcheung2012/flaskanalysis
https://github.com/ifcheung2012/flaskanalysis
Entry file: flaskanalysis/manage.py
Scanned: 2016-10-25 23:28:11.848350
No vulnerabilities found.


wdxfairy/flaskblog
https://github.com/wdxfairy/flaskblog
Entry file: None
Scanned: 2016-10-25 23:28:12.378502
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/wdxfairy/flaskblog.

wish007/flasktest
https://github.com/wish007/flasktest
Entry file: flasktest/hello.py
Scanned: 2016-10-25 23:28:13.789278
No vulnerabilities found.


wildjan/Flaskr
https://github.com/wildjan/Flaskr
Entry file: None
Scanned: 2016-10-25 23:28:15.306114
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pnilan/flaskr
https://github.com/pnilan/flaskr
Entry file: None
Scanned: 2016-10-25 23:28:15.837393
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pnilan/flaskr.

scottmarinoff/Flasky
https://github.com/scottmarinoff/Flasky
Entry file: None
Scanned: 2016-10-25 23:28:16.361751
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/scottmarinoff/Flasky.

cutedogspark/Flask-SocketIO
https://github.com/cutedogspark/Flask-SocketIO
Entry file: Flask-SocketIO/server/app/__init__.py
Scanned: 2016-10-25 23:28:19.719166
No vulnerabilities found.


EvenYan/FlaskTest
https://github.com/EvenYan/FlaskTest
Entry file: FlaskTest/app.py
Scanned: 2016-10-25 23:28:21.541455
No vulnerabilities found.


jll90/flaskAng
https://github.com/jll90/flaskAng
Entry file: flaskAng/app.py
Scanned: 2016-10-25 23:28:25.389330
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskAng/lib/python2.7/sre_compile.py

rkholoniuk/FlaskAPI
https://github.com/rkholoniuk/FlaskAPI
Entry file: None
Scanned: 2016-10-25 23:28:25.948133
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rkholoniuk/FlaskAPI.

VitPN/FlaskRPi
https://github.com/VitPN/FlaskRPi
Entry file: FlaskRPi/go.py
Scanned: 2016-10-25 23:28:27.268907
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

edgewood/webfaction-flask0.10-boilerplate
https://github.com/edgewood/webfaction-flask0.10-boilerplate
Entry file: None
Scanned: 2016-10-25 23:28:29.189625
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/edgewood/webfaction-flask0.10-boilerplate.

shidante/notes-flask
https://github.com/shidante/notes-flask
Entry file: notes-flask/hello.py
Scanned: 2016-10-25 23:28:30.481450
No vulnerabilities found.


maixianyu/flask_tennis
https://github.com/maixianyu/flask_tennis
Entry file: None
Scanned: 2016-10-25 23:28:36.090458
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

s-kovacevic/elearning-flask
https://github.com/s-kovacevic/elearning-flask
Entry file: elearning-flask/main.py
Scanned: 2016-10-25 23:28:37.559247
Vulnerability 1:
File: elearning-flask/main.py
 > User input at line 84, trigger word ".data": 
	user = User(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 69: user = User()
	File: elearning-flask/main.py
	 > Line 73: user = User()
	File: elearning-flask/main.py
	 > Line 78: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 80: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 86: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 88: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 71, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'user.to_jsonapi())

Vulnerability 2:
File: elearning-flask/main.py
 > User input at line 84, trigger word ".data": 
	user = User(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 69: user = User()
	File: elearning-flask/main.py
	 > Line 73: user = User()
	File: elearning-flask/main.py
	 > Line 78: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 80: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 86: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 88: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 74, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[user.to_jsonapi() for user in user.get_many()])

Vulnerability 3:
File: elearning-flask/main.py
 > User input at line 116, trigger word ".data": 
	question = Question(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 97: question = Question()
	File: elearning-flask/main.py
	 > Line 101: question = Question()
	File: elearning-flask/main.py
	 > Line 110: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 112: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 120: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 99, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'question.to_jsonapi())

Vulnerability 4:
File: elearning-flask/main.py
 > User input at line 116, trigger word ".data": 
	question = Question(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 97: question = Question()
	File: elearning-flask/main.py
	 > Line 101: question = Question()
	File: elearning-flask/main.py
	 > Line 110: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 112: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 120: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 102, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[question.to_jsonapi() for question in question.get_many()])

Vulnerability 5:
File: elearning-flask/main.py
 > User input at line 148, trigger word ".data": 
	category = Category(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 129: category = Category()
	File: elearning-flask/main.py
	 > Line 133: category = Category()
	File: elearning-flask/main.py
	 > Line 142: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 150: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 152: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 131, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'category.to_jsonapi())

Vulnerability 6:
File: elearning-flask/main.py
 > User input at line 148, trigger word ".data": 
	category = Category(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 129: category = Category()
	File: elearning-flask/main.py
	 > Line 133: category = Category()
	File: elearning-flask/main.py
	 > Line 142: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 150: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 152: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 134, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[category.to_jsonapi() for category in category.get_many()])

Vulnerability 7:
File: elearning-flask/main.py
 > User input at line 180, trigger word ".data": 
	answer = Answer(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 161: answer = Answer()
	File: elearning-flask/main.py
	 > Line 165: answer = Answer()
	File: elearning-flask/main.py
	 > Line 174: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 176: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 184: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 163, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'answer.to_jsonapi())

Vulnerability 8:
File: elearning-flask/main.py
 > User input at line 180, trigger word ".data": 
	answer = Answer(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 161: answer = Answer()
	File: elearning-flask/main.py
	 > Line 165: answer = Answer()
	File: elearning-flask/main.py
	 > Line 174: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 176: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 184: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 166, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[answer.to_jsonapi() for answer in answer.get_many()])

Vulnerability 9:
File: elearning-flask/main.py
 > User input at line 212, trigger word ".data": 
	score = Score(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 193: score = Score()
	File: elearning-flask/main.py
	 > Line 197: score = Score()
	File: elearning-flask/main.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 208: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 216: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 195, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'score.to_jsonapi())

Vulnerability 10:
File: elearning-flask/main.py
 > User input at line 212, trigger word ".data": 
	score = Score(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 193: score = Score()
	File: elearning-flask/main.py
	 > Line 197: score = Score()
	File: elearning-flask/main.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 208: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 216: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 198, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[score.to_jsonapi() for score in score.get_many()])



saalmerol/cds-flask
https://github.com/saalmerol/cds-flask
Entry file: None
Scanned: 2016-10-25 23:28:41.392624
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

trileg/HelloFlask
https://github.com/trileg/HelloFlask
Entry file: HelloFlask/FlaskApp/app.py
Scanned: 2016-10-25 23:28:42.710173
No vulnerabilities found.


M1lan/flask_helloworld
https://github.com/M1lan/flask_helloworld
Entry file: flask_helloworld/flask_helloworld.py
Scanned: 2016-10-25 23:28:44.112940
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

xpleaf/flask_catalog
https://github.com/xpleaf/flask_catalog
Entry file: flask_catalog/my_app/__init__.py
Scanned: 2016-10-25 23:28:46.032698
Vulnerability 1:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 41, trigger word "get(": 
	products = [redis.get(k) for k in keys_alive]
File: flask_catalog/my_app/catalog/views.py
 > reaches line 42, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('products'products)

Vulnerability 2:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 66, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 79, trigger word "flash(": 
	flash('The product %s has been created' % name, 'success')

Vulnerability 3:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 66, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 4:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 67, trigger word ".data": 
	price = form.price.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 5:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 68, trigger word ".data": 
	category = Category.query.get_or_404(form.category.data)
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 6:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 71, trigger word "files[": 
	image = request.files['image']
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 74: filename = secure_filename(image.filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 72: filename = ''
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 7:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 66, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 8:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 67, trigger word ".data": 
	price = form.price.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 9:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 68, trigger word ".data": 
	category = Category.query.get_or_404(form.category.data)
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 10:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 71, trigger word "files[": 
	image = request.files['image']
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 74: filename = secure_filename(image.filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 76: product = Product(name, price, category, filename)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 85: ret_MAYBE_FUNCTION_NAME = render_template('product-create.html',form=form)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 72: filename = ''
File: flask_catalog/my_app/catalog/views.py
 > reaches line 80, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.product',id=product.id))

Vulnerability 11:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 93, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 94: category = Category(name)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 105: ret_MAYBE_FUNCTION_NAME = render_template('category-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 97, trigger word "flash(": 
	flash('The category %s has been created' % name, 'success')

Vulnerability 12:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 93, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 94: category = Category(name)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 105: ret_MAYBE_FUNCTION_NAME = render_template('category-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 99, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.create_category',id=category.id))

Vulnerability 13:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 93, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 94: category = Category(name)
	File: flask_catalog/my_app/catalog/views.py
	 > Line 105: ret_MAYBE_FUNCTION_NAME = render_template('category-create.html',form=form)
File: flask_catalog/my_app/catalog/views.py
 > reaches line 99, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('catalog.create_category',id=category.id))

Vulnerability 14:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 136, trigger word "get(": 
	name = request.args.get('name')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 142, trigger word "filter(": 
	products = products.filter(Product.name.like('%' + name + '%'))

Vulnerability 15:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 137, trigger word "get(": 
	price = request.args.get('price')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 142, trigger word "filter(": 
	products = products.filter(Product.name.like('%' + name + '%'))

Vulnerability 16:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 138, trigger word "get(": 
	company = request.args.get('company')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 142, trigger word "filter(": 
	products = products.filter(Product.name.like('%' + name + '%'))

Vulnerability 17:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 139, trigger word "get(": 
	category = request.args.get('category')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 142, trigger word "filter(": 
	products = products.filter(Product.name.like('%' + name + '%'))

Vulnerability 18:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 136, trigger word "get(": 
	name = request.args.get('name')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 144, trigger word "filter(": 
	products = products.filter(Product.price == price)

Vulnerability 19:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 137, trigger word "get(": 
	price = request.args.get('price')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 144, trigger word "filter(": 
	products = products.filter(Product.price == price)

Vulnerability 20:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 138, trigger word "get(": 
	company = request.args.get('company')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 144, trigger word "filter(": 
	products = products.filter(Product.price == price)

Vulnerability 21:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 139, trigger word "get(": 
	category = request.args.get('category')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 144, trigger word "filter(": 
	products = products.filter(Product.price == price)

Vulnerability 22:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 136, trigger word "get(": 
	name = request.args.get('name')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 146, trigger word "filter(": 
	products = products.filter(Product.company.like('%' + company + '%'))

Vulnerability 23:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 137, trigger word "get(": 
	price = request.args.get('price')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 146, trigger word "filter(": 
	products = products.filter(Product.company.like('%' + company + '%'))

Vulnerability 24:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 138, trigger word "get(": 
	company = request.args.get('company')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 146, trigger word "filter(": 
	products = products.filter(Product.company.like('%' + company + '%'))

Vulnerability 25:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 139, trigger word "get(": 
	category = request.args.get('category')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 146, trigger word "filter(": 
	products = products.filter(Product.company.like('%' + company + '%'))

Vulnerability 26:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 136, trigger word "get(": 
	name = request.args.get('name')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 148, trigger word "filter(": 
	products = products.select_from(join(Product, Category)).filter(Category.name.like('%' + category + '%'))

Vulnerability 27:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 137, trigger word "get(": 
	price = request.args.get('price')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 148, trigger word "filter(": 
	products = products.select_from(join(Product, Category)).filter(Category.name.like('%' + category + '%'))

Vulnerability 28:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 138, trigger word "get(": 
	company = request.args.get('company')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 148, trigger word "filter(": 
	products = products.select_from(join(Product, Category)).filter(Category.name.like('%' + category + '%'))

Vulnerability 29:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 139, trigger word "get(": 
	category = request.args.get('category')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 148, trigger word "filter(": 
	products = products.select_from(join(Product, Category)).filter(Category.name.like('%' + category + '%'))

Vulnerability 30:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 136, trigger word "get(": 
	name = request.args.get('name')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('products.html',products=products.paginate(page, 10))

Vulnerability 31:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 137, trigger word "get(": 
	price = request.args.get('price')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('products.html',products=products.paginate(page, 10))

Vulnerability 32:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 138, trigger word "get(": 
	company = request.args.get('company')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('products.html',products=products.paginate(page, 10))

Vulnerability 33:
File: flask_catalog/my_app/catalog/views.py
 > User input at line 139, trigger word "get(": 
	category = request.args.get('category')
Reassigned in: 
	File: flask_catalog/my_app/catalog/views.py
	 > Line 140: products = Product.query
File: flask_catalog/my_app/catalog/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('products.html',products=products.paginate(page, 10))



yizhianiu/flask-blog
https://github.com/yizhianiu/flask-blog
Entry file: None
Scanned: 2016-10-25 23:28:46.571657
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

garderobin/HelloFlask
https://github.com/garderobin/HelloFlask
Entry file: HelloFlask/HelloFlask.py
Scanned: 2016-10-25 23:28:57.915961
No vulnerabilities found.


codybousc/flask_practice-
https://github.com/codybousc/flask_practice-
Entry file: flask_practice-/app.py
Scanned: 2016-10-25 23:29:01.005230
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_practice-/venv/lib/python2.7/sre_compile.py

zhuwei05/flask-blog
https://github.com/zhuwei05/flask-blog
Entry file: None
Scanned: 2016-10-25 23:29:01.540097
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fenfir/flask_test
https://github.com/fenfir/flask_test
Entry file: None
Scanned: 2016-10-25 23:29:02.055815
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tim1978/flask-blog
https://github.com/tim1978/flask-blog
Entry file: None
Scanned: 2016-10-25 23:29:02.592867
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

junhl/Flask_Test
https://github.com/junhl/Flask_Test
Entry file: Flask_Test/app/__init__.py
Scanned: 2016-10-25 23:29:06.788825
No vulnerabilities found.


anupam0601/flask_off
https://github.com/anupam0601/flask_off
Entry file: flask_off/appmongo.py
Scanned: 2016-10-25 23:29:13.250785
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

cdhop/flask_exercises
https://github.com/cdhop/flask_exercises
Entry file: flask_exercises/chapter_5/hello.py
Scanned: 2016-10-25 23:29:14.803133
No vulnerabilities found.


AmeetSM/AngularFlask
https://github.com/AmeetSM/AngularFlask
Entry file: AngularFlask/app.py
Scanned: 2016-10-25 23:29:16.591432
No vulnerabilities found.


zhiweicai/flask-hello
https://github.com/zhiweicai/flask-hello
Entry file: flask-hello/flask-hello.py
Scanned: 2016-10-25 23:29:17.913645
No vulnerabilities found.


slacksec/flask_blog
https://github.com/slacksec/flask_blog
Entry file: flask_blog/__init__.py
Scanned: 2016-10-25 23:29:19.710074
Vulnerability 1:
File: flask_blog/author/views.py
 > User input at line 25, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: flask_blog/author/views.py
	 > Line 29: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
	File: flask_blog/author/views.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = render_template('author/login.html',form=form, error=error)
File: flask_blog/author/views.py
 > reaches line 27, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 2:
File: flask_blog/blog/views.py
 > User input at line 84, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: flask_blog/blog/views.py
	 > Line 86: slug = slugify(title)
	File: flask_blog/blog/views.py
	 > Line 87: post = Post(blog, author, title, body, category, filename, slug)
	File: flask_blog/blog/views.py
	 > Line 91: ret_MAYBE_FUNCTION_NAME = render_template('blog/post.html',form=form, action='new')
File: flask_blog/blog/views.py
 > reaches line 90, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('article',slug=slug))

Vulnerability 3:
File: flask_blog/blog/views.py
 > User input at line 84, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: flask_blog/blog/views.py
	 > Line 86: slug = slugify(title)
	File: flask_blog/blog/views.py
	 > Line 87: post = Post(blog, author, title, body, category, filename, slug)
	File: flask_blog/blog/views.py
	 > Line 91: ret_MAYBE_FUNCTION_NAME = render_template('blog/post.html',form=form, action='new')
File: flask_blog/blog/views.py
 > reaches line 90, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('article',slug=slug))



GreenDragonSoft/refundmytrain-flask
https://github.com/GreenDragonSoft/refundmytrain-flask
Entry file: refundmytrain-flask/app.py
Scanned: 2016-10-25 23:29:21.143874
No vulnerabilities found.


Desmonddai583/flask-blog
https://github.com/Desmonddai583/flask-blog
Entry file: None
Scanned: 2016-10-25 23:29:21.666389
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

seabrookmx/flask-demo
https://github.com/seabrookmx/flask-demo
Entry file: flask-demo/flaskdemo.py
Scanned: 2016-10-25 23:29:22.985892
No vulnerabilities found.


a358003542/flask-examples
https://github.com/a358003542/flask-examples
Entry file: flask-examples/session_flash.py
Scanned: 2016-10-25 23:29:24.435829
Vulnerability 1:
File: flask-examples/session_flash.py
 > User input at line 32, trigger word "get(": 
	username = request.form.get('username')
Reassigned in: 
	File: flask-examples/session_flash.py
	 > Line 37: session['username'] = username
File: flask-examples/session_flash.py
 > reaches line 34, trigger word "filter(": 
	target = db.session.query(User).filter(User.username == username).first()

Vulnerability 2:
File: flask-examples/upload.py
 > User input at line 34, trigger word "files[": 
	fileobj = request.files['file']
Reassigned in: 
	File: flask-examples/upload.py
	 > Line 41: filename = fileobj.filename
	File: flask-examples/upload.py
	 > Line 45: ret_MAYBE_FUNCTION_NAME = '    <!doctype html>
    <title>Upload new file</title>
    <h1>Upload new File</h1>
    <form action="" method="post" enctype="multipart/form-data">
    <input type="file" name=file />
    <input type="submit" value=Upload />
    </form>
    '
	File: flask-examples/upload.py
	 > Line 33: ret_MAYBE_FUNCTION_NAME = redirect(request.url)
	File: flask-examples/upload.py
	 > Line 39: ret_MAYBE_FUNCTION_NAME = redirect(request.url)
File: flask-examples/upload.py
 > reaches line 43, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 3:
File: flask-examples/upload.py
 > User input at line 34, trigger word "files[": 
	fileobj = request.files['file']
Reassigned in: 
	File: flask-examples/upload.py
	 > Line 41: filename = fileobj.filename
	File: flask-examples/upload.py
	 > Line 45: ret_MAYBE_FUNCTION_NAME = '    <!doctype html>
    <title>Upload new file</title>
    <h1>Upload new File</h1>
    <form action="" method="post" enctype="multipart/form-data">
    <input type="file" name=file />
    <input type="submit" value=Upload />
    </form>
    '
	File: flask-examples/upload.py
	 > Line 33: ret_MAYBE_FUNCTION_NAME = redirect(request.url)
	File: flask-examples/upload.py
	 > Line 39: ret_MAYBE_FUNCTION_NAME = redirect(request.url)
File: flask-examples/upload.py
 > reaches line 43, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 4:
File: flask-examples/session.py
 > User input at line 32, trigger word "get(": 
	username = request.form.get('username')
Reassigned in: 
	File: flask-examples/session.py
	 > Line 37: session['username'] = username
File: flask-examples/session.py
 > reaches line 34, trigger word "filter(": 
	target = db.session.query(User).filter(User.username == username).first()



Yuhuishishishi/Flask_toy
https://github.com/Yuhuishishishi/Flask_toy
Entry file: Flask_toy/MenuApp.py
Scanned: 2016-10-25 23:29:25.731410
No vulnerabilities found.


heyericnelson/flask_apps
https://github.com/heyericnelson/flask_apps
Entry file: flask_apps/flaskr/flaskr.py
Scanned: 2016-10-25 23:29:27.031908
No vulnerabilities found.


abunuwas/flask_experiments
https://github.com/abunuwas/flask_experiments
Entry file: None
Scanned: 2016-10-25 23:29:28.353212
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/abunuwas/flask_experiments.

ykchat/gundam-flask
https://github.com/ykchat/gundam-flask
Entry file: gundam-flask/server.py
Scanned: 2016-10-25 23:29:29.650250
No vulnerabilities found.


datakiss/flask-miguel
https://github.com/datakiss/flask-miguel
Entry file: flask-miguel/app/__init__.py
Scanned: 2016-10-25 23:29:31.077499
No vulnerabilities found.


eltonto187/learn_flask
https://github.com/eltonto187/learn_flask
Entry file: learn_flask/flaskr.py
Scanned: 2016-10-25 23:29:32.389356
No vulnerabilities found.


NickyThreeNames/flask_blog
https://github.com/NickyThreeNames/flask_blog
Entry file: flask_blog/blog.py
Scanned: 2016-10-25 23:29:33.674873
No vulnerabilities found.


netkicorp/flask-jwe
https://github.com/netkicorp/flask-jwe
Entry file: flask-jwe/server.py
Scanned: 2016-10-25 23:29:35.129050
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

chungsquared/flask-introduction
https://github.com/chungsquared/flask-introduction
Entry file: flask-introduction/app.py
Scanned: 2016-10-25 23:29:37.931297
No vulnerabilities found.


dengshilong/flask_example
https://github.com/dengshilong/flask_example
Entry file: flask_example/flaskr.py
Scanned: 2016-10-25 23:29:39.417590
No vulnerabilities found.


nathanielcompton/flask-tutorial
https://github.com/nathanielcompton/flask-tutorial
Entry file: flask-tutorial/flask-tutorial/app.py
Scanned: 2016-10-25 23:29:44.050088
No vulnerabilities found.


JesseLabruyere/flask_api
https://github.com/JesseLabruyere/flask_api
Entry file: flask_api/flask_project/routes.py
Scanned: 2016-10-25 23:29:48.592365
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_api/flask_project/venv/lib/python2.7/sre_compile.py

leon740gk/flask_quick_start
https://github.com/leon740gk/flask_quick_start
Entry file: flask_quick_start/hello.py
Scanned: 2016-10-25 23:29:49.946465
No vulnerabilities found.


dommert/test.dommert.xyz
https://github.com/dommert/test.dommert.xyz
Entry file: None
Scanned: 2016-10-25 23:29:51.365807
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dommert/test.dommert.xyz.

poppuyo/FlaskUrlShortener
https://github.com/poppuyo/FlaskUrlShortener
Entry file: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
Scanned: 2016-10-25 23:30:01.086895
Vulnerability 1:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 93, trigger word "get(": 
	requested_shortened = request.args.get('shortened')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 97: cur = g.db.cursor()
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 95, trigger word "replace(": 
	requested_shortened = requested_shortened.replace(request.url_root, '')

Vulnerability 2:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 93, trigger word "get(": 
	requested_shortened = request.args.get('shortened')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 97: cur = g.db.cursor()
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 98, trigger word "execute(": 
	cur.execute('SELECT url FROM urls where shortened=%s', [requested_shortened])

Vulnerability 3:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 93, trigger word "get(": 
	requested_shortened = request.args.get('shortened')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 97: cur = g.db.cursor()
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 100, trigger word "execute(": 
	cur = g.db.execute('SELECT url FROM urls where shortened=?', [requested_shortened])

Vulnerability 4:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 93, trigger word "get(": 
	requested_shortened = request.args.get('shortened')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 97: cur = g.db.cursor()
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 104, trigger word "url_for(": 
	short_url = request.url_root.rstrip('/') + url_for('find_shortened',shortened=requested_shortened)

Vulnerability 5:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 114, trigger word "form[": 
	stripped_url = request.form['url'].rstrip(' ').rstrip('/')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 116: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 130: stripped_url = 'http://' + stripped_url
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 131: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 140: untrimmed_shortened = shorten(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 165: short_url = request.url_root + untrimmed_shortened[leftstring_length]
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 149, trigger word "execute(": 
	cur.execute('WITH new_values (url, shortened) as ( values (%s, %s) ), ' + 'upsert as ' + '( update urls u set url = nv.url, shortened = nv.shortened ' + ' FROM new_values nv WHERE u.url = nv.url RETURNING u.* )' + ' INSERT INTO urls (url, shortened) ' + ' SELECT url, shortened FROM new_values WHERE NOT EXISTS ' + ' (SELECT 1 FROM upsert up WHERE up.url = new_values.url)', [stripped_url, untrimmed_shortened[leftstring_length]])

Vulnerability 6:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 114, trigger word "form[": 
	stripped_url = request.form['url'].rstrip(' ').rstrip('/')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 116: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 130: stripped_url = 'http://' + stripped_url
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 131: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 140: untrimmed_shortened = shorten(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 165: short_url = request.url_root + untrimmed_shortened[leftstring_length]
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 160, trigger word "execute(": 
	g.db.execute('UPDATE urls SET url=?, shortened=? WHERE url=?', [stripped_url, untrimmed_shortened[leftstring_length], stripped_url])

Vulnerability 7:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 114, trigger word "form[": 
	stripped_url = request.form['url'].rstrip(' ').rstrip('/')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 116: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 130: stripped_url = 'http://' + stripped_url
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 131: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 140: untrimmed_shortened = shorten(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 165: short_url = request.url_root + untrimmed_shortened[leftstring_length]
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 162, trigger word "execute(": 
	g.db.execute('INSERT OR IGNORE INTO urls (url, shortened) VALUES (?, ?)', [stripped_url, untrimmed_shortened[leftstring_length]])

Vulnerability 8:
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > User input at line 114, trigger word "form[": 
	stripped_url = request.form['url'].rstrip(' ').rstrip('/')
Reassigned in: 
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 116: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 130: stripped_url = 'http://' + stripped_url
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 131: parsed_url = urlparse(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 140: untrimmed_shortened = shorten(stripped_url)
	File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
	 > Line 165: short_url = request.url_root + untrimmed_shortened[leftstring_length]
File: FlaskUrlShortener/FlaskUrlShortener/urlshortener.py
 > reaches line 166, trigger word "flash(": 
	flash(Markup('<a href=' + short_url + '>' + short_url + '</a>' + ' now redirects to the following URL: ' + '<a href=' + stripped_url + '>' + stripped_url + '</a>'))



DonBeck69/FlaskWebProject2
https://github.com/DonBeck69/FlaskWebProject2
Entry file: None
Scanned: 2016-10-25 23:30:01.637396
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

j1wu/wechat-enterprise-bot
https://github.com/j1wu/wechat-enterprise-bot
Entry file: None
Scanned: 2016-10-25 23:30:03.841450
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/j1wu/wechat-enterprise-bot.

chamambom/flask_sqlalchemy_crud
https://github.com/chamambom/flask_sqlalchemy_crud
Entry file: flask_sqlalchemy_crud/sqlcrud.py
Scanned: 2016-10-25 23:30:05.293192
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pyd-testing/flask-docker-workflow
https://github.com/pyd-testing/flask-docker-workflow
Entry file: flask-docker-workflow/app/app.py
Scanned: 2016-10-25 23:30:06.978141
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

HYL13/flask_project_0
https://github.com/HYL13/flask_project_0
Entry file: flask_project_0/app/__init__.py
Scanned: 2016-10-25 23:30:08.655282
Vulnerability 1:
File: flask_project_0/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 19: next = None
File: flask_project_0/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flask_project_0/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 19: next = None
File: flask_project_0/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flask_project_0/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flask_project_0/app/api_1_0/posts.py
	 > Line 19: next = None
File: flask_project_0/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flask_project_0/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flask_project_0/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flask_project_0/app/api_1_0/users.py
	 > Line 23: next = None
File: flask_project_0/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flask_project_0/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flask_project_0/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flask_project_0/app/api_1_0/users.py
	 > Line 23: next = None
File: flask_project_0/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flask_project_0/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flask_project_0/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flask_project_0/app/api_1_0/users.py
	 > Line 23: next = None
File: flask_project_0/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flask_project_0/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flask_project_0/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flask_project_0/app/api_1_0/users.py
	 > Line 45: next = None
File: flask_project_0/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flask_project_0/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flask_project_0/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flask_project_0/app/api_1_0/users.py
	 > Line 45: next = None
File: flask_project_0/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flask_project_0/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flask_project_0/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flask_project_0/app/api_1_0/users.py
	 > Line 45: next = None
File: flask_project_0/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flask_project_0/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 18: next = None
File: flask_project_0/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flask_project_0/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 18: next = None
File: flask_project_0/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flask_project_0/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 18: next = None
File: flask_project_0/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flask_project_0/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 46: next = None
File: flask_project_0/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flask_project_0/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 46: next = None
File: flask_project_0/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flask_project_0/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flask_project_0/app/api_1_0/comments.py
	 > Line 46: next = None
File: flask_project_0/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flask_project_0/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/main/views.py
	 > Line 55: posts = pagination.items
	File: flask_project_0/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_project_0/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flask_project_0/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 45: show_followed = False
	File: flask_project_0/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_project_0/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flask_project_0/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/main/views.py
	 > Line 67: posts = pagination.items
File: flask_project_0/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flask_project_0/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flask_project_0/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/main/views.py
	 > Line 134: comments = pagination.items
	File: flask_project_0/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flask_project_0/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flask_project_0/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask_project_0/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_project_0/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flask_project_0/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask_project_0/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_project_0/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flask_project_0/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_project_0/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_project_0/app/main/views.py
	 > Line 246: comments = pagination.items
File: flask_project_0/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



EsmondMoe/flask-globalcache-http-api
https://github.com/EsmondMoe/flask-globalcache-http-api
Entry file: flask-globalcache-http-api/app.py
Scanned: 2016-10-25 23:30:15.325226
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pbsugg/flask_testbed_server
https://github.com/pbsugg/flask_testbed_server
Entry file: flask_testbed_server/main.py
Scanned: 2016-10-25 23:30:16.652225
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

gr8shivam/Flask---Handling-File-Uploads
https://github.com/gr8shivam/Flask---Handling-File-Uploads
Entry file: Flask---Handling-File-Uploads/app/__init__.py
Scanned: 2016-10-25 23:30:18.473777
No vulnerabilities found.


anthonybrown/Flask-web-API-demo
https://github.com/anthonybrown/Flask-web-API-demo
Entry file: Flask-web-API-demo/app.py
Scanned: 2016-10-25 23:30:22.638415
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask-web-API-demo/venv/lib/python2.7/sre_compile.py

myCSprojects/PythonFlask-IBMBluemix
https://github.com/myCSprojects/PythonFlask-IBMBluemix
Entry file: PythonFlask-IBMBluemix/welcome.py
Scanned: 2016-10-25 23:30:29.783091
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Kriordan/flask-hello-world
https://github.com/Kriordan/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:30:30.351865
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

mdublin/Flask-SPA-API-Template
https://github.com/mdublin/Flask-SPA-API-Template
Entry file: Flask-SPA-API-Template/posts/__init__.py
Scanned: 2016-10-25 23:30:35.275258
Vulnerability 1:
File: Flask-SPA-API-Template/posts/api.py
 > User input at line 32, trigger word "get(": 
	title_like = request.args.get('title_like')
Reassigned in: 
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 37: posts = posts.order_by(models.Post.id)
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 47: data = json.dumps([post.as_dictionary() for post in posts])
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = Response(data, 200,mimetype='application/json')
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 34: posts = session.query(models.Post)
File: Flask-SPA-API-Template/posts/api.py
 > reaches line 36, trigger word "filter(": 
	posts = posts.filter(models.Post.title.contains(title_like))



dwisulfahnur/My-flask-app
https://github.com/dwisulfahnur/My-flask-app
Entry file: None
Scanned: 2016-10-25 23:30:36.739470
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dwisulfahnur/My-flask-app.

andreffs18/flask-template-project
https://github.com/andreffs18/flask-template-project
Entry file: flask-template-project/project/__init__.py
Scanned: 2016-10-25 23:30:38.301437
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

MatthewHodgson/flask-by-example
https://github.com/MatthewHodgson/flask-by-example
Entry file: flask-by-example/app.py
Scanned: 2016-10-25 23:30:45.264813
No vulnerabilities found.


ssam123/flask-blog-tutorial
https://github.com/ssam123/flask-blog-tutorial
Entry file: flask-blog-tutorial/__init__.py
Scanned: 2016-10-25 23:30:46.752792
Vulnerability 1:
File: flask-blog-tutorial/author/views.py
 > User input at line 31, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: flask-blog-tutorial/author/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
	File: flask-blog-tutorial/author/views.py
	 > Line 44: ret_MAYBE_FUNCTION_NAME = render_template('author/login.html',form=form, error=error)
File: flask-blog-tutorial/author/views.py
 > reaches line 33, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 2:
File: flask-blog-tutorial/blog/views.py
 > User input at line 127, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: flask-blog-tutorial/blog/views.py
	 > Line 129: slug = slugify(title)
	File: flask-blog-tutorial/blog/views.py
	 > Line 130: post = Post(blog, author, title, body, category, filename, slug)
	File: flask-blog-tutorial/blog/views.py
	 > Line 134: ret_MAYBE_FUNCTION_NAME = render_template('blog/post.html',form=form, action='new')
File: flask-blog-tutorial/blog/views.py
 > reaches line 133, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('article',slug=slug))

Vulnerability 3:
File: flask-blog-tutorial/blog/views.py
 > User input at line 127, trigger word ".data": 
	title = form.title.data
Reassigned in: 
	File: flask-blog-tutorial/blog/views.py
	 > Line 129: slug = slugify(title)
	File: flask-blog-tutorial/blog/views.py
	 > Line 130: post = Post(blog, author, title, body, category, filename, slug)
	File: flask-blog-tutorial/blog/views.py
	 > Line 134: ret_MAYBE_FUNCTION_NAME = render_template('blog/post.html',form=form, action='new')
File: flask-blog-tutorial/blog/views.py
 > reaches line 133, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('article',slug=slug))



kevinlondon/flask-hello-world
https://github.com/kevinlondon/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:30:47.273320
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yun70/flask-rest-api
https://github.com/yun70/flask-rest-api
Entry file: flask-rest-api/app/__init__.py
Scanned: 2016-10-25 23:30:49.383924
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

valexandersaulys/flask_microblog_tutorial
https://github.com/valexandersaulys/flask_microblog_tutorial
Entry file: flask_microblog_tutorial/app/__init__.py
Scanned: 2016-10-25 23:30:50.820131
No vulnerabilities found.


kfiras/cloudfoundry-flask-webservice
https://github.com/kfiras/cloudfoundry-flask-webservice
Entry file: cloudfoundry-flask-webservice/app.py
Scanned: 2016-10-25 23:30:52.230571
Vulnerability 1:
File: cloudfoundry-flask-webservice/app.py
 > User input at line 80, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: cloudfoundry-flask-webservice/app.py
 > reaches line 87, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'make_public_task(task)), 201)



MrLeeh/flask-mega-tutorial
https://github.com/MrLeeh/flask-mega-tutorial
Entry file: None
Scanned: 2016-10-25 23:30:52.742825
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/MrLeeh/flask-mega-tutorial.

wenzhihong2003/awesome-flask-todo
https://github.com/wenzhihong2003/awesome-flask-todo
Entry file: awesome-flask-todo/app/__init__.py
Scanned: 2016-10-25 23:30:54.030668
No vulnerabilities found.


viney-shih/Flask_App_Template
https://github.com/viney-shih/Flask_App_Template
Entry file: Flask_App_Template/app/__init__.py
Scanned: 2016-10-25 23:30:55.342116
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

davehalladay/openr-flask-api
https://github.com/davehalladay/openr-flask-api
Entry file: openr-flask-api/main.py
Scanned: 2016-10-25 23:30:56.768170
No vulnerabilities found.


momotaro98/flask-for-test
https://github.com/momotaro98/flask-for-test
Entry file: flask-for-test/app.py
Scanned: 2016-10-25 23:30:58.059484
No vulnerabilities found.


andela-mochieng/flask-practice-tutorial
https://github.com/andela-mochieng/flask-practice-tutorial
Entry file: flask-practice-tutorial/app/__init__.py
Scanned: 2016-10-25 23:30:59.349394
No vulnerabilities found.


GreenDragonSoft/flask-heroku-template
https://github.com/GreenDragonSoft/flask-heroku-template
Entry file: flask-heroku-template/app.py
Scanned: 2016-10-25 23:31:00.762990
No vulnerabilities found.


mahfuzsust/flask-heroku-intro
https://github.com/mahfuzsust/flask-heroku-intro
Entry file: flask-heroku-intro/app.py
Scanned: 2016-10-25 23:31:02.637057
No vulnerabilities found.


MoodyLyrics/flask
https://github.com/MoodyLyrics/flask
Entry file: None
Scanned: 2016-10-25 23:31:04.936269
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sunshine-sjd/Flask
https://github.com/sunshine-sjd/Flask
Entry file: None
Scanned: 2016-10-25 23:31:05.464422
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

unikatsieben/flask
https://github.com/unikatsieben/flask
Entry file: None
Scanned: 2016-10-25 23:31:05.998167
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Mei-Lin-Chen/Flask
https://github.com/Mei-Lin-Chen/Flask
Entry file: None
Scanned: 2016-10-25 23:31:06.570573
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kakshi3242/Flask
https://github.com/kakshi3242/Flask
Entry file: None
Scanned: 2016-10-25 23:31:08.094369
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dannyec/flask
https://github.com/dannyec/flask
Entry file: None
Scanned: 2016-10-25 23:31:14.617481
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Abirdcfly/flask-blog
https://github.com/Abirdcfly/flask-blog
Entry file: None
Scanned: 2016-10-25 23:31:17.632692
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rainyear/MathModeBot
https://github.com/rainyear/MathModeBot
Entry file: MathModeBot/main.py
Scanned: 2016-10-25 23:31:19.054659
No vulnerabilities found.


jrhuerta/flask-api
https://github.com/jrhuerta/flask-api
Entry file: None
Scanned: 2016-10-25 23:31:19.579272
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jrhuerta/flask-api.

josepablob/flasktaskr
https://github.com/josepablob/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:31:24.140381
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wangduanyang/flasky
https://github.com/wangduanyang/flasky
Entry file: None
Scanned: 2016-10-25 23:31:31.154357
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

srbhtest/flaskwebsite
https://github.com/srbhtest/flaskwebsite
Entry file: flaskwebsite/__init__.py
Scanned: 2016-10-25 23:31:37.508478
No vulnerabilities found.


super452/flasky
https://github.com/super452/flasky
Entry file: None
Scanned: 2016-10-25 23:31:38.030668
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

huachen0216/flaskdemo
https://github.com/huachen0216/flaskdemo
Entry file: None
Scanned: 2016-10-25 23:31:39.565847
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MrLokans/flaskr
https://github.com/MrLokans/flaskr
Entry file: None
Scanned: 2016-10-25 23:31:46.084928
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/MrLokans/flaskr.

citizen-stig/flaskone
https://github.com/citizen-stig/flaskone
Entry file: flaskone/flask_one.py
Scanned: 2016-10-25 23:31:48.385644
No vulnerabilities found.


ifcheung2012/flaskanalysis
https://github.com/ifcheung2012/flaskanalysis
Entry file: flaskanalysis/manage.py
Scanned: 2016-10-25 23:31:49.693949
No vulnerabilities found.


Robotwing/flaskweb
https://github.com/Robotwing/flaskweb
Entry file: None
Scanned: 2016-10-25 23:31:50.229193
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

neo1218/m2m
https://github.com/neo1218/m2m
Entry file: m2m/m2m/app/__init__.py
Scanned: 2016-10-25 23:31:52.641496
No vulnerabilities found.


fhamami/flaskone
https://github.com/fhamami/flaskone
Entry file: flaskone/app/__init__.py
Scanned: 2016-10-25 23:31:54.164063
No vulnerabilities found.


windery/flasky
https://github.com/windery/flasky
Entry file: None
Scanned: 2016-10-25 23:31:54.691259
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kcunning/flask-class-c9
https://github.com/kcunning/flask-class-c9
Entry file: flask-class-c9/flaskclass/app/__init__.py
Scanned: 2016-10-25 23:31:56.142231
Vulnerability 1:
File: flask-class-c9/flaskclass/app/views.py
 > User input at line 38, trigger word ".data": 
	numbers = form.numbers.data
Reassigned in: 
	File: flask-class-c9/flaskclass/app/views.py
	 > Line 48: ret_MAYBE_FUNCTION_NAME = render_template('get_lucky.html',form=form)
	File: flask-class-c9/flaskclass/app/views.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = render_template('get_lucky.html',form=form)
File: flask-class-c9/flaskclass/app/views.py
 > reaches line 45, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('game.html',game_nums=game_nums, player_nums=numbers, wins=wins)



MarHelen/FlaskLogin
https://github.com/MarHelen/FlaskLogin
Entry file: FlaskLogin/sql_declarative.py
Scanned: 2016-10-25 23:32:00.413793
Vulnerability 1:
File: FlaskLogin/first.py
 > User input at line 63, trigger word "get(": 
	email = request.form.get('email')
Reassigned in: 
	File: FlaskLogin/first.py
	 > Line 70: user = User(email, request.form.get('pw'))
File: FlaskLogin/first.py
 > reaches line 65, trigger word "filter(": 
	temp_user_set = User.query.filter(User.email == email).first()



tangza/FlaskAPP
https://github.com/tangza/FlaskAPP
Entry file: None
Scanned: 2016-10-25 23:32:00.980488
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

louiskun/flaskGIT
https://github.com/louiskun/flaskGIT
Entry file: flaskGIT/sessionmail.py
Scanned: 2016-10-25 23:32:05.561376
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flaskGIT/venv/lib/python2.7/sre_compile.py

narakai/FlaskDemo
https://github.com/narakai/FlaskDemo
Entry file: FlaskDemo/flask_demo.py
Scanned: 2016-10-25 23:32:06.927031
No vulnerabilities found.


sethblack/python-flask-pixel-tracking
https://github.com/sethblack/python-flask-pixel-tracking
Entry file: python-flask-pixel-tracking/pfpt/main.py
Scanned: 2016-10-25 23:32:08.427040
No vulnerabilities found.


kloudsec/py-webkit2png-flask-api
https://github.com/kloudsec/py-webkit2png-flask-api
Entry file: py-webkit2png-flask-api/api/app.py
Scanned: 2016-10-25 23:32:10.367772
Vulnerability 1:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 25, trigger word "get(": 
	url = request.args.get('url', None)
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
File: py-webkit2png-flask-api/api/web.py
 > reaches line 46, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 2:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 26, trigger word "get(": 
	width = int(request.args.get('width', 400))
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 33: x_width = int(width / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 79: worked_image = img.crop((0, 0, x_width, x_height))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 80: worked_image = worked_image.resize((width, height), Image.ANTIALIAS)
File: py-webkit2png-flask-api/api/web.py
 > reaches line 46, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 3:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 27, trigger word "get(": 
	height = int(request.args.get('height', 400))
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 34: x_height = int(height / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 79: worked_image = img.crop((0, 0, x_width, x_height))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 80: worked_image = worked_image.resize((width, height), Image.ANTIALIAS)
File: py-webkit2png-flask-api/api/web.py
 > reaches line 46, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 4:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 28, trigger word "get(": 
	scale = float(request.args.get('scale', 0.5))
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 33: x_width = int(width / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 34: x_height = int(height / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 79: worked_image = img.crop((0, 0, x_width, x_height))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 80: worked_image = worked_image.resize((width, height), Image.ANTIALIAS)
File: py-webkit2png-flask-api/api/web.py
 > reaches line 46, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 5:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 25, trigger word "get(": 
	url = request.args.get('url', None)
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
File: py-webkit2png-flask-api/api/web.py
 > reaches line 83, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 6:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 26, trigger word "get(": 
	width = int(request.args.get('width', 400))
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 33: x_width = int(width / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 79: worked_image = img.crop((0, 0, x_width, x_height))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 80: worked_image = worked_image.resize((width, height), Image.ANTIALIAS)
File: py-webkit2png-flask-api/api/web.py
 > reaches line 83, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 7:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 27, trigger word "get(": 
	height = int(request.args.get('height', 400))
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 34: x_height = int(height / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 79: worked_image = img.crop((0, 0, x_width, x_height))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 80: worked_image = worked_image.resize((width, height), Image.ANTIALIAS)
File: py-webkit2png-flask-api/api/web.py
 > reaches line 83, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')

Vulnerability 8:
File: py-webkit2png-flask-api/api/web.py
 > User input at line 28, trigger word "get(": 
	scale = float(request.args.get('scale', 0.5))
Reassigned in: 
	File: py-webkit2png-flask-api/api/web.py
	 > Line 33: x_width = int(width / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 34: x_height = int(height / scale)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 36: params = 'url''width''height''scale'urlwidthheightscale
	File: py-webkit2png-flask-api/api/web.py
	 > Line 43: cache_filename = slugify(json.dumps(params))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 44: cache_filepath = os.path.join(RESOURCES_FOLDER_PATH, '%s.png' % cache_filename)
	File: py-webkit2png-flask-api/api/web.py
	 > Line 72: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 75: ret_MAYBE_FUNCTION_NAME = send_file(DEFAULT_IMAGE_PLACEHOLDER,mimetype='image/png')
	File: py-webkit2png-flask-api/api/web.py
	 > Line 79: worked_image = img.crop((0, 0, x_width, x_height))
	File: py-webkit2png-flask-api/api/web.py
	 > Line 80: worked_image = worked_image.resize((width, height), Image.ANTIALIAS)
File: py-webkit2png-flask-api/api/web.py
 > reaches line 83, trigger word "send_file(": 
	ret_MAYBE_FUNCTION_NAME = send_file(cache_filepath,mimetype='image/png')



jeffreybergman/flask-blog
https://github.com/jeffreybergman/flask-blog
Entry file: None
Scanned: 2016-10-25 23:32:10.904669
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

s-kovacevic/elearning-flask
https://github.com/s-kovacevic/elearning-flask
Entry file: elearning-flask/main.py
Scanned: 2016-10-25 23:32:12.360126
Vulnerability 1:
File: elearning-flask/main.py
 > User input at line 84, trigger word ".data": 
	user = User(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 69: user = User()
	File: elearning-flask/main.py
	 > Line 73: user = User()
	File: elearning-flask/main.py
	 > Line 78: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 80: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 86: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 88: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 71, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'user.to_jsonapi())

Vulnerability 2:
File: elearning-flask/main.py
 > User input at line 84, trigger word ".data": 
	user = User(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 69: user = User()
	File: elearning-flask/main.py
	 > Line 73: user = User()
	File: elearning-flask/main.py
	 > Line 78: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 80: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 86: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 88: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 74, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[user.to_jsonapi() for user in user.get_many()])

Vulnerability 3:
File: elearning-flask/main.py
 > User input at line 116, trigger word ".data": 
	question = Question(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 97: question = Question()
	File: elearning-flask/main.py
	 > Line 101: question = Question()
	File: elearning-flask/main.py
	 > Line 110: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 112: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 120: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 99, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'question.to_jsonapi())

Vulnerability 4:
File: elearning-flask/main.py
 > User input at line 116, trigger word ".data": 
	question = Question(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 97: question = Question()
	File: elearning-flask/main.py
	 > Line 101: question = Question()
	File: elearning-flask/main.py
	 > Line 110: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 112: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 120: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 102, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[question.to_jsonapi() for question in question.get_many()])

Vulnerability 5:
File: elearning-flask/main.py
 > User input at line 148, trigger word ".data": 
	category = Category(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 129: category = Category()
	File: elearning-flask/main.py
	 > Line 133: category = Category()
	File: elearning-flask/main.py
	 > Line 142: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 150: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 152: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 131, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'category.to_jsonapi())

Vulnerability 6:
File: elearning-flask/main.py
 > User input at line 148, trigger word ".data": 
	category = Category(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 129: category = Category()
	File: elearning-flask/main.py
	 > Line 133: category = Category()
	File: elearning-flask/main.py
	 > Line 142: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 144: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 150: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 152: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 134, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[category.to_jsonapi() for category in category.get_many()])

Vulnerability 7:
File: elearning-flask/main.py
 > User input at line 180, trigger word ".data": 
	answer = Answer(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 161: answer = Answer()
	File: elearning-flask/main.py
	 > Line 165: answer = Answer()
	File: elearning-flask/main.py
	 > Line 174: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 176: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 184: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 163, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'answer.to_jsonapi())

Vulnerability 8:
File: elearning-flask/main.py
 > User input at line 180, trigger word ".data": 
	answer = Answer(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 161: answer = Answer()
	File: elearning-flask/main.py
	 > Line 165: answer = Answer()
	File: elearning-flask/main.py
	 > Line 174: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 176: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 184: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 166, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[answer.to_jsonapi() for answer in answer.get_many()])

Vulnerability 9:
File: elearning-flask/main.py
 > User input at line 212, trigger word ".data": 
	score = Score(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 193: score = Score()
	File: elearning-flask/main.py
	 > Line 197: score = Score()
	File: elearning-flask/main.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 208: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 216: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 195, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'score.to_jsonapi())

Vulnerability 10:
File: elearning-flask/main.py
 > User input at line 212, trigger word ".data": 
	score = Score(json_obj=request.data)
Reassigned in: 
	File: elearning-flask/main.py
	 > Line 193: score = Score()
	File: elearning-flask/main.py
	 > Line 197: score = Score()
	File: elearning-flask/main.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 208: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
	File: elearning-flask/main.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = jsonify()
	File: elearning-flask/main.py
	 > Line 216: ret_MAYBE_FUNCTION_NAME = jsonify('error''message'400'Api error')
File: elearning-flask/main.py
 > reaches line 198, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('data'[score.to_jsonapi() for score in score.get_many()])



logicalicy/flask_boostrap
https://github.com/logicalicy/flask_boostrap
Entry file: flask_boostrap/app/__init__.py
Scanned: 2016-10-25 23:32:13.773549
No vulnerabilities found.


MrLokans/discover_flask
https://github.com/MrLokans/discover_flask
Entry file: discover_flask/app.py
Scanned: 2016-10-25 23:32:15.447476
No vulnerabilities found.


Karambir-K/Flask-Intro
https://github.com/Karambir-K/Flask-Intro
Entry file: Flask-Intro/app.py
Scanned: 2016-10-25 23:32:16.887925
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

xiazhe/flask-demo
https://github.com/xiazhe/flask-demo
Entry file: flask-demo/app/__init__.py
Scanned: 2016-10-25 23:32:18.313791
No vulnerabilities found.


nikoheikkila/flask-blog
https://github.com/nikoheikkila/flask-blog
Entry file: None
Scanned: 2016-10-25 23:32:18.842352
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Vatsalgame/flask-try
https://github.com/Vatsalgame/flask-try
Entry file: None
Scanned: 2016-10-25 23:32:19.378933
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Vatsalgame/flask-try.

bbozhev/flask-test
https://github.com/bbozhev/flask-test
Entry file: flask-test/app/__init__.py
Scanned: 2016-10-25 23:32:26.566102
No vulnerabilities found.


tim1978/flask-blog
https://github.com/tim1978/flask-blog
Entry file: None
Scanned: 2016-10-25 23:32:30.708451
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

danielcodes/flask-practice
https://github.com/danielcodes/flask-practice
Entry file: flask-practice/flask-file-upload/app.py
Scanned: 2016-10-25 23:32:32.455430
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhiweicai/flask-hello
https://github.com/zhiweicai/flask-hello
Entry file: flask-hello/flask-hello.py
Scanned: 2016-10-25 23:32:37.745232
No vulnerabilities found.


GreenDragonSoft/refundmytrain-flask
https://github.com/GreenDragonSoft/refundmytrain-flask
Entry file: refundmytrain-flask/app.py
Scanned: 2016-10-25 23:32:39.156938
No vulnerabilities found.


keithleit/flask-demo
https://github.com/keithleit/flask-demo
Entry file: flask-demo/app.py
Scanned: 2016-10-25 23:32:40.522616
Vulnerability 1:
File: flask-demo/app.py
 > User input at line 17, trigger word "get(": 
	stocks = request.args.get('stock')
Reassigned in: 
	File: flask-demo/app.py
	 > Line 19: stocks = 'goog, fb'
File: flask-demo/app.py
 > reaches line 57, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',script=script, div=div, code=stocks, checks=checks, error=error)



wstcpyt/flask-demo
https://github.com/wstcpyt/flask-demo
Entry file: flask-demo/app.py
Scanned: 2016-10-25 23:32:47.856101
Vulnerability 1:
File: flask-demo/app.py
 > User input at line 36, trigger word "form[": 
	stock_sticker = 'WIKI/' + request.form['stocksticker']
Reassigned in: 
	File: flask-demo/app.py
	 > Line 47: stockdata = Quandl.get(stock_sticker,returns='numpy', trim_start=firstdaystr, trim_end=lastdaystr)
	File: flask-demo/app.py
	 > Line 60: ret_MAYBE_FUNCTION_NAME = render_template('index.html',errormessage=errormessage)
File: flask-demo/app.py
 > reaches line 57, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('graph.html',script=script, div=div, text=stock_sticker)



geraldmc/flask-template
https://github.com/geraldmc/flask-template
Entry file: flask-template/app/__init__.py
Scanned: 2016-10-25 23:32:50.068624
No vulnerabilities found.


jordo1ken/flask-fibonacci
https://github.com/jordo1ken/flask-fibonacci
Entry file: flask-fibonacci/Fibonacci.py
Scanned: 2016-10-25 23:32:51.462270
No vulnerabilities found.


bodzio2k/flask-blueprint
https://github.com/bodzio2k/flask-blueprint
Entry file: flask-blueprint/run.py
Scanned: 2016-10-25 23:32:52.751492
No vulnerabilities found.


PeachDew/flask_tutorialwebapp
https://github.com/PeachDew/flask_tutorialwebapp
Entry file: flask_tutorialwebapp/app.py
Scanned: 2016-10-25 23:32:57.853991
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

ktomlee/flask_init
https://github.com/ktomlee/flask_init
Entry file: flask_init/hello.py
Scanned: 2016-10-25 23:32:59.173678
No vulnerabilities found.


abunuwas/flask_experiments
https://github.com/abunuwas/flask_experiments
Entry file: None
Scanned: 2016-10-25 23:33:00.198289
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/abunuwas/flask_experiments.

Joryang/flask_videos
https://github.com/Joryang/flask_videos
Entry file: flask_videos/videos.py
Scanned: 2016-10-25 23:33:02.295813
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

AvijitGhosh82/appengine_flask
https://github.com/AvijitGhosh82/appengine_flask
Entry file: appengine_flask/main.py
Scanned: 2016-10-25 23:33:05.244295
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

sadev1/flask-demo
https://github.com/sadev1/flask-demo
Entry file: flask-demo/app.py
Scanned: 2016-10-25 23:33:06.604904
No vulnerabilities found.


markleung1969/flask-base
https://github.com/markleung1969/flask-base
Entry file: flask-base/init.py
Scanned: 2016-10-25 23:33:07.940756
Vulnerability 1:
File: flask-base/apps/auth/views.py
 > User input at line 112, trigger word "get(": 
	user_id = session.get('user_id')
Reassigned in: 
	File: flask-base/apps/auth/views.py
	 > Line 118: resp = 'c''m''d'0'登陆成功''user_id''email''username''group''status'user_idemailusernamegroupstatus
File: flask-base/apps/auth/views.py
 > reaches line 129, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(resp)

Vulnerability 2:
File: flask-base/apps/auth/views.py
 > User input at line 113, trigger word "get(": 
	username = session.get('username')
Reassigned in: 
	File: flask-base/apps/auth/views.py
	 > Line 118: resp = 'c''m''d'0'登陆成功''user_id''email''username''group''status'user_idemailusernamegroupstatus
File: flask-base/apps/auth/views.py
 > reaches line 129, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(resp)

Vulnerability 3:
File: flask-base/apps/auth/views.py
 > User input at line 114, trigger word "get(": 
	email = session.get('email')
Reassigned in: 
	File: flask-base/apps/auth/views.py
	 > Line 118: resp = 'c''m''d'0'登陆成功''user_id''email''username''group''status'user_idemailusernamegroupstatus
File: flask-base/apps/auth/views.py
 > reaches line 129, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(resp)

Vulnerability 4:
File: flask-base/apps/auth/views.py
 > User input at line 115, trigger word "get(": 
	status = session.get('status')
Reassigned in: 
	File: flask-base/apps/auth/views.py
	 > Line 118: resp = 'c''m''d'0'登陆成功''user_id''email''username''group''status'user_idemailusernamegroupstatus
File: flask-base/apps/auth/views.py
 > reaches line 129, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(resp)

Vulnerability 5:
File: flask-base/apps/auth/views.py
 > User input at line 116, trigger word "get(": 
	group = session.get('group')
Reassigned in: 
	File: flask-base/apps/auth/views.py
	 > Line 118: resp = 'c''m''d'0'登陆成功''user_id''email''username''group''status'user_idemailusernamegroupstatus
File: flask-base/apps/auth/views.py
 > reaches line 129, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(resp)



NickyThreeNames/flask_blog
https://github.com/NickyThreeNames/flask_blog
Entry file: flask_blog/blog.py
Scanned: 2016-10-25 23:33:09.225633
No vulnerabilities found.


zmrfzn/Flask_Sample
https://github.com/zmrfzn/Flask_Sample
Entry file: Flask_Sample/app.py
Scanned: 2016-10-25 23:33:12.403893
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

JesseLabruyere/flask_api
https://github.com/JesseLabruyere/flask_api
Entry file: flask_api/flask_project/routes.py
Scanned: 2016-10-25 23:33:16.825883
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_api/flask_project/venv/lib/python2.7/sre_compile.py

butovichev/flask-blog
https://github.com/butovichev/flask-blog
Entry file: None
Scanned: 2016-10-25 23:33:17.407059
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pyx/flask-simplemde
https://github.com/pyx/flask-simplemde
Entry file: flask-simplemde/examples/simple/app.py
Scanned: 2016-10-25 23:33:19.119751
No vulnerabilities found.


rholmes69/flasky2_1
https://github.com/rholmes69/flasky2_1
Entry file: flasky2_1/app/__init__.py
Scanned: 2016-10-25 23:33:20.740463
Vulnerability 1:
File: flasky2_1/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 19: next = None
File: flasky2_1/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flasky2_1/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 19: next = None
File: flasky2_1/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flasky2_1/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flasky2_1/app/api_1_0/posts.py
	 > Line 19: next = None
File: flasky2_1/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flasky2_1/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flasky2_1/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flasky2_1/app/api_1_0/users.py
	 > Line 23: next = None
File: flasky2_1/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flasky2_1/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flasky2_1/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flasky2_1/app/api_1_0/users.py
	 > Line 23: next = None
File: flasky2_1/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flasky2_1/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flasky2_1/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flasky2_1/app/api_1_0/users.py
	 > Line 23: next = None
File: flasky2_1/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flasky2_1/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flasky2_1/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flasky2_1/app/api_1_0/users.py
	 > Line 45: next = None
File: flasky2_1/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flasky2_1/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flasky2_1/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flasky2_1/app/api_1_0/users.py
	 > Line 45: next = None
File: flasky2_1/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flasky2_1/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flasky2_1/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flasky2_1/app/api_1_0/users.py
	 > Line 45: next = None
File: flasky2_1/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flasky2_1/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 18: next = None
File: flasky2_1/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flasky2_1/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 18: next = None
File: flasky2_1/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flasky2_1/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 18: next = None
File: flasky2_1/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flasky2_1/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 46: next = None
File: flasky2_1/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flasky2_1/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 46: next = None
File: flasky2_1/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flasky2_1/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flasky2_1/app/api_1_0/comments.py
	 > Line 46: next = None
File: flasky2_1/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flasky2_1/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/main/views.py
	 > Line 55: posts = pagination.items
	File: flasky2_1/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky2_1/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flasky2_1/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 45: show_followed = False
	File: flasky2_1/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky2_1/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flasky2_1/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/main/views.py
	 > Line 67: posts = pagination.items
File: flasky2_1/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flasky2_1/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flasky2_1/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/main/views.py
	 > Line 134: comments = pagination.items
	File: flasky2_1/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flasky2_1/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flasky2_1/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flasky2_1/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky2_1/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flasky2_1/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flasky2_1/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flasky2_1/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flasky2_1/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flasky2_1/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flasky2_1/app/main/views.py
	 > Line 246: comments = pagination.items
File: flasky2_1/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



ChellsChen/FlaskSocketIOChart
https://github.com/ChellsChen/FlaskSocketIOChart
Entry file: FlaskSocketIOChart/app/__init__.py
Scanned: 2016-10-25 23:33:22.885009
Vulnerability 1:
File: FlaskSocketIOChart/app/main/routes.py
 > User input at line 31, trigger word "get(": 
	name = session.get('name', '')
Reassigned in: 
	File: FlaskSocketIOChart/app/main/routes.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskSocketIOChart/app/main/routes.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('chat.html',name=name, room=room)

Vulnerability 2:
File: FlaskSocketIOChart/app/main/routes.py
 > User input at line 32, trigger word "get(": 
	room = session.get('room', '')
Reassigned in: 
	File: FlaskSocketIOChart/app/main/routes.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskSocketIOChart/app/main/routes.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('chat.html',name=name, room=room)



jcerise/openspacesboard-python
https://github.com/jcerise/openspacesboard-python
Entry file: openspacesboard-python/osbp_app/openspacesboard.py
Scanned: 2016-10-25 23:33:25.348027
Vulnerability 1:
File: openspacesboard-python/osbp_app/openspacesboard.py
 > User input at line 44, trigger word "get(": 
	me = github.get('user')
Reassigned in: 
	File: openspacesboard-python/osbp_app/openspacesboard.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
File: openspacesboard-python/osbp_app/openspacesboard.py
 > reaches line 45, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(me.data)

Vulnerability 2:
File: openspacesboard-python/osbp_app/openspacesboard.py
 > User input at line 69, trigger word "get(": 
	me = github.get('user')
Reassigned in: 
	File: openspacesboard-python/osbp_app/openspacesboard.py
	 > Line 64: ret_MAYBE_FUNCTION_NAME = 'Access denied: reason=%s error=%s' % (request.args['error'], request.args['error_description'])
File: openspacesboard-python/osbp_app/openspacesboard.py
 > reaches line 70, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(me.data)

Vulnerability 3:
File: openspacesboard-python/osbp_app/mod_spaces/controllers.py
 > User input at line 29, trigger word "get(": 
	space = ConferenceSpace.query.get(space_id)
Reassigned in: 
	File: openspacesboard-python/osbp_app/mod_spaces/controllers.py
	 > Line 32: space = dict(id=space.id, space_name=space.space_name, location_id=space.location_id, event_date=space.event_date, start_time=space.start_time, end_time=space.end_time)
File: openspacesboard-python/osbp_app/mod_spaces/controllers.py
 > reaches line 34, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('space'space)

Vulnerability 4:
File: openspacesboard-python/osbp_app/mod_conference_sessions/controllers.py
 > User input at line 39, trigger word "get(": 
	session = ConferenceSession.query.get(session_id)
Reassigned in: 
	File: openspacesboard-python/osbp_app/mod_conference_sessions/controllers.py
	 > Line 42: session_space = session.space
	File: openspacesboard-python/osbp_app/mod_conference_sessions/controllers.py
	 > Line 43: session_location = session_space.location
	File: openspacesboard-python/osbp_app/mod_conference_sessions/controllers.py
	 > Line 44: timespan = 'start_time''end_time'session_space.start_timesession_space.end_time
	File: openspacesboard-python/osbp_app/mod_conference_sessions/controllers.py
	 > Line 45: session = dict(id=session.id, title=session.title, description=session.description, convener=session.convener, space_name=session_space.space_name, location=session_location.name, date=session_space.event_date, timespan=timespan)
File: openspacesboard-python/osbp_app/mod_conference_sessions/controllers.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('session'session)

Vulnerability 5:
File: openspacesboard-python/osbp_app/mod_locations/controllers.py
 > User input at line 27, trigger word "get(": 
	location = ConferenceLocation.query.get(location_id)
Reassigned in: 
	File: openspacesboard-python/osbp_app/mod_locations/controllers.py
	 > Line 30: location = dict(id=location.id, name=location.name)
File: openspacesboard-python/osbp_app/mod_locations/controllers.py
 > reaches line 31, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('location'location)



icecraft/ZhiHuDaemon
https://github.com/icecraft/ZhiHuDaemon
Entry file: ZhiHuDaemon/app/__init__.py
Scanned: 2016-10-25 23:33:26.954768
Vulnerability 1:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 16: pagination = Question.query.order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['INDEX_QUESTIONS_PER_PAGE'], error_out=False)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 19: questions = pagination.items
File: ZhiHuDaemon/app/main/views.py
 > reaches line 20, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',questions=questions, pagination=pagination)

Vulnerability 2:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 26, trigger word "form[": 
	keyword = '%' + request.form['search'] + '%'
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
	File: ZhiHuDaemon/app/main/views.py
	 > Line 28: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
File: ZhiHuDaemon/app/main/views.py
 > reaches line 30, trigger word "filter(": 
	pagination = Question.query.filter(Question.title.like(keyword)).order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['INDEX_QUESTIONS_PER_PAGE'], error_out=False)

Vulnerability 3:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 29, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 33: questions = pagination.items
	File: ZhiHuDaemon/app/main/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
	File: ZhiHuDaemon/app/main/views.py
	 > Line 28: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
File: ZhiHuDaemon/app/main/views.py
 > reaches line 30, trigger word "filter(": 
	pagination = Question.query.filter(Question.title.like(keyword)).order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['INDEX_QUESTIONS_PER_PAGE'], error_out=False)

Vulnerability 4:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 26, trigger word "form[": 
	keyword = '%' + request.form['search'] + '%'
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
	File: ZhiHuDaemon/app/main/views.py
	 > Line 28: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
File: ZhiHuDaemon/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search.html',questions=questions, pagination=pagination, keyword=keyword[1-1])

Vulnerability 5:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 29, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 33: questions = pagination.items
	File: ZhiHuDaemon/app/main/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
	File: ZhiHuDaemon/app/main/views.py
	 > Line 28: ret_MAYBE_FUNCTION_NAME = render_template('search.html')
File: ZhiHuDaemon/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search.html',questions=questions, pagination=pagination, keyword=keyword[1-1])

Vulnerability 6:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 100, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 101: askpagination = Question.query.filter_by(author_id=user.id).order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['PROFILE_QUESTIONS_PER_PAGE'], error_out=False)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 104: questions = askpagination.items
	File: ZhiHuDaemon/app/main/views.py
	 > Line 105: page = request.args.get('page', 1,type=int)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 106: anspagination = Answer.query.filter_by(author_id=user.id).order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['PROFILE_QUESTIONS_PER_PAGE'], error_out=False)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 109: questions = askpagination.items
	File: ZhiHuDaemon/app/main/views.py
	 > Line 110: answers = anspagination.items
File: ZhiHuDaemon/app/main/views.py
 > reaches line 111, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, questions=questions, answers=answers, askpagination=askpagination, anspagination=anspagination)

Vulnerability 7:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 105, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 100: page = request.args.get('page', 1,type=int)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 101: askpagination = Question.query.filter_by(author_id=user.id).order_by(Question.timestamp.desc()).paginate(page,per_page=current_app.config['PROFILE_QUESTIONS_PER_PAGE'], error_out=False)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 104: questions = askpagination.items
	File: ZhiHuDaemon/app/main/views.py
	 > Line 106: anspagination = Answer.query.filter_by(author_id=user.id).order_by(Answer.timestamp.desc()).paginate(page,per_page=current_app.config['PROFILE_QUESTIONS_PER_PAGE'], error_out=False)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 109: questions = askpagination.items
	File: ZhiHuDaemon/app/main/views.py
	 > Line 110: answers = anspagination.items
File: ZhiHuDaemon/app/main/views.py
 > reaches line 111, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, questions=questions, answers=answers, askpagination=askpagination, anspagination=anspagination)

Vulnerability 8:
File: ZhiHuDaemon/app/main/views.py
 > User input at line 145, trigger word "get(": 
	answer_id = request.args.get('answer_id', -1,type=int)
Reassigned in: 
	File: ZhiHuDaemon/app/main/views.py
	 > Line 147: answer = Answer.query.filter_by(id=answer_id)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 150: answer = Answer(answer=answerForm.body.data, author=current_user._get_current_object(), authorname=current_user.username, question=question)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 159: comment = Comment(comment=commentForm.body.data, author=current_user._get_current_object(), authorname=current_user.username, answer=answer)
	File: ZhiHuDaemon/app/main/views.py
	 > Line 155: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.question',id=id))
	File: ZhiHuDaemon/app/main/views.py
	 > Line 164: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.question',id=id))
File: ZhiHuDaemon/app/main/views.py
 > reaches line 168, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('question.html',question=question, asker=asker, answerForm=answerForm, answers=answers, comments=comments, commentForm=commentForm, answer_id=answer_id)



AntonisFK/Login_registration_Flask
https://github.com/AntonisFK/Login_registration_Flask
Entry file: None
Scanned: 2016-10-25 23:33:28.233102
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/AntonisFK/Login_registration_Flask.

liuenyan/micro-flask-blog
https://github.com/liuenyan/micro-flask-blog
Entry file: micro-flask-blog/app/__init__.py
Scanned: 2016-10-25 23:33:31.699963
Vulnerability 1:
File: micro-flask-blog/app/main/views.py
 > User input at line 17, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: micro-flask-blog/app/main/views.py
	 > Line 18: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: micro-flask-blog/app/main/views.py
	 > Line 19: posts = pagination.items
File: micro-flask-blog/app/main/views.py
 > reaches line 20, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',posts=posts, pagination=pagination)

Vulnerability 2:
File: micro-flask-blog/app/main/views.py
 > User input at line 124, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: micro-flask-blog/app/main/views.py
	 > Line 125: pagination = Post.query.filter_by(category_id=category_id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: micro-flask-blog/app/main/views.py
	 > Line 126: posts = pagination.items
File: micro-flask-blog/app/main/views.py
 > reaches line 127, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('category.html',posts=posts, pagination=pagination, username=username, category_id=category_id)



jeseon/flask-by-example
https://github.com/jeseon/flask-by-example
Entry file: None
Scanned: 2016-10-25 23:33:33.090980
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jeseon/flask-by-example.

maxidrum/Flask_and_Mongo
https://github.com/maxidrum/Flask_and_Mongo
Entry file: Flask_and_Mongo/application/__init__.py
Scanned: 2016-10-25 23:33:41.442168
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mdublin/Flask-SPA-API-Template
https://github.com/mdublin/Flask-SPA-API-Template
Entry file: Flask-SPA-API-Template/posts/__init__.py
Scanned: 2016-10-25 23:33:51.577406
Vulnerability 1:
File: Flask-SPA-API-Template/posts/api.py
 > User input at line 32, trigger word "get(": 
	title_like = request.args.get('title_like')
Reassigned in: 
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 37: posts = posts.order_by(models.Post.id)
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 47: data = json.dumps([post.as_dictionary() for post in posts])
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = Response(data, 200,mimetype='application/json')
	File: Flask-SPA-API-Template/posts/api.py
	 > Line 34: posts = session.query(models.Post)
File: Flask-SPA-API-Template/posts/api.py
 > reaches line 36, trigger word "filter(": 
	posts = posts.filter(models.Post.title.contains(title_like))



keimos/flask-rest-sql
https://github.com/keimos/flask-rest-sql
Entry file: flask-rest-sql/app.py
Scanned: 2016-10-25 23:33:52.942154
No vulnerabilities found.


jeffreybergman/flask-hello-world
https://github.com/jeffreybergman/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:33:53.460965
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zolaneta/todo_flask_application
https://github.com/zolaneta/todo_flask_application
Entry file: None
Scanned: 2016-10-25 23:33:55.235529
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zolaneta/todo_flask_application.

baskervilski/flask-hello-world
https://github.com/baskervilski/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:33:55.804687
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Bbouley/flask-by-example
https://github.com/Bbouley/flask-by-example
Entry file: None
Scanned: 2016-10-25 23:33:59.336547
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Bbouley/flask-by-example.

wilbert-abreu/realtime_slack_flask_app
https://github.com/wilbert-abreu/realtime_slack_flask_app
Entry file: None
Scanned: 2016-10-25 23:34:05.596249
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ellachao/Flask_GmailAPI_Example
https://github.com/ellachao/Flask_GmailAPI_Example
Entry file: Flask_GmailAPI_Example/main.py
Scanned: 2016-10-25 23:34:06.918626
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

NJIT-SIG-WEBDEV/Flask-URL-Shortner
https://github.com/NJIT-SIG-WEBDEV/Flask-URL-Shortner
Entry file: Flask-URL-Shortner/app.py
Scanned: 2016-10-25 23:34:08.474827
Vulnerability 1:
File: Flask-URL-Shortner/app.py
 > User input at line 30, trigger word ".data": 
	site_id = mongo.db.links.find_one_or_404('url'form.url.data)['site_id']
Reassigned in: 
	File: Flask-URL-Shortner/app.py
	 > Line 33: site_id = ''
	File: Flask-URL-Shortner/app.py
	 > Line 35: site_id += random.choice(string.ascii_letters)
	File: Flask-URL-Shortner/app.py
	 > Line 37: data = 'site_id''url'site_idform.url.data
File: Flask-URL-Shortner/app.py
 > reaches line 43, trigger word "url_for(": 
	flash('URL created! <a href="{0}" target="_blank">{0}</a> redirects to {1}.'.format(url_for('homepage',_external=True) + site_id, form.url.data))

Vulnerability 2:
File: Flask-URL-Shortner/app.py
 > User input at line 30, trigger word ".data": 
	site_id = mongo.db.links.find_one_or_404('url'form.url.data)['site_id']
Reassigned in: 
	File: Flask-URL-Shortner/app.py
	 > Line 33: site_id = ''
	File: Flask-URL-Shortner/app.py
	 > Line 35: site_id += random.choice(string.ascii_letters)
	File: Flask-URL-Shortner/app.py
	 > Line 37: data = 'site_id''url'site_idform.url.data
File: Flask-URL-Shortner/app.py
 > reaches line 43, trigger word "flash(": 
	flash('URL created! <a href="{0}" target="_blank">{0}</a> redirects to {1}.'.format(url_for('homepage',_external=True) + site_id, form.url.data))



hilmarh/island-python-flask-example
https://github.com/hilmarh/island-python-flask-example
Entry file: island-python-flask-example/app/__init__.py
Scanned: 2016-10-25 23:34:09.908854
No vulnerabilities found.


dv3/sample-Flask-Application
https://github.com/dv3/sample-Flask-Application
Entry file: None
Scanned: 2016-10-25 23:34:11.220611
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dv3/sample-Flask-Application.

mml1/flask_multiple_forms
https://github.com/mml1/flask_multiple_forms
Entry file: flask_multiple_forms/server.py
Scanned: 2016-10-25 23:34:12.532676
No vulnerabilities found.


jideobs/flask-gae-ndb-starter
https://github.com/jideobs/flask-gae-ndb-starter
Entry file: flask-gae-ndb-starter/server/main.py
Scanned: 2016-10-25 23:34:14.101622
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

marcabomb/flask_hello_world
https://github.com/marcabomb/flask_hello_world
Entry file: flask_hello_world/app.py
Scanned: 2016-10-25 23:34:18.260453
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kevin-js/azure-flask-tutorial
https://github.com/kevin-js/azure-flask-tutorial
Entry file: azure-flask-tutorial/run.py
Scanned: 2016-10-25 23:34:19.610496
No vulnerabilities found.


ShawnPengxy/Flask-madeBlog
https://github.com/ShawnPengxy/Flask-madeBlog
Entry file: Flask-madeBlog/app/__init__.py
Scanned: 2016-10-25 23:34:25.275745
Vulnerability 1:
File: Flask-madeBlog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 19: next = None
File: Flask-madeBlog/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: Flask-madeBlog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 19: next = None
File: Flask-madeBlog/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: Flask-madeBlog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: Flask-madeBlog/app/api_1_0/posts.py
	 > Line 19: next = None
File: Flask-madeBlog/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: Flask-madeBlog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 23: next = None
File: Flask-madeBlog/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: Flask-madeBlog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 23: next = None
File: Flask-madeBlog/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: Flask-madeBlog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 23: next = None
File: Flask-madeBlog/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: Flask-madeBlog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 45: next = None
File: Flask-madeBlog/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: Flask-madeBlog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 45: next = None
File: Flask-madeBlog/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: Flask-madeBlog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: Flask-madeBlog/app/api_1_0/users.py
	 > Line 45: next = None
File: Flask-madeBlog/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: Flask-madeBlog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 18: next = None
File: Flask-madeBlog/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: Flask-madeBlog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 18: next = None
File: Flask-madeBlog/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: Flask-madeBlog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 18: next = None
File: Flask-madeBlog/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: Flask-madeBlog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 46: next = None
File: Flask-madeBlog/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: Flask-madeBlog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 46: next = None
File: Flask-madeBlog/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: Flask-madeBlog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: Flask-madeBlog/app/api_1_0/comments.py
	 > Line 46: next = None
File: Flask-madeBlog/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: Flask-madeBlog/app/main/views.py
 > User input at line 48, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 56: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/main/views.py
	 > Line 59: posts = pagination.items
	File: Flask-madeBlog/app/main/views.py
	 > Line 47: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-madeBlog/app/main/views.py
 > reaches line 60, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: Flask-madeBlog/app/main/views.py
 > User input at line 51, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 49: show_followed = False
	File: Flask-madeBlog/app/main/views.py
	 > Line 47: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-madeBlog/app/main/views.py
 > reaches line 60, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: Flask-madeBlog/app/main/views.py
 > User input at line 67, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 68: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/main/views.py
	 > Line 71: posts = pagination.items
File: Flask-madeBlog/app/main/views.py
 > reaches line 72, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: Flask-madeBlog/app/main/views.py
 > User input at line 131, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 133: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: Flask-madeBlog/app/main/views.py
	 > Line 135: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/main/views.py
	 > Line 138: comments = pagination.items
	File: Flask-madeBlog/app/main/views.py
	 > Line 130: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: Flask-madeBlog/app/main/views.py
 > reaches line 139, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: Flask-madeBlog/app/main/views.py
 > User input at line 198, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 199: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/main/views.py
	 > Line 202: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: Flask-madeBlog/app/main/views.py
	 > Line 197: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-madeBlog/app/main/views.py
 > reaches line 204, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: Flask-madeBlog/app/main/views.py
 > User input at line 215, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 216: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/main/views.py
	 > Line 219: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: Flask-madeBlog/app/main/views.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-madeBlog/app/main/views.py
 > reaches line 221, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: Flask-madeBlog/app/main/views.py
 > User input at line 246, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-madeBlog/app/main/views.py
	 > Line 247: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Flask-madeBlog/app/main/views.py
	 > Line 250: comments = pagination.items
File: Flask-madeBlog/app/main/views.py
 > reaches line 251, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



vinayraghavan/pyacacemy-flask-workshop
https://github.com/vinayraghavan/pyacacemy-flask-workshop
Entry file: pyacacemy-flask-workshop/bookmarks.py
Scanned: 2016-10-25 23:34:26.677815
No vulnerabilities found.


drbrightside/first-flask-app
https://github.com/drbrightside/first-flask-app
Entry file: first-flask-app/flaskclass/app/__init__.py
Scanned: 2016-10-25 23:34:28.087854
Vulnerability 1:
File: first-flask-app/flaskclass/app/views.py
 > User input at line 38, trigger word ".data": 
	numbers = form.numbers.data
Reassigned in: 
	File: first-flask-app/flaskclass/app/views.py
	 > Line 48: ret_MAYBE_FUNCTION_NAME = render_template('get_lucky.html',form=form)
	File: first-flask-app/flaskclass/app/views.py
	 > Line 50: ret_MAYBE_FUNCTION_NAME = render_template('get_lucky.html',form=form)
File: first-flask-app/flaskclass/app/views.py
 > reaches line 45, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('game.html',game_nums=game_nums, player_nums=numbers, wins=wins)



D10221/gae_flask_ndb_test
https://github.com/D10221/gae_flask_ndb_test
Entry file: gae_flask_ndb_test/main.py
Scanned: 2016-10-25 23:34:29.421872
No vulnerabilities found.


micahcourey/FirstFlaskApp
https://github.com/micahcourey/FirstFlaskApp
Entry file: FirstFlaskApp/flask_app.py
Scanned: 2016-10-25 23:34:30.692394
No vulnerabilities found.


commandknight/cs125-fooddy-flask
https://github.com/commandknight/cs125-fooddy-flask
Entry file: cs125-fooddy-flask/fooddy2.py
Scanned: 2016-10-25 23:34:33.093528
Vulnerability 1:
File: cs125-fooddy-flask/fooddy2.py
 > User input at line 177, trigger word "get(": 
	long = request.form.get('current_location_longitude')
Reassigned in: 
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 195: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine_by_address(current_user.get_id(),address=address))
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(session['lat'], session['long'])]), next_location=location)
File: cs125-fooddy-flask/fooddy2.py
 > reaches line 185, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(lat, long)]))

Vulnerability 2:
File: cs125-fooddy-flask/fooddy2.py
 > User input at line 178, trigger word "get(": 
	lat = request.form.get('current_location_latitude')
Reassigned in: 
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 195: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine_by_address(current_user.get_id(),address=address))
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(session['lat'], session['long'])]), next_location=location)
File: cs125-fooddy-flask/fooddy2.py
 > reaches line 185, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(lat, long)]))

Vulnerability 3:
File: cs125-fooddy-flask/fooddy2.py
 > User input at line 191, trigger word "form[": 
	a1 = request.form['addressline1']
Reassigned in: 
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 194: address = a1 + ' ' + city + ' ' + state
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(session['lat'], session['long'])]), next_location=location)
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 185: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(lat, long)]))
File: cs125-fooddy-flask/fooddy2.py
 > reaches line 195, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine_by_address(current_user.get_id(),address=address))

Vulnerability 4:
File: cs125-fooddy-flask/fooddy2.py
 > User input at line 192, trigger word "form[": 
	city = request.form['addresscity']
Reassigned in: 
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 194: address = a1 + ' ' + city + ' ' + state
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(session['lat'], session['long'])]), next_location=location)
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 185: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(lat, long)]))
File: cs125-fooddy-flask/fooddy2.py
 > reaches line 195, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine_by_address(current_user.get_id(),address=address))

Vulnerability 5:
File: cs125-fooddy-flask/fooddy2.py
 > User input at line 193, trigger word "form[": 
	state = request.form['addressstate']
Reassigned in: 
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 194: address = a1 + ' ' + city + ' ' + state
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 206: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(session['lat'], session['long'])]), next_location=location)
	File: cs125-fooddy-flask/fooddy2.py
	 > Line 185: ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine(current_user.get_id(),coords=[(lat, long)]))
File: cs125-fooddy-flask/fooddy2.py
 > reaches line 195, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('recommended.html',list_results=ranker.get_ranking_by_probabilistic_cosine_by_address(current_user.get_id(),address=address))



GreenDragonSoft/flask-heroku-template
https://github.com/GreenDragonSoft/flask-heroku-template
Entry file: flask-heroku-template/app.py
Scanned: 2016-10-25 23:34:34.487981
No vulnerabilities found.


rfmapp/TheFlaskMegaTutorial
https://github.com/rfmapp/TheFlaskMegaTutorial
Entry file: TheFlaskMegaTutorial/app/__init__.py
Scanned: 2016-10-25 23:34:42.899789
No vulnerabilities found.


JadyLiu/flask
https://github.com/JadyLiu/flask
Entry file: None
Scanned: 2016-10-25 23:34:45.139914
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

candyer/Flask
https://github.com/candyer/Flask
Entry file: None
Scanned: 2016-10-25 23:34:45.668659
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

scripterkaran/flask
https://github.com/scripterkaran/flask
Entry file: None
Scanned: 2016-10-25 23:34:46.188953
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

itsrifat/flask-celery-docker-scale
https://github.com/itsrifat/flask-celery-docker-scale
Entry file: flask-celery-docker-scale/flask-app/app.py
Scanned: 2016-10-25 23:34:47.516138
No vulnerabilities found.


sinscary/Flask-Social-Networking
https://github.com/sinscary/Flask-Social-Networking
Entry file: Flask-Social-Networking/app.py
Scanned: 2016-10-25 23:34:49.453598
Vulnerability 1:
File: Flask-Social-Networking/app.py
 > User input at line 111, trigger word "get(": 
	user = models.User.select().where(models.User.username ** username).get()
Reassigned in: 
	File: Flask-Social-Networking/app.py
	 > Line 118: user = current_user
File: Flask-Social-Networking/app.py
 > reaches line 121, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template(template,stream=stream, user=user)

Vulnerability 2:
File: Flask-Social-Networking/app.py
 > User input at line 134, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 146, trigger word "flash(": 
	flash('You are now following {}'.format(to_user.username), 'success')

Vulnerability 3:
File: Flask-Social-Networking/app.py
 > User input at line 134, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 147, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))

Vulnerability 4:
File: Flask-Social-Networking/app.py
 > User input at line 134, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 147, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))

Vulnerability 5:
File: Flask-Social-Networking/app.py
 > User input at line 153, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 165, trigger word "flash(": 
	flash('You have unfollowed {}'.format(to_user.username), 'success')

Vulnerability 6:
File: Flask-Social-Networking/app.py
 > User input at line 153, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 166, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))

Vulnerability 7:
File: Flask-Social-Networking/app.py
 > User input at line 153, trigger word "get(": 
	to_user = models.User.get(models.User.username ** username)
File: Flask-Social-Networking/app.py
 > reaches line 166, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('stream',username=to_user.username))



osuosl/timesync-frontend-flask
https://github.com/osuosl/timesync-frontend-flask
Entry file: None
Scanned: 2016-10-25 23:34:53.025441
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/osuosl/timesync-frontend-flask.

narakai/flaskblog
https://github.com/narakai/flaskblog
Entry file: None
Scanned: 2016-10-25 23:34:53.544711
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/narakai/flaskblog.

josepablob/flasktaskr
https://github.com/josepablob/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:34:54.080532
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

adrianneperedo/flaskr
https://github.com/adrianneperedo/flaskr
Entry file: None
Scanned: 2016-10-25 23:34:56.610239
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/adrianneperedo/flaskr.

mirukushake/flaskr
https://github.com/mirukushake/flaskr
Entry file: None
Scanned: 2016-10-25 23:35:00.128268
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mirukushake/flaskr.

wangduanyang/flasky
https://github.com/wangduanyang/flasky
Entry file: None
Scanned: 2016-10-25 23:35:00.656921
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

darrenhankins/flaskr
https://github.com/darrenhankins/flaskr
Entry file: None
Scanned: 2016-10-25 23:35:06.179211
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/darrenhankins/flaskr.

Looncall/Flaskr
https://github.com/Looncall/Flaskr
Entry file: None
Scanned: 2016-10-25 23:35:07.729775
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

CBR09/flaskapp
https://github.com/CBR09/flaskapp
Entry file: None
Scanned: 2016-10-25 23:35:09.234873
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/CBR09/flaskapp.

czy1238677/flasky
https://github.com/czy1238677/flasky
Entry file: None
Scanned: 2016-10-25 23:35:10.826726
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

marcabomb/flasktaskr
https://github.com/marcabomb/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:35:12.378619
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jeffreybergman/flasktaskr
https://github.com/jeffreybergman/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:35:13.915078
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Pink-Moon/flaskr
https://github.com/Pink-Moon/flaskr
Entry file: None
Scanned: 2016-10-25 23:35:15.434102
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Pink-Moon/flaskr.

mcmcgonagle/flasktaskr2
https://github.com/mcmcgonagle/flasktaskr2
Entry file: flasktaskr2/project/views.py
Scanned: 2016-10-25 23:35:16.791659
No vulnerabilities found.


AlexFransis/FlaskyProject
https://github.com/AlexFransis/FlaskyProject
Entry file: FlaskyProject/app/__init__.py
Scanned: 2016-10-25 23:35:20.429513
No vulnerabilities found.


AlexGrek/FlaskLib
https://github.com/AlexGrek/FlaskLib
Entry file: FlaskLib/FlaskLib/FlaskLib/__init__.py
Scanned: 2016-10-25 23:35:22.958483
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

daveweber/FlaskBar
https://github.com/daveweber/FlaskBar
Entry file: FlaskBar/index.py
Scanned: 2016-10-25 23:35:27.312679
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

danleyb2/flaskMe
https://github.com/danleyb2/flaskMe
Entry file: flaskMe/flaskREST.py
Scanned: 2016-10-25 23:35:28.621591
Vulnerability 1:
File: flaskMe/flaskREST.py
 > User input at line 73, trigger word "get(": 
	name = data.get('name')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 76, trigger word "execute(": 
	db.execute('INSERT INTO cars (name, color) VALUES (?,?)', [name, color])

Vulnerability 2:
File: flaskMe/flaskREST.py
 > User input at line 74, trigger word "get(": 
	color = data.get('color')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 76, trigger word "execute(": 
	db.execute('INSERT INTO cars (name, color) VALUES (?,?)', [name, color])

Vulnerability 3:
File: flaskMe/flaskREST.py
 > User input at line 73, trigger word "get(": 
	name = data.get('name')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 78, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(dict(name=name, color=color))

Vulnerability 4:
File: flaskMe/flaskREST.py
 > User input at line 74, trigger word "get(": 
	color = data.get('color')
Reassigned in: 
	File: flaskMe/flaskREST.py
	 > Line 87: ret_MAYBE_FUNCTION_NAME = jsonify(entries)
File: flaskMe/flaskREST.py
 > reaches line 78, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(dict(name=name, color=color))



Rikka-chan/flaskCharts
https://github.com/Rikka-chan/flaskCharts
Entry file: None
Scanned: 2016-10-25 23:35:29.150473
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bunkdeath/FlaskTemplate
https://github.com/bunkdeath/FlaskTemplate
Entry file: FlaskTemplate/application.py
Scanned: 2016-10-25 23:35:31.474827
No vulnerabilities found.


zding5/FlaskDemo
https://github.com/zding5/FlaskDemo
Entry file: FlaskDemo/app/__init__.py
Scanned: 2016-10-25 23:36:03.730452
No vulnerabilities found.


diggzhang/flaskMaze
https://github.com/diggzhang/flaskMaze
Entry file: None
Scanned: 2016-10-25 23:36:05.869240
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/diggzhang/flaskMaze.

narakai/FlaskDemo
https://github.com/narakai/FlaskDemo
Entry file: FlaskDemo/flask_demo.py
Scanned: 2016-10-25 23:36:07.243514
No vulnerabilities found.


deanmax/FlaskAPP
https://github.com/deanmax/FlaskAPP
Entry file: None
Scanned: 2016-10-25 23:36:07.826941
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hugoantunes/base-flask
https://github.com/hugoantunes/base-flask
Entry file: base-flask/service/__init__.py
Scanned: 2016-10-25 23:36:09.646435
No vulnerabilities found.


haburibe/docker-flask
https://github.com/haburibe/docker-flask
Entry file: docker-flask/main.py
Scanned: 2016-10-25 23:36:10.973671
No vulnerabilities found.


krisekenes/flask_deployment
https://github.com/krisekenes/flask_deployment
Entry file: flask_deployment/server.py
Scanned: 2016-10-25 23:36:12.381464
No vulnerabilities found.


namickey/hello-flask
https://github.com/namickey/hello-flask
Entry file: hello-flask/main.py
Scanned: 2016-10-25 23:36:13.675637
No vulnerabilities found.


mmingle/flask-blog
https://github.com/mmingle/flask-blog
Entry file: None
Scanned: 2016-10-25 23:36:14.199781
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

justinwp/flask-urs
https://github.com/justinwp/flask-urs
Entry file: flask-urs/tests/conftest.py
Scanned: 2016-10-25 23:36:15.739367
No vulnerabilities found.


timyi1212/flask-demo
https://github.com/timyi1212/flask-demo
Entry file: flask-demo/app.py
Scanned: 2016-10-25 23:36:17.076763
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

SawHigh/flask_cdn
https://github.com/SawHigh/flask_cdn
Entry file: flask_cdn/cdn.py
Scanned: 2016-10-25 23:36:18.881025
No vulnerabilities found.


crq/flask-scaffold
https://github.com/crq/flask-scaffold
Entry file: None
Scanned: 2016-10-25 23:36:20.311999
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/crq/flask-scaffold.

asielen/Woodles_Flask
https://github.com/asielen/Woodles_Flask
Entry file: Woodles_Flask/app/__init__.py
Scanned: 2016-10-25 23:36:21.877496
Vulnerability 1:
File: Woodles_Flask/app/views/app_views.py
 > User input at line 22, trigger word "get(": 
	current_card = Card.query.get(card_id)
File: Woodles_Flask/app/views/app_views.py
 > reaches line 23, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('card',card_id=current_card.id_string))

Vulnerability 2:
File: Woodles_Flask/app/views/app_views.py
 > User input at line 22, trigger word "get(": 
	current_card = Card.query.get(card_id)
File: Woodles_Flask/app/views/app_views.py
 > reaches line 23, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('card',card_id=current_card.id_string))



honmaple/flask-word
https://github.com/honmaple/flask-word
Entry file: flask-word/app/__init__.py
Scanned: 2016-10-25 23:36:23.690350
Vulnerability 1:
File: flask-word/app/count/views.py
 > User input at line 17, trigger word "cookies[": 
	count = int(request.cookies['count']) + 1
Reassigned in: 
	File: flask-word/app/count/views.py
	 > Line 19: count = 0
	File: flask-word/app/count/views.py
	 > Line 20: response = make_response(str(count))
	File: flask-word/app/count/views.py
	 > Line 22: ret_MAYBE_FUNCTION_NAME = response
File: flask-word/app/count/views.py
 > reaches line 21, trigger word "set_cookie(": 
	response.set_cookie('count',value=str(count), max_age=1800)

Vulnerability 2:
File: flask-word/app/chat/views.py
 > User input at line 38, trigger word "get(": 
	username = session.get('username', '')
Reassigned in: 
	File: flask-word/app/chat/views.py
	 > Line 41: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-word/app/chat/views.py
 > reaches line 42, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('chat/chat.html',username=username, room=room)

Vulnerability 3:
File: flask-word/app/chat/views.py
 > User input at line 39, trigger word "get(": 
	room = session.get('room', '')
Reassigned in: 
	File: flask-word/app/chat/views.py
	 > Line 41: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-word/app/chat/views.py
 > reaches line 42, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('chat/chat.html',username=username, room=room)

Vulnerability 4:
File: flask-word/app/paginate/views.py
 > User input at line 42, trigger word "get(": 
	page = is_num(request.args.get('page'))
Reassigned in: 
	File: flask-word/app/paginate/views.py
	 > Line 43: topics = Topic.query.paginate(page, app.config['PER_PAGE'],error_out=True)
File: flask-word/app/paginate/views.py
 > reaches line 44, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('page/page.html',topics=topics)



marcabomb/flask-blog
https://github.com/marcabomb/flask-blog
Entry file: None
Scanned: 2016-10-25 23:36:24.233420
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

studiomezklador/flask_api
https://github.com/studiomezklador/flask_api
Entry file: flask_api/boot.py
Scanned: 2016-10-25 23:36:25.560351
No vulnerabilities found.


rinechran/flask-tutorial
https://github.com/rinechran/flask-tutorial
Entry file: None
Scanned: 2016-10-25 23:36:27.393352
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rinechran/flask-tutorial.

bodzio2k/flask-blueprint
https://github.com/bodzio2k/flask-blueprint
Entry file: flask-blueprint/run.py
Scanned: 2016-10-25 23:36:29.237559
No vulnerabilities found.


PeachDew/flask_tutorialwebapp
https://github.com/PeachDew/flask_tutorialwebapp
Entry file: flask_tutorialwebapp/app.py
Scanned: 2016-10-25 23:36:34.279626
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

jordo1ken/flask-fibonacci
https://github.com/jordo1ken/flask-fibonacci
Entry file: flask-fibonacci/Fibonacci.py
Scanned: 2016-10-25 23:36:35.639263
No vulnerabilities found.


Kriordan/flask-blog
https://github.com/Kriordan/flask-blog
Entry file: None
Scanned: 2016-10-25 23:36:36.204314
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

a-r-g-v/flask-template
https://github.com/a-r-g-v/flask-template
Entry file: flask-template/app/__init__.py
Scanned: 2016-10-25 23:36:37.617034
No vulnerabilities found.


Savvis/flask-phonebook
https://github.com/Savvis/flask-phonebook
Entry file: flask-phonebook/app/__init__.py
Scanned: 2016-10-25 23:36:39.098770
No vulnerabilities found.


aksareen/Flask-learn
https://github.com/aksareen/Flask-learn
Entry file: Flask-learn/app.py
Scanned: 2016-10-25 23:36:40.885485
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

aqisnotliquid/flask_rpg
https://github.com/aqisnotliquid/flask_rpg
Entry file: flask_rpg/app/__init__.py
Scanned: 2016-10-25 23:36:42.326805
No vulnerabilities found.


textbook/flask-forecaster
https://github.com/textbook/flask-forecaster
Entry file: flask-forecaster/flask_forecaster/flask_app.py
Scanned: 2016-10-25 23:36:43.878191
Vulnerability 1:
File: flask-forecaster/flask_forecaster/flask_app.py
 > User input at line 34, trigger word ".data": 
	token = form.token.data
Reassigned in: 
	File: flask-forecaster/flask_forecaster/flask_app.py
	 > Line 36: projects = Tracker.validate_token(token)
	File: flask-forecaster/flask_forecaster/flask_app.py
	 > Line 38: session['token'] = token
	File: flask-forecaster/flask_forecaster/flask_app.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, version=__version__)
File: flask-forecaster/flask_forecaster/flask_app.py
 > reaches line 39, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, projects=projects, version=__version__)

Vulnerability 2:
File: flask-forecaster/flask_forecaster/flask_app.py
 > User input at line 52, trigger word "get(": 
	token = session.get('token')
Reassigned in: 
	File: flask-forecaster/flask_forecaster/flask_app.py
	 > Line 55: api = Tracker(token)
File: flask-forecaster/flask_forecaster/flask_app.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('project.html',project=api.get_project(project_id))



nava45/flask-routelogger
https://github.com/nava45/flask-routelogger
Entry file: flask-routelogger/flask_app_example.py
Scanned: 2016-10-25 23:36:45.309945
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

MattHealy/flask-skeleton
https://github.com/MattHealy/flask-skeleton
Entry file: flask-skeleton/app/__init__.py
Scanned: 2016-10-25 23:37:05.655557
No vulnerabilities found.


Xavier-Lam/flask-wechat
https://github.com/Xavier-Lam/flask-wechat
Entry file: flask-wechat/demo.py
Scanned: 2016-10-25 23:37:08.420004
No vulnerabilities found.


Ty-WDFW/Flask-Tickets
https://github.com/Ty-WDFW/Flask-Tickets
Entry file: Flask-Tickets/main.py
Scanned: 2016-10-25 23:37:09.749956
Vulnerability 1:
File: Flask-Tickets/main.py
 > User input at line 15, trigger word "form[": 
	fishticket = request.form['text']
Reassigned in: 
	File: Flask-Tickets/main.py
	 > Line 16: response = get_fish_ticket(fishticket)
File: Flask-Tickets/main.py
 > reaches line 17, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('bioinfo.html',entries=response, ticket=fishticket)



makudesu/flask-thesis
https://github.com/makudesu/flask-thesis
Entry file: flask-thesis/bnhs.py
Scanned: 2016-10-25 23:37:11.673170
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ivanenko/flask-webcrawler
https://github.com/ivanenko/flask-webcrawler
Entry file: flask-webcrawler/ww2.py
Scanned: 2016-10-25 23:37:13.210278
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pyx/flask-simplemde
https://github.com/pyx/flask-simplemde
Entry file: flask-simplemde/examples/simple/app.py
Scanned: 2016-10-25 23:37:14.862723
No vulnerabilities found.


kubabu/flask_blog
https://github.com/kubabu/flask_blog
Entry file: flask_blog/app.py
Scanned: 2016-10-25 23:37:17.073967
Vulnerability 1:
File: flask_blog/views.py
 > User input at line 50, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
Reassigned in: 
	File: flask_blog/views.py
	 > Line 52: next_url = '/drafts'
	File: flask_blog/views.py
	 > Line 78: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=RegisterForm(), error=error)
	File: flask_blog/views.py
	 > Line 44: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
File: flask_blog/views.py
 > reaches line 66, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next_url or url_for('index'))

Vulnerability 2:
File: flask_blog/views.py
 > User input at line 50, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
Reassigned in: 
	File: flask_blog/views.py
	 > Line 52: next_url = '/drafts'
	File: flask_blog/views.py
	 > Line 78: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=RegisterForm(), error=error)
	File: flask_blog/views.py
	 > Line 44: ret_MAYBE_FUNCTION_NAME = redirect(url_for('login'))
File: flask_blog/views.py
 > reaches line 66, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next_url or url_for('index'))

Vulnerability 3:
File: flask_blog/views.py
 > User input at line 99, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
Reassigned in: 
	File: flask_blog/views.py
	 > Line 101: next_url = '/drafts'
	File: flask_blog/views.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=LoginForm())
	File: flask_blog/views.py
	 > Line 89: ret_MAYBE_FUNCTION_NAME = redirect(url_for('register'))
	File: flask_blog/views.py
	 > Line 93: ret_MAYBE_FUNCTION_NAME = redirect(url_for('drafts'))
File: flask_blog/views.py
 > reaches line 112, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next_url or url_for('index'))

Vulnerability 4:
File: flask_blog/views.py
 > User input at line 99, trigger word "get(": 
	next_url = request.args.get('next') or request.form.get('next')
Reassigned in: 
	File: flask_blog/views.py
	 > Line 101: next_url = '/drafts'
	File: flask_blog/views.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=LoginForm())
	File: flask_blog/views.py
	 > Line 89: ret_MAYBE_FUNCTION_NAME = redirect(url_for('register'))
	File: flask_blog/views.py
	 > Line 93: ret_MAYBE_FUNCTION_NAME = redirect(url_for('drafts'))
File: flask_blog/views.py
 > reaches line 112, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next_url or url_for('index'))

Vulnerability 5:
File: flask_blog/views.py
 > User input at line 151, trigger word "get(": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 157, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('detail',slug=entry.slug))

Vulnerability 6:
File: flask_blog/views.py
 > User input at line 151, trigger word "form[": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 157, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('detail',slug=entry.slug))

Vulnerability 7:
File: flask_blog/views.py
 > User input at line 151, trigger word "get(": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 157, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('detail',slug=entry.slug))

Vulnerability 8:
File: flask_blog/views.py
 > User input at line 151, trigger word "form[": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 157, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('detail',slug=entry.slug))

Vulnerability 9:
File: flask_blog/views.py
 > User input at line 151, trigger word "get(": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 159, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('edit',slug=entry.slug))

Vulnerability 10:
File: flask_blog/views.py
 > User input at line 151, trigger word "form[": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 159, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('edit',slug=entry.slug))

Vulnerability 11:
File: flask_blog/views.py
 > User input at line 151, trigger word "get(": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 159, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('edit',slug=entry.slug))

Vulnerability 12:
File: flask_blog/views.py
 > User input at line 151, trigger word "form[": 
	entry = Entry.create(title=request.form['title'], content=request.form['content'], published=request.form.get('published') or False)
Reassigned in: 
	File: flask_blog/views.py
	 > Line 162: ret_MAYBE_FUNCTION_NAME = render_template('create.html')
File: flask_blog/views.py
 > reaches line 159, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('edit',slug=entry.slug))



MichaelDaniello/LearnFlask
https://github.com/MichaelDaniello/LearnFlask
Entry file: LearnFlask/cyoa/lib/python2.7/site-packages/flask/sessions.py
Scanned: 2016-10-25 23:37:22.008365
No vulnerabilities found.


bplabombarda/fdr
https://github.com/bplabombarda/fdr
Entry file: fdr/server/__init__.py
Scanned: 2016-10-25 23:37:23.934689
No vulnerabilities found.


metajemo/testapp
https://github.com/metajemo/testapp
Entry file: testapp/testapp.py
Scanned: 2016-10-25 23:37:25.256699
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

gzxultra/FlaskLoginManagement
https://github.com/gzxultra/FlaskLoginManagement
Entry file: FlaskLoginManagement/app/__init__.py
Scanned: 2016-10-25 23:37:27.188084
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

victorcuervo/FlaskMongoDB
https://github.com/victorcuervo/FlaskMongoDB
Entry file: FlaskMongoDB/welcome.py
Scanned: 2016-10-25 23:37:28.603431
No vulnerabilities found.


ChellsChen/FlaskSocketIOChart
https://github.com/ChellsChen/FlaskSocketIOChart
Entry file: FlaskSocketIOChart/app/__init__.py
Scanned: 2016-10-25 23:37:30.234168
Vulnerability 1:
File: FlaskSocketIOChart/app/main/routes.py
 > User input at line 31, trigger word "get(": 
	name = session.get('name', '')
Reassigned in: 
	File: FlaskSocketIOChart/app/main/routes.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskSocketIOChart/app/main/routes.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('chat.html',name=name, room=room)

Vulnerability 2:
File: FlaskSocketIOChart/app/main/routes.py
 > User input at line 32, trigger word "get(": 
	room = session.get('room', '')
Reassigned in: 
	File: FlaskSocketIOChart/app/main/routes.py
	 > Line 34: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskSocketIOChart/app/main/routes.py
 > reaches line 35, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('chat.html',name=name, room=room)



sasha42/Mailchimp-utility
https://github.com/sasha42/Mailchimp-utility
Entry file: None
Scanned: 2016-10-25 23:37:31.528054
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sasha42/Mailchimp-utility.

auliude/flask_hello_world
https://github.com/auliude/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-25 23:37:35.160033
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yogeshdixit41/PyFlaskWebApp
https://github.com/yogeshdixit41/PyFlaskWebApp
Entry file: PyFlaskWebApp/hello.py
Scanned: 2016-10-25 23:37:38.948655
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: PyFlaskWebApp/venv/lib/python2.7/sre_compile.py

znss1989/flask_blog_ex
https://github.com/znss1989/flask_blog_ex
Entry file: flask_blog_ex/blog.py
Scanned: 2016-10-25 23:37:40.289174
No vulnerabilities found.


liuenyan/micro-flask-blog
https://github.com/liuenyan/micro-flask-blog
Entry file: micro-flask-blog/app/__init__.py
Scanned: 2016-10-25 23:37:41.748837
Vulnerability 1:
File: micro-flask-blog/app/main/views.py
 > User input at line 17, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: micro-flask-blog/app/main/views.py
	 > Line 18: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: micro-flask-blog/app/main/views.py
	 > Line 19: posts = pagination.items
File: micro-flask-blog/app/main/views.py
 > reaches line 20, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',posts=posts, pagination=pagination)

Vulnerability 2:
File: micro-flask-blog/app/main/views.py
 > User input at line 124, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: micro-flask-blog/app/main/views.py
	 > Line 125: pagination = Post.query.filter_by(category_id=category_id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: micro-flask-blog/app/main/views.py
	 > Line 126: posts = pagination.items
File: micro-flask-blog/app/main/views.py
 > reaches line 127, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('category.html',posts=posts, pagination=pagination, username=username, category_id=category_id)



rtorres90/rest-flask-tutorial
https://github.com/rtorres90/rest-flask-tutorial
Entry file: rest-flask-tutorial/rest_flask/endpointsproject3.py
Scanned: 2016-10-25 23:37:46.101684
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jz314/flask-demo-copy
https://github.com/jz314/flask-demo-copy
Entry file: None
Scanned: 2016-10-25 23:37:47.567003
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jz314/flask-demo-copy.

willelson/flask-app-template
https://github.com/willelson/flask-app-template
Entry file: flask-app-template/app/__init__.py
Scanned: 2016-10-25 23:37:52.024156
No vulnerabilities found.


acbart/lti-flask-skeleton
https://github.com/acbart/lti-flask-skeleton
Entry file: lti-flask-skeleton/main.py
Scanned: 2016-10-25 23:37:53.516094
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

GreatBedAwake/flask_lab_web
https://github.com/GreatBedAwake/flask_lab_web
Entry file: flask_lab_web/app/__init__.py
Scanned: 2016-10-25 23:37:54.949158
Vulnerability 1:
File: flask_lab_web/app/views.py
 > User input at line 46, trigger word "form[": 
	find_component = request.form['find_component']
Reassigned in: 
	File: flask_lab_web/app/views.py
	 > Line 47: dates = select_where_db(find_component)
	File: flask_lab_web/app/views.py
	 > Line 54: dates = select_data()
	File: flask_lab_web/app/views.py
	 > Line 56: dates = select_data()
File: flask_lab_web/app/views.py
 > reaches line 57, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('show.html',component=dates)



Derfirm/hello-docker-flask
https://github.com/Derfirm/hello-docker-flask
Entry file: hello-docker-flask/app.py
Scanned: 2016-10-25 23:37:56.262321
No vulnerabilities found.


arvvvs/Flask-Practice-Metis-Delivery
https://github.com/arvvvs/Flask-Practice-Metis-Delivery
Entry file: Flask-Practice-Metis-Delivery/app.py
Scanned: 2016-10-25 23:37:58.355550
Vulnerability 1:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 30, trigger word "form(": 
	form = request_phone_form()
Reassigned in: 
	File: Flask-Practice-Metis-Delivery/app.py
	 > Line 32: session['phone'] = form.phone.data
	File: Flask-Practice-Metis-Delivery/app.py
	 > Line 33: ret_MAYBE_FUNCTION_NAME = redirect(url_for('lookup'))
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form)

Vulnerability 2:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 57, trigger word "get(": 
	address = request.args.get('address', 0,type=str)
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 65, trigger word "execute(": 
	cur.execute('INSERT INTO tbl_deliveries (customer_name, delivery_status, customer_address, delivery_person) VALUES("' + name + '", "' + status + '","' + address + '","' + driver + '");')

Vulnerability 3:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 59, trigger word "get(": 
	name = request.args.get('name', 0,type=str)
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 65, trigger word "execute(": 
	cur.execute('INSERT INTO tbl_deliveries (customer_name, delivery_status, customer_address, delivery_person) VALUES("' + name + '", "' + status + '","' + address + '","' + driver + '");')

Vulnerability 4:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 127, trigger word "form[": 
	_phone = request.form['submitPhone']
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 128, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('lookup.html',phone=_phone)

Vulnerability 5:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 148, trigger word "get(": 
	phone = request.args.get('phone', 0,type=str)
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 154, trigger word "execute(": 
	cur.execute('UPDATE tbl_customer_info SET name="' + name + '", address="' + address + '",phone_number = "' + phone + '" WHERE phone_number = "' + phone_value + '"')

Vulnerability 6:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 149, trigger word "get(": 
	name = request.args.get('name', 0,type=str)
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 154, trigger word "execute(": 
	cur.execute('UPDATE tbl_customer_info SET name="' + name + '", address="' + address + '",phone_number = "' + phone + '" WHERE phone_number = "' + phone_value + '"')

Vulnerability 7:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 150, trigger word "get(": 
	address = request.args.get('address', 0,type=str)
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 154, trigger word "execute(": 
	cur.execute('UPDATE tbl_customer_info SET name="' + name + '", address="' + address + '",phone_number = "' + phone + '" WHERE phone_number = "' + phone_value + '"')

Vulnerability 8:
File: Flask-Practice-Metis-Delivery/app.py
 > User input at line 151, trigger word "get(": 
	phone_value = request.args.get('phone_value', 0,type=str)
File: Flask-Practice-Metis-Delivery/app.py
 > reaches line 154, trigger word "execute(": 
	cur.execute('UPDATE tbl_customer_info SET name="' + name + '", address="' + address + '",phone_number = "' + phone + '" WHERE phone_number = "' + phone_value + '"')



jideobs/flask-gae-ndb-starter
https://github.com/jideobs/flask-gae-ndb-starter
Entry file: flask-gae-ndb-starter/server/main.py
Scanned: 2016-10-25 23:38:00.037804
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mml1/flask_multiple_forms
https://github.com/mml1/flask_multiple_forms
Entry file: flask_multiple_forms/server.py
Scanned: 2016-10-25 23:38:01.438306
No vulnerabilities found.


dv3/sample-Flask-Application
https://github.com/dv3/sample-Flask-Application
Entry file: None
Scanned: 2016-10-25 23:38:01.983433
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dv3/sample-Flask-Application.

blackmad/flask-google-login-example
https://github.com/blackmad/flask-google-login-example
Entry file: flask-google-login-example/main.py
Scanned: 2016-10-25 23:38:06.414134
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Tim9Liu9/Flask_Bootstrap_Blog
https://github.com/Tim9Liu9/Flask_Bootstrap_Blog
Entry file: Flask_Bootstrap_Blog/doc/app.py
Scanned: 2016-10-25 23:38:09.109493
No vulnerabilities found.


knight-zhou/Web.py_Flask
https://github.com/knight-zhou/Web.py_Flask
Entry file: None
Scanned: 2016-10-25 23:38:11.253045
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/knight-zhou/Web.py_Flask.

DEV3L/openshift-python-flask-example
https://github.com/DEV3L/openshift-python-flask-example
Entry file: openshift-python-flask-example/wsgi/run.py
Scanned: 2016-10-25 23:38:12.697688
No vulnerabilities found.


nosuchip/flask-video-streaming
https://github.com/nosuchip/flask-video-streaming
Entry file: flask-video-streaming/main.py
Scanned: 2016-10-25 23:38:14.588338
No vulnerabilities found.


cerealcake/flask-ldap3
https://github.com/cerealcake/flask-ldap3
Entry file: flask-ldap3/app.py
Scanned: 2016-10-25 23:38:15.892656
No vulnerabilities found.


VistaarJ/REST-API-Using-Flask-
https://github.com/VistaarJ/REST-API-Using-Flask-
Entry file: REST-API-Using-Flask-/app.py
Scanned: 2016-10-25 23:38:20.251310
No vulnerabilities found.


n-batalha/flask-api-template
https://github.com/n-batalha/flask-api-template
Entry file: flask-api-template/web/journey_predict/__init__.py
Scanned: 2016-10-25 23:38:21.671449
No vulnerabilities found.


willelson/flask-login-template
https://github.com/willelson/flask-login-template
Entry file: flask-login-template/app/__init__.py
Scanned: 2016-10-25 23:38:27.019436
No vulnerabilities found.


zolaneta/books_flask_app
https://github.com/zolaneta/books_flask_app
Entry file: None
Scanned: 2016-10-25 23:38:28.900405
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zolaneta/books_flask_app.

Anivarth/quiz-python-flask
https://github.com/Anivarth/quiz-python-flask
Entry file: quiz-python-flask/quiz.py
Scanned: 2016-10-25 23:38:30.214591
No vulnerabilities found.


richyvk/flask-url-shortener
https://github.com/richyvk/flask-url-shortener
Entry file: flask-url-shortener/app.py
Scanned: 2016-10-25 23:38:31.872255
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zbc/Flask
https://github.com/zbc/Flask
Entry file: None
Scanned: 2016-10-25 23:38:34.366536
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

cobra0914/flask
https://github.com/cobra0914/flask
Entry file: None
Scanned: 2016-10-25 23:38:34.869945
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

susantshrestha/flask
https://github.com/susantshrestha/flask
Entry file: None
Scanned: 2016-10-25 23:38:36.403247
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SunchunZhou/flask
https://github.com/SunchunZhou/flask
Entry file: None
Scanned: 2016-10-25 23:38:40.008830
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

w84miracle/flask-sb-admin2
https://github.com/w84miracle/flask-sb-admin2
Entry file: flask-sb-admin2/sbadmin.py
Scanned: 2016-10-25 23:38:44.442809
No vulnerabilities found.


k-hung/FlaskApp
https://github.com/k-hung/FlaskApp
Entry file: FlaskApp/FeelsApp/__init__.py
Scanned: 2016-10-25 23:38:49.579341
No vulnerabilities found.


yoshiya0503/Flask-Best-Practices
https://github.com/yoshiya0503/Flask-Best-Practices
Entry file: Flask-Best-Practices/methodview.py
Scanned: 2016-10-25 23:38:50.904651
No vulnerabilities found.


ThunderousFigs/Genomes
https://github.com/ThunderousFigs/Genomes
Entry file: Genomes/server.py
Scanned: 2016-10-25 23:39:03.881296
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Python-Project-Simple/flask-blog
https://github.com/Python-Project-Simple/flask-blog
Entry file: None
Scanned: 2016-10-25 23:39:05.428143
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

adrianneperedo/flaskr
https://github.com/adrianneperedo/flaskr
Entry file: None
Scanned: 2016-10-25 23:39:05.944521
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/adrianneperedo/flaskr.

mirukushake/flaskr
https://github.com/mirukushake/flaskr
Entry file: None
Scanned: 2016-10-25 23:39:06.454136
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mirukushake/flaskr.

schen2011/flaskandazure
https://github.com/schen2011/flaskandazure
Entry file: flaskandazure/FlaskWebProject3/FlaskWebProject3/__init__.py
Scanned: 2016-10-25 23:39:08.605681
No vulnerabilities found.


DXZ/flaskr
https://github.com/DXZ/flaskr
Entry file: None
Scanned: 2016-10-25 23:39:09.139123
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/DXZ/flaskr.

tim1978/flasktaskr
https://github.com/tim1978/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:39:09.678210
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

keer2345/flasky
https://github.com/keer2345/flasky
Entry file: None
Scanned: 2016-10-25 23:39:10.195297
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

PansFortress/flasktasker
https://github.com/PansFortress/flasktasker
Entry file: flasktasker/views.py
Scanned: 2016-10-25 23:39:11.658058
No vulnerabilities found.


olegzhoglo/flasktaskr
https://github.com/olegzhoglo/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:39:12.171829
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Kriordan/flasktaskr
https://github.com/Kriordan/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:39:13.678748
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

haoweibo1987/flasker
https://github.com/haoweibo1987/flasker
Entry file: flasker/app/__init__.py
Scanned: 2016-10-25 23:39:21.416440
No vulnerabilities found.


egonvb/flaskplayground
https://github.com/egonvb/flaskplayground
Entry file: flaskplayground/api.py
Scanned: 2016-10-25 23:39:24.830268
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

liteng123/flaskr
https://github.com/liteng123/flaskr
Entry file: None
Scanned: 2016-10-25 23:39:25.398094
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/liteng123/flaskr.

salazar35/FlaskWeb
https://github.com/salazar35/FlaskWeb
Entry file: FlaskWeb/Flask Web Development.py
Scanned: 2016-10-25 23:39:26.686224
No vulnerabilities found.


pchartrand/FlaskTemp
https://github.com/pchartrand/FlaskTemp
Entry file: FlaskTemp/tempreport.py
Scanned: 2016-10-25 23:39:29.460548
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

hattwick/flask2
https://github.com/hattwick/flask2
Entry file: flask2/flask2mod-template.py
Scanned: 2016-10-25 23:39:32.371182
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

narakai/FlaskServer
https://github.com/narakai/FlaskServer
Entry file: FlaskServer/flaskServer.py
Scanned: 2016-10-25 23:39:33.764558
No vulnerabilities found.


paoloo1995/FlaskBlog
https://github.com/paoloo1995/FlaskBlog
Entry file: FlaskBlog/app/__init__.py
Scanned: 2016-10-25 23:39:35.284808
Vulnerability 1:
File: FlaskBlog/app/main/views.py
 > User input at line 20, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 21: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 24: posts = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskBlog/app/main/views.py
 > reaches line 25, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: FlaskBlog/app/main/views.py
 > User input at line 32, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 33: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 36: posts = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 37, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)



julywoo/flaskWeb
https://github.com/julywoo/flaskWeb
Entry file: flaskWeb/flaskWeb.py
Scanned: 2016-10-25 23:39:37.164342
No vulnerabilities found.


tmlima/flask-intro
https://github.com/tmlima/flask-intro
Entry file: flask-intro/project/__init__.py
Scanned: 2016-10-25 23:39:41.250489
No vulnerabilities found.


sourcelair-blueprints/flask-mongo
https://github.com/sourcelair-blueprints/flask-mongo
Entry file: flask-mongo/flask_mongo/server.py
Scanned: 2016-10-25 23:39:42.559125
No vulnerabilities found.


mmingle/flask-blog
https://github.com/mmingle/flask-blog
Entry file: None
Scanned: 2016-10-25 23:39:43.072217
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

justinwp/flask-urs
https://github.com/justinwp/flask-urs
Entry file: flask-urs/tests/conftest.py
Scanned: 2016-10-25 23:39:44.591753
No vulnerabilities found.


SawHigh/flask_cdn
https://github.com/SawHigh/flask_cdn
Entry file: flask_cdn/cdn.py
Scanned: 2016-10-25 23:39:45.874521
No vulnerabilities found.


crq/flask-scaffold
https://github.com/crq/flask-scaffold
Entry file: None
Scanned: 2016-10-25 23:39:47.426715
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/crq/flask-scaffold.

asielen/Woodles_Flask
https://github.com/asielen/Woodles_Flask
Entry file: Woodles_Flask/app/__init__.py
Scanned: 2016-10-25 23:39:51.985714
Vulnerability 1:
File: Woodles_Flask/app/views/app_views.py
 > User input at line 22, trigger word "get(": 
	current_card = Card.query.get(card_id)
File: Woodles_Flask/app/views/app_views.py
 > reaches line 23, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('card',card_id=current_card.id_string))

Vulnerability 2:
File: Woodles_Flask/app/views/app_views.py
 > User input at line 22, trigger word "get(": 
	current_card = Card.query.get(card_id)
File: Woodles_Flask/app/views/app_views.py
 > reaches line 23, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('card',card_id=current_card.id_string))



amitbn/flask-docker
https://github.com/amitbn/flask-docker
Entry file: flask-docker/app.py
Scanned: 2016-10-25 23:40:05.855696
No vulnerabilities found.


julywoo/flask_login
https://github.com/julywoo/flask_login
Entry file: None
Scanned: 2016-10-25 23:40:06.894315
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/julywoo/flask_login.

LovroM/Flask-test
https://github.com/LovroM/Flask-test
Entry file: Flask-test/webserver.py
Scanned: 2016-10-25 23:40:08.732177
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

danleyb2/flask-cloudinary
https://github.com/danleyb2/flask-cloudinary
Entry file: None
Scanned: 2016-10-25 23:40:10.028498
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/danleyb2/flask-cloudinary.

OpenTrons/labsuite_flask
https://github.com/OpenTrons/labsuite_flask
Entry file: labsuite_flask/app.py
Scanned: 2016-10-25 23:40:12.057944
No vulnerabilities found.


YaGiNA/study-flask
https://github.com/YaGiNA/study-flask
Entry file: study-flask/flaskr/__init__.py
Scanned: 2016-10-25 23:40:14.850987
No vulnerabilities found.


seanhelm/flask-test
https://github.com/seanhelm/flask-test
Entry file: flask-test/app/__init__.py
Scanned: 2016-10-25 23:40:16.140327
No vulnerabilities found.


Viredery/python_flask
https://github.com/Viredery/python_flask
Entry file: python_flask/hello.py
Scanned: 2016-10-25 23:40:17.861728
No vulnerabilities found.


josanabr/flask-vbox
https://github.com/josanabr/flask-vbox
Entry file: flask-vbox/flask-vbox.py
Scanned: 2016-10-25 23:40:19.164406
No vulnerabilities found.


simeon-xx/simeon-flask
https://github.com/simeon-xx/simeon-flask
Entry file: simeon-flask/app/init.py
Scanned: 2016-10-25 23:40:20.495908
No vulnerabilities found.


cherry-hyx/flask_t
https://github.com/cherry-hyx/flask_t
Entry file: None
Scanned: 2016-10-25 23:40:21.908130
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/cherry-hyx/flask_t.

abcsds/flask-tests
https://github.com/abcsds/flask-tests
Entry file: flask-tests/flaskr/flaskr.py
Scanned: 2016-10-25 23:40:23.458250
No vulnerabilities found.


tanzhixu/Flask-oauth
https://github.com/tanzhixu/Flask-oauth
Entry file: Flask-oauth/app/__init__.py
Scanned: 2016-10-25 23:40:27.316197
Vulnerability 1:
File: Flask-oauth/app/user_manager_views.py
 > User input at line 32, trigger word "get(": 
	password = request.json.get('password', None)
Reassigned in: 
	File: Flask-oauth/app/user_manager_views.py
	 > Line 38: newpasswd = pwd_context.encrypt(password)
File: Flask-oauth/app/user_manager_views.py
 > reaches line 41, trigger word "filter(": 
	query.filter(User.id == userid).update(User.password_hashnewpasswd)



brandonfujii/flask-microblog
https://github.com/brandonfujii/flask-microblog
Entry file: None
Scanned: 2016-10-25 23:40:27.840553
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/brandonfujii/flask-microblog.

dylannnnn/flask_study
https://github.com/dylannnnn/flask_study
Entry file: flask_study/views.py
Scanned: 2016-10-25 23:40:29.293667
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

huasu/InstantFlask
https://github.com/huasu/InstantFlask
Entry file: InstantFlask/app_return_values.py
Scanned: 2016-10-25 23:40:31.865496
No vulnerabilities found.


maricante/flask-blog
https://github.com/maricante/flask-blog
Entry file: None
Scanned: 2016-10-25 23:40:32.406762
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

christopherL91/pythonflask
https://github.com/christopherL91/pythonflask
Entry file: pythonflask/app/main.py
Scanned: 2016-10-25 23:40:33.691394
No vulnerabilities found.


ysicing/Pangu
https://github.com/ysicing/Pangu
Entry file: Pangu/Pangu.py
Scanned: 2016-10-25 23:40:49.728954
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

rbcolson9/flask4kids
https://github.com/rbcolson9/flask4kids
Entry file: flask4kids/hello.py
Scanned: 2016-10-25 23:40:51.072244
No vulnerabilities found.


charlestondance/FlaskStartUp
https://github.com/charlestondance/FlaskStartUp
Entry file: FlaskStartUp/app/__init__.py
Scanned: 2016-10-25 23:40:52.521911
No vulnerabilities found.


erik-farmer/flask-auth-wysiwyg-blog
https://github.com/erik-farmer/flask-auth-wysiwyg-blog
Entry file: flask-auth-wysiwyg-blog/app.py
Scanned: 2016-10-25 23:40:53.909175
No vulnerabilities found.


guilleJB/flask-web-book
https://github.com/guilleJB/flask-web-book
Entry file: flask-web-book/hello.py
Scanned: 2016-10-25 23:40:55.330972
Vulnerability 1:
File: flask-web-book/hello.py
 > User input at line 120, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: flask-web-book/hello.py
	 > Line 117: name = None
File: flask-web-book/hello.py
 > reaches line 122, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('boots.html',name=name, form=form)



dongheelee1/simple_flask_wall
https://github.com/dongheelee1/simple_flask_wall
Entry file: simple_flask_wall/server.py
Scanned: 2016-10-25 23:40:56.740665
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ynifamily3/CRUD-with-Flask-MVC
https://github.com/ynifamily3/CRUD-with-Flask-MVC
Entry file: CRUD-with-Flask-MVC/set_table.py
Scanned: 2016-10-25 23:40:58.218021
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

duncan60/flask-github-api
https://github.com/duncan60/flask-github-api
Entry file: flask-github-api/app/__init__.py
Scanned: 2016-10-25 23:40:59.530834
No vulnerabilities found.


mnzr/Flask-Blueprint-test
https://github.com/mnzr/Flask-Blueprint-test
Entry file: Flask-Blueprint-test/app/__init__.py
Scanned: 2016-10-25 23:41:00.848876
Vulnerability 1:
File: Flask-Blueprint-test/app/users/views.py
 > User input at line 33, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: Flask-Blueprint-test/app/users/views.py
	 > Line 38: session['user_id'] = user.id
File: Flask-Blueprint-test/app/users/views.py
 > reaches line 39, trigger word "flash(": 
	flash('Welcome %s' % user.name)



znss1989/flask_blog_ex
https://github.com/znss1989/flask_blog_ex
Entry file: flask_blog_ex/blog.py
Scanned: 2016-10-25 23:41:02.407922
No vulnerabilities found.


aquang9124/flask_semi_restful_routes
https://github.com/aquang9124/flask_semi_restful_routes
Entry file: flask_semi_restful_routes/server.py
Scanned: 2016-10-25 23:41:06.748247
No vulnerabilities found.


PeggyZWY/blog-with-flask
https://github.com/PeggyZWY/blog-with-flask
Entry file: blog-with-flask/app/__init__.py
Scanned: 2016-10-25 23:41:08.755738
Vulnerability 1:
File: blog-with-flask/app/main/views.py
 > User input at line 186, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: blog-with-flask/app/main/views.py
	 > Line 189: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: blog-with-flask/app/main/views.py
	 > Line 192: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: blog-with-flask/app/main/views.py
	 > Line 195: comments = pagination.items
	File: blog-with-flask/app/main/views.py
	 > Line 184: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id))
File: blog-with-flask/app/main/views.py
 > reaches line 204, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, categories=category, comments=comments, pagination=pagination)

Vulnerability 2:
File: blog-with-flask/app/main/views.py
 > User input at line 293, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: blog-with-flask/app/main/views.py
	 > Line 294: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: blog-with-flask/app/main/views.py
	 > Line 298: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: blog-with-flask/app/main/views.py
	 > Line 291: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: blog-with-flask/app/main/views.py
 > reaches line 301, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='他们关注了', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 3:
File: blog-with-flask/app/main/views.py
 > User input at line 311, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: blog-with-flask/app/main/views.py
	 > Line 312: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: blog-with-flask/app/main/views.py
	 > Line 315: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: blog-with-flask/app/main/views.py
	 > Line 310: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: blog-with-flask/app/main/views.py
 > reaches line 317, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='关注了他们', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 4:
File: blog-with-flask/app/main/views.py
 > User input at line 349, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: blog-with-flask/app/main/views.py
	 > Line 350: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: blog-with-flask/app/main/views.py
	 > Line 353: comments = pagination.items
File: blog-with-flask/app/main/views.py
 > reaches line 354, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)

Vulnerability 5:
File: blog-with-flask/app/main/views.py
 > User input at line 431, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: blog-with-flask/app/main/views.py
	 > Line 452: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: blog-with-flask/app/main/views.py
	 > Line 456: posts = pagination.items
File: blog-with-flask/app/main/views.py
 > reaches line 460, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('article.html',posts=posts, categories=category, show_followed=show_followed, pagination=pagination)

Vulnerability 6:
File: blog-with-flask/app/main/views.py
 > User input at line 471, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: blog-with-flask/app/main/views.py
	 > Line 475: pagination = Post.query.filter_by(category_id=_category.id).order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: blog-with-flask/app/main/views.py
	 > Line 478: posts = pagination.items
File: blog-with-flask/app/main/views.py
 > reaches line 482, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('article.html',posts=posts, categories=category, show_followed=show_followed, pagination=pagination)



TwilioDevEd/browser-calls-flask
https://github.com/TwilioDevEd/browser-calls-flask
Entry file: browser-calls-flask/browser_calls_flask/__init__.py
Scanned: 2016-10-25 23:41:11.177937
No vulnerabilities found.


terryllowery/flask-hello-world
https://github.com/terryllowery/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:41:12.221270
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

aquang9124/flask_wall_test
https://github.com/aquang9124/flask_wall_test
Entry file: flask_wall_test/server.py
Scanned: 2016-10-25 23:41:13.543876
No vulnerabilities found.


ynejati/MyFlaskApp
https://github.com/ynejati/MyFlaskApp
Entry file: MyFlaskApp/MyFlaskWebApp.py
Scanned: 2016-10-25 23:41:14.954289
No vulnerabilities found.


TheCypher/flask-boiler-plate
https://github.com/TheCypher/flask-boiler-plate
Entry file: flask-boiler-plate/app/__init__.py
Scanned: 2016-10-25 23:41:16.348550
Vulnerability 1:
File: flask-boiler-plate/app/module_one/views.py
 > User input at line 30, trigger word ".data": 
	user = User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: flask-boiler-plate/app/module_one/views.py
	 > Line 34: session['user_id'] = user.id
File: flask-boiler-plate/app/module_one/views.py
 > reaches line 36, trigger word "flash(": 
	flash('Welcome %s' % user.name)



TheCypher/flask-api-test
https://github.com/TheCypher/flask-api-test
Entry file: flask-api-test/api.py
Scanned: 2016-10-25 23:41:20.114275
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-api-test/lib/python2.7/sre_compile.py

vstanev1/heroku-flask-app
https://github.com/vstanev1/heroku-flask-app
Entry file: heroku-flask-app/app.py
Scanned: 2016-10-25 23:41:22.027918
No vulnerabilities found.


bellcodo/bellcodo-flask-microblog
https://github.com/bellcodo/bellcodo-flask-microblog
Entry file: bellcodo-flask-microblog/app/__init__.py
Scanned: 2016-10-25 23:41:23.864442
No vulnerabilities found.


megrela/python-flask-skeleton
https://github.com/megrela/python-flask-skeleton
Entry file: None
Scanned: 2016-10-25 23:41:25.170257
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/megrela/python-flask-skeleton.

plablo09/minimal-flask-dev
https://github.com/plablo09/minimal-flask-dev
Entry file: minimal-flask-dev/hello.py
Scanned: 2016-10-25 23:41:26.460475
No vulnerabilities found.


knight-zhou/Web.py_Flask
https://github.com/knight-zhou/Web.py_Flask
Entry file: None
Scanned: 2016-10-25 23:41:27.543176
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

shyba/browser-calls-flask
https://github.com/shyba/browser-calls-flask
Entry file: browser-calls-flask/browser_calls_flask/__init__.py
Scanned: 2016-10-25 23:41:28.834959
No vulnerabilities found.


jdgramajo/LearningFlaskFramework
https://github.com/jdgramajo/LearningFlaskFramework
Entry file: LearningFlaskFramework/blog/app/app.py
Scanned: 2016-10-25 23:41:30.141717
No vulnerabilities found.


liuer99cn/awesome-flask-todo
https://github.com/liuer99cn/awesome-flask-todo
Entry file: awesome-flask-todo/app.py
Scanned: 2016-10-25 23:41:32.438078
No vulnerabilities found.


seiya-tsukada/instant_flask_server
https://github.com/seiya-tsukada/instant_flask_server
Entry file: instant_flask_server/main.py
Scanned: 2016-10-25 23:41:33.746580
No vulnerabilities found.


Journo-App/flask-by-example
https://github.com/Journo-App/flask-by-example
Entry file: None
Scanned: 2016-10-25 23:41:34.315104
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Journo-App/flask-by-example.

bobquest33/testRestFlask
https://github.com/bobquest33/testRestFlask
Entry file: testRestFlask/testRestFlask/testRestFlask/apps/testRest/models.py
Scanned: 2016-10-25 23:41:36.740895
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jjapp/flask-hello-world
https://github.com/jjapp/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:41:51.266993
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

snehasankavaram/donorRegistryFlask
https://github.com/snehasankavaram/donorRegistryFlask
Entry file: donorRegistryFlask/run.py
Scanned: 2016-10-25 23:41:52.581513
No vulnerabilities found.


ayusharma/Drug-discovery-flask
https://github.com/ayusharma/Drug-discovery-flask
Entry file: Drug-discovery-flask/app.py
Scanned: 2016-10-25 23:41:53.897898
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

vishaljain3991/flask_oauth_example_template
https://github.com/vishaljain3991/flask_oauth_example_template
Entry file: flask_oauth_example_template/app/__init__.py
Scanned: 2016-10-25 23:41:57.874968
No vulnerabilities found.


F483/flask-data-migration-example
https://github.com/F483/flask-data-migration-example
Entry file: flask-data-migration-example/app.py
Scanned: 2016-10-25 23:41:59.208025
No vulnerabilities found.


studiomezklador/flask_api_2
https://github.com/studiomezklador/flask_api_2
Entry file: flask_api_2/__init__.py
Scanned: 2016-10-25 23:42:00.664601
No vulnerabilities found.


SarthakS93/Flask-WebApp
https://github.com/SarthakS93/Flask-WebApp
Entry file: Flask-WebApp/app/__init__.py
Scanned: 2016-10-25 23:42:02.365033
No vulnerabilities found.


dorneanu/flask-app-template
https://github.com/dorneanu/flask-app-template
Entry file: flask-app-template/app/__init__.py
Scanned: 2016-10-25 23:42:03.677410
No vulnerabilities found.


aquang9124/flask_friends_full
https://github.com/aquang9124/flask_friends_full
Entry file: flask_friends_full/server.py
Scanned: 2016-10-25 23:42:04.986020
No vulnerabilities found.


huasu/LearningFlaskFramework
https://github.com/huasu/LearningFlaskFramework
Entry file: LearningFlaskFramework/hello.py
Scanned: 2016-10-25 23:42:07.286545
No vulnerabilities found.


sd16spring/Toolbox-Flask
https://github.com/sd16spring/Toolbox-Flask
Entry file: Toolbox-Flask/hello.py
Scanned: 2016-10-25 23:42:10.183442
No vulnerabilities found.


ZhenghaoZhu/Flask
https://github.com/ZhenghaoZhu/Flask
Entry file: None
Scanned: 2016-10-25 23:42:11.710102
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

octt/flask
https://github.com/octt/flask
Entry file: None
Scanned: 2016-10-25 23:42:12.251612
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Bwooklyn/flask
https://github.com/Bwooklyn/flask
Entry file: None
Scanned: 2016-10-25 23:42:12.764850
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

HRKpython/flask
https://github.com/HRKpython/flask
Entry file: None
Scanned: 2016-10-25 23:42:14.303283
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pavelrib/flask
https://github.com/pavelrib/flask
Entry file: None
Scanned: 2016-10-25 23:42:15.864361
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

SeanVaysburd/flask
https://github.com/SeanVaysburd/flask
Entry file: None
Scanned: 2016-10-25 23:42:17.404072
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kartheek3011/Flask
https://github.com/kartheek3011/Flask
Entry file: None
Scanned: 2016-10-25 23:42:20.931408
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

TerbiumLabs/flask-developer-challenge
https://github.com/TerbiumLabs/flask-developer-challenge
Entry file: flask-developer-challenge/gistapi/gistapi.py
Scanned: 2016-10-25 23:42:24.339711
No vulnerabilities found.


w84miracle/flask-sb-admin2
https://github.com/w84miracle/flask-sb-admin2
Entry file: flask-sb-admin2/sbadmin.py
Scanned: 2016-10-25 23:42:26.376555
No vulnerabilities found.


sunscrapers/flask-boilerplate
https://github.com/sunscrapers/flask-boilerplate
Entry file: None
Scanned: 2016-10-25 23:42:26.925242
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sunscrapers/flask-boilerplate.

jabbalaci/DigitalOceanFlask
https://github.com/jabbalaci/DigitalOceanFlask
Entry file: DigitalOceanFlask/home/demo/projects/ave_caesar/main.py
Scanned: 2016-10-25 23:42:28.330175
No vulnerabilities found.


pyx/flask-diced
https://github.com/pyx/flask-diced
Entry file: flask-diced/examples/simple/app.py
Scanned: 2016-10-25 23:42:29.737793
No vulnerabilities found.


basco-johnkevin/note-taking-app
https://github.com/basco-johnkevin/note-taking-app
Entry file: note-taking-app/part2/main.py
Scanned: 2016-10-25 23:42:31.051648
No vulnerabilities found.


Miserlou/serverless-imagehost
https://github.com/Miserlou/serverless-imagehost
Entry file: serverless-imagehost/my_app.py
Scanned: 2016-10-25 23:42:32.347536
No vulnerabilities found.


zhangyuhaomei/flasky
https://github.com/zhangyuhaomei/flasky
Entry file: None
Scanned: 2016-10-25 23:42:32.878855
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hellohuangjin/flaskblog
https://github.com/hellohuangjin/flaskblog
Entry file: None
Scanned: 2016-10-25 23:42:33.388905
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/hellohuangjin/flaskblog.

coolmile23/flaskr
https://github.com/coolmile23/flaskr
Entry file: None
Scanned: 2016-10-25 23:42:34.906373
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/coolmile23/flaskr.

MRamakri/flaskworkshop
https://github.com/MRamakri/flaskworkshop
Entry file: flaskworkshop/app.py
Scanned: 2016-10-25 23:42:37.214616
No vulnerabilities found.


imhuwq/flasky
https://github.com/imhuwq/flasky
Entry file: None
Scanned: 2016-10-25 23:42:51.761861
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

antonsoroko/flaskapimongo
https://github.com/antonsoroko/flaskapimongo
Entry file: flaskapimongo/flaskapimongo/__init__.py
Scanned: 2016-10-25 23:42:53.206251
No vulnerabilities found.


haoweibo1987/flasker
https://github.com/haoweibo1987/flasker
Entry file: flasker/app/__init__.py
Scanned: 2016-10-25 23:43:02.253845
No vulnerabilities found.


egonvb/flaskplayground
https://github.com/egonvb/flaskplayground
Entry file: flaskplayground/api.py
Scanned: 2016-10-25 23:43:08.140634
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhkmxx9302013/flaskmysql
https://github.com/zhkmxx9302013/flaskmysql
Entry file: flaskmysql/flaskmysql.py
Scanned: 2016-10-25 23:43:09.513149
No vulnerabilities found.


xiaomao361/flaskr
https://github.com/xiaomao361/flaskr
Entry file: None
Scanned: 2016-10-25 23:43:10.028724
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/xiaomao361/flaskr.

alvaro893/flaskcinemaapp
https://github.com/alvaro893/flaskcinemaapp
Entry file: flaskcinemaapp/FlaskWebProject/__init__.py
Scanned: 2016-10-25 23:43:11.902610
No vulnerabilities found.


yuyiwei305/flaskr
https://github.com/yuyiwei305/flaskr
Entry file: None
Scanned: 2016-10-25 23:43:12.414459
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yuyiwei305/flaskr.

uklineale/flaskTut
https://github.com/uklineale/flaskTut
Entry file: None
Scanned: 2016-10-25 23:43:13.952897
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

saurabh1e/FlaskStructure
https://github.com/saurabh1e/FlaskStructure
Entry file: FlaskStructure/src/utils/__init__.py
Scanned: 2016-10-25 23:43:15.383674
No vulnerabilities found.


retozero/FlaskDemo
https://github.com/retozero/FlaskDemo
Entry file: FlaskDemo/flaskr/flaskr.py
Scanned: 2016-10-25 23:43:16.790604
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zupeiza/FlaskTaskr
https://github.com/zupeiza/FlaskTaskr
Entry file: None
Scanned: 2016-10-25 23:43:17.363784
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zupeiza/FlaskTaskr.

yxun/FlaskSample
https://github.com/yxun/FlaskSample
Entry file: FlaskSample/url_building.py
Scanned: 2016-10-25 23:43:18.668471
No vulnerabilities found.


paoloo1995/FlaskBlog
https://github.com/paoloo1995/FlaskBlog
Entry file: FlaskBlog/app/__init__.py
Scanned: 2016-10-25 23:43:20.149380
Vulnerability 1:
File: FlaskBlog/app/main/views.py
 > User input at line 20, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 21: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 24: posts = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskBlog/app/main/views.py
 > reaches line 25, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: FlaskBlog/app/main/views.py
 > User input at line 32, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 33: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 36: posts = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 37, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)



DearX-dlx/FlaskBlog
https://github.com/DearX-dlx/FlaskBlog
Entry file: FlaskBlog/FlaskBlog.py
Scanned: 2016-10-25 23:43:21.475497
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sourcelair-blueprints/flask-mongo
https://github.com/sourcelair-blueprints/flask-mongo
Entry file: flask-mongo/flask_mongo/server.py
Scanned: 2016-10-25 23:43:22.749764
No vulnerabilities found.


sohje/__flask_psgr
https://github.com/sohje/__flask_psgr
Entry file: __flask_psgr/app.py
Scanned: 2016-10-25 23:43:24.054859
No vulnerabilities found.


farridav/flask_friends
https://github.com/farridav/flask_friends
Entry file: flask_friends/src/friends/__init__.py
Scanned: 2016-10-25 23:43:25.598591
No vulnerabilities found.


gh-tcbd/flask-test
https://github.com/gh-tcbd/flask-test
Entry file: flask-test/hello.py
Scanned: 2016-10-25 23:43:26.944897
No vulnerabilities found.


doubtingben/flask-jobs
https://github.com/doubtingben/flask-jobs
Entry file: flask-jobs/code/web.py
Scanned: 2016-10-25 23:43:28.230751
No vulnerabilities found.


askewseth/StatsFlask
https://github.com/askewseth/StatsFlask
Entry file: StatsFlask/run.py
Scanned: 2016-10-25 23:43:30.022428
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

BlackMud/flask_blog
https://github.com/BlackMud/flask_blog
Entry file: flask_blog/app/__init__.py
Scanned: 2016-10-25 23:43:31.790234
Vulnerability 1:
File: flask_blog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flask_blog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flask_blog/app/api_1_0/posts.py
	 > Line 19: next = None
File: flask_blog/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: flask_blog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flask_blog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flask_blog/app/api_1_0/posts.py
	 > Line 19: next = None
File: flask_blog/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: flask_blog/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: flask_blog/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: flask_blog/app/api_1_0/posts.py
	 > Line 19: next = None
File: flask_blog/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: flask_blog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flask_blog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flask_blog/app/api_1_0/users.py
	 > Line 23: next = None
File: flask_blog/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: flask_blog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flask_blog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flask_blog/app/api_1_0/users.py
	 > Line 23: next = None
File: flask_blog/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: flask_blog/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: flask_blog/app/api_1_0/users.py
	 > Line 20: prev = None
	File: flask_blog/app/api_1_0/users.py
	 > Line 23: next = None
File: flask_blog/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: flask_blog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flask_blog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flask_blog/app/api_1_0/users.py
	 > Line 45: next = None
File: flask_blog/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: flask_blog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flask_blog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flask_blog/app/api_1_0/users.py
	 > Line 45: next = None
File: flask_blog/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: flask_blog/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: flask_blog/app/api_1_0/users.py
	 > Line 42: prev = None
	File: flask_blog/app/api_1_0/users.py
	 > Line 45: next = None
File: flask_blog/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: flask_blog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flask_blog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flask_blog/app/api_1_0/comments.py
	 > Line 18: next = None
File: flask_blog/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: flask_blog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flask_blog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flask_blog/app/api_1_0/comments.py
	 > Line 18: next = None
File: flask_blog/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: flask_blog/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: flask_blog/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: flask_blog/app/api_1_0/comments.py
	 > Line 18: next = None
File: flask_blog/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: flask_blog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flask_blog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flask_blog/app/api_1_0/comments.py
	 > Line 46: next = None
File: flask_blog/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: flask_blog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flask_blog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flask_blog/app/api_1_0/comments.py
	 > Line 46: next = None
File: flask_blog/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: flask_blog/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: flask_blog/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: flask_blog/app/api_1_0/comments.py
	 > Line 46: next = None
File: flask_blog/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: flask_blog/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 52: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 55: posts = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: flask_blog/app/main/views.py
 > User input at line 47, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 45: show_followed = False
	File: flask_blog/app/main/views.py
	 > Line 43: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: flask_blog/app/main/views.py
 > User input at line 63, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 64: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 67: posts = pagination.items
File: flask_blog/app/main/views.py
 > reaches line 68, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: flask_blog/app/main/views.py
 > User input at line 127, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 129: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flask_blog/app/main/views.py
	 > Line 131: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 134: comments = pagination.items
	File: flask_blog/app/main/views.py
	 > Line 126: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flask_blog/app/main/views.py
 > reaches line 135, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: flask_blog/app/main/views.py
 > User input at line 194, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 195: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 198: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask_blog/app/main/views.py
	 > Line 193: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 200, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: flask_blog/app/main/views.py
 > User input at line 211, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 212: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 215: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask_blog/app/main/views.py
	 > Line 210: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_blog/app/main/views.py
 > reaches line 217, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: flask_blog/app/main/views.py
 > User input at line 242, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_blog/app/main/views.py
	 > Line 243: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flask_blog/app/main/views.py
	 > Line 246: comments = pagination.items
File: flask_blog/app/main/views.py
 > reaches line 247, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



bzerroug/flask_appbuilder
https://github.com/bzerroug/flask_appbuilder
Entry file: flask_appbuilder/meteo/__init__.py
Scanned: 2016-10-25 23:43:33.358555
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhkmxx9302013/RPiFlask
https://github.com/zhkmxx9302013/RPiFlask
Entry file: RPiFlask/main.py
Scanned: 2016-10-25 23:43:34.658838
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tahoe/flask-restless
https://github.com/tahoe/flask-restless
Entry file: flask-restless/tests/helpers.py
Scanned: 2016-10-25 23:43:36.777417
No vulnerabilities found.


PavelMPD/flask_oauth
https://github.com/PavelMPD/flask_oauth
Entry file: flask_oauth/server.py
Scanned: 2016-10-25 23:43:38.066277
No vulnerabilities found.


doubtingben/flask-mongo
https://github.com/doubtingben/flask-mongo
Entry file: flask-mongo/code/tumblelog/__init__.py
Scanned: 2016-10-25 23:43:39.477253
No vulnerabilities found.


hoikin-yiu/flask-blog
https://github.com/hoikin-yiu/flask-blog
Entry file: None
Scanned: 2016-10-25 23:43:39.998689
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Cloudwick-BT/flask_project
https://github.com/Cloudwick-BT/flask_project
Entry file: flask_project/hello.py
Scanned: 2016-10-25 23:43:53.347153
No vulnerabilities found.


gyonghua/flask-blog
https://github.com/gyonghua/flask-blog
Entry file: None
Scanned: 2016-10-25 23:43:53.863799
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

g-rich/flask-blog
https://github.com/g-rich/flask-blog
Entry file: None
Scanned: 2016-10-25 23:43:54.388400
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Zhgong/flask_microblog
https://github.com/Zhgong/flask_microblog
Entry file: flask_microblog/blog/__init__.py
Scanned: 2016-10-25 23:44:03.871786
No vulnerabilities found.


chensdream/learn-flask
https://github.com/chensdream/learn-flask
Entry file: None
Scanned: 2016-10-25 23:44:09.445062
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

coolmile23/flask_practice
https://github.com/coolmile23/flask_practice
Entry file: None
Scanned: 2016-10-25 23:44:17.333565
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

k9luo/Flask-Tutorial
https://github.com/k9luo/Flask-Tutorial
Entry file: Flask-Tutorial/microblog-version-0.10/app/__init__.py
Scanned: 2016-10-25 23:44:24.871458
No vulnerabilities found.


Harry-Yao/learn-flask
https://github.com/Harry-Yao/learn-flask
Entry file: None
Scanned: 2016-10-25 23:44:25.503462
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

danleyb2/flask-cloudinary
https://github.com/danleyb2/flask-cloudinary
Entry file: None
Scanned: 2016-10-25 23:44:26.015627
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/danleyb2/flask-cloudinary.

juan-castano/todo-flask
https://github.com/juan-castano/todo-flask
Entry file: todo-flask/app.py
Scanned: 2016-10-25 23:44:27.331178
No vulnerabilities found.


mullaned/Flask-Test
https://github.com/mullaned/Flask-Test
Entry file: Flask-Test/flask_test.py
Scanned: 2016-10-25 23:44:28.675178
Vulnerability 1:
File: Flask-Test/flask_test.py
 > User input at line 13, trigger word "get(": 
	age = ages.get(user)
File: Flask-Test/flask_test.py
 > reaches line 14, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('users.html',user=user, age=age)



zupeiza/flask-blog
https://github.com/zupeiza/flask-blog
Entry file: None
Scanned: 2016-10-25 23:44:29.193144
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

shopetan/flask-api
https://github.com/shopetan/flask-api
Entry file: None
Scanned: 2016-10-25 23:44:29.705152
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/shopetan/flask-api.

jungkoo/flask-dmango
https://github.com/jungkoo/flask-dmango
Entry file: flask-dmango/sample/blueprint_find.py
Scanned: 2016-10-25 23:44:31.141741
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

raghureddyram/flask-hello
https://github.com/raghureddyram/flask-hello
Entry file: flask-hello/hello_world.py
Scanned: 2016-10-25 23:44:32.435927
No vulnerabilities found.


hrushikesh198/flask-server
https://github.com/hrushikesh198/flask-server
Entry file: None
Scanned: 2016-10-25 23:44:32.965794
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/hrushikesh198/flask-server.

omarkurt/flask-injection
https://github.com/omarkurt/flask-injection
Entry file: flask-injection/index.py
Scanned: 2016-10-25 23:44:35.257675
No vulnerabilities found.


Datalker/Flask_sandbox
https://github.com/Datalker/Flask_sandbox
Entry file: Flask_sandbox/hello.py
Scanned: 2016-10-25 23:44:36.674368
No vulnerabilities found.


getsentry/demo-flask
https://github.com/getsentry/demo-flask
Entry file: demo-flask/app.py
Scanned: 2016-10-25 23:44:38.958011
No vulnerabilities found.
An Error occurred while scanning the repo: 'Node' object has no attribute 'first_statement'

technocake/flask-eksempel
https://github.com/technocake/flask-eksempel
Entry file: flask-eksempel/webserver.py
Scanned: 2016-10-25 23:44:40.271863
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wkzhu/flask_example
https://github.com/wkzhu/flask_example
Entry file: None
Scanned: 2016-10-25 23:44:41.964027
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/wkzhu/flask_example.

rgsingh/flask-timetrack
https://github.com/rgsingh/flask-timetrack
Entry file: flask-timetrack/app/__init__.py
Scanned: 2016-10-25 23:44:43.357404
Vulnerability 1:
File: flask-timetrack/app/views.py
 > User input at line 29, trigger word "get(": 
	taskid = request.args.get('id')
Reassigned in: 
	File: flask-timetrack/app/views.py
	 > Line 33: filtered_task = [x for x in tasks_file]
	File: flask-timetrack/app/views.py
	 > Line 35: task = json.dumps(filtered_task)
File: flask-timetrack/app/views.py
 > reaches line 36, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('edittask.html',taskid=taskid, task=task)



pultitom/study-flask
https://github.com/pultitom/study-flask
Entry file: study-flask/microblog/app/__init__.py
Scanned: 2016-10-25 23:44:44.675856
No vulnerabilities found.


StarsHu/ll-flask
https://github.com/StarsHu/ll-flask
Entry file: ll-flask/LikeLines/server.py
Scanned: 2016-10-25 23:44:46.114986
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

morphee31/flask_example
https://github.com/morphee31/flask_example
Entry file: None
Scanned: 2016-10-25 23:44:46.659879
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/morphee31/flask_example.

wumb0/flask-examples
https://github.com/wumb0/flask-examples
Entry file: flask-examples/bitly/app/__init__.py
Scanned: 2016-10-25 23:44:48.454325
Vulnerability 1:
File: flask-examples/bitly/app/views/main.py
 > User input at line 19, trigger word ".data": 
	suffix = form.suffix.data
Reassigned in: 
	File: flask-examples/bitly/app/views/main.py
	 > Line 24: suffix = tmp
	File: flask-examples/bitly/app/views/main.py
	 > Line 42: link = Link(suffix=suffix, link=form.link.data, expiry=expiry)
	File: flask-examples/bitly/app/views/main.py
	 > Line 25: link = Link.query.filter_by(suffix=suffix).first()
File: flask-examples/bitly/app/views/main.py
 > reaches line 47, trigger word "flash(": 
	flash('Your link is {}://{}/{}'.format(u.scheme, u.netloc, suffix),category='good')



vladimirdotk/flask-boilerplate
https://github.com/vladimirdotk/flask-boilerplate
Entry file: None
Scanned: 2016-10-25 23:44:54.471311
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/vladimirdotk/flask-boilerplate.

zubairah/Flask_App
https://github.com/zubairah/Flask_App
Entry file: Flask_App/Flask_App/app.py
Scanned: 2016-10-25 23:44:55.956975
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ramwin/flask_tutorial
https://github.com/ramwin/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:45:10.008558
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ramwin/flask_tutorial.

christopherL91/pythonflask
https://github.com/christopherL91/pythonflask
Entry file: pythonflask/app/main.py
Scanned: 2016-10-25 23:45:12.342404
No vulnerabilities found.


f-guitart/progcoms3-flask
https://github.com/f-guitart/progcoms3-flask
Entry file: progcoms3-flask/app.py
Scanned: 2016-10-25 23:45:19.572903
Vulnerability 1:
File: progcoms3-flask/app.py
 > User input at line 73, trigger word "get(": 
	zone = request.form.get('area')
Reassigned in: 
	File: progcoms3-flask/app.py
	 > Line 75: zone_data = get_zone_data(zone)
	File: progcoms3-flask/app.py
	 > Line 71: zone_data = []
File: progcoms3-flask/app.py
 > reaches line 76, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('zone_data_table.html',zone_data=zone_data, zones=zones)



kolapapa/blog_kola
https://github.com/kolapapa/blog_kola
Entry file: blog_kola/db.py
Scanned: 2016-10-25 23:45:30.467342
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: blog_kola/.venv/lib/python2.7/sre_compile.py

jackeylu/microblog
https://github.com/jackeylu/microblog
Entry file: None
Scanned: 2016-10-25 23:45:31.026061
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jackeylu/microblog.

garaud/pyris
https://github.com/garaud/pyris
Entry file: pyris/pyris/api/__init__.py
Scanned: 2016-10-25 23:45:32.609690
No vulnerabilities found.


nicc777/flask-webservice-wsgi-python3-demo
https://github.com/nicc777/flask-webservice-wsgi-python3-demo
Entry file: flask-webservice-wsgi-python3-demo/fwsdemo/app.py
Scanned: 2016-10-25 23:45:34.030047
No vulnerabilities found.


MicahSteinbrecher/mini-blog
https://github.com/MicahSteinbrecher/mini-blog
Entry file: mini-blog/flaskr.py
Scanned: 2016-10-25 23:45:35.839145
No vulnerabilities found.


remarcbalisi/rest-demo-flask-
https://github.com/remarcbalisi/rest-demo-flask-
Entry file: rest-demo-flask-/app.py
Scanned: 2016-10-25 23:45:37.580959
No vulnerabilities found.


duncan60/flask-github-api
https://github.com/duncan60/flask-github-api
Entry file: flask-github-api/app/__init__.py
Scanned: 2016-10-25 23:45:38.895769
No vulnerabilities found.


mattvisco/flask_test_2
https://github.com/mattvisco/flask_test_2
Entry file: flask_test_2/insta.py
Scanned: 2016-10-25 23:45:40.332269
No vulnerabilities found.


pavelchalyk/blackjack_on_flask
https://github.com/pavelchalyk/blackjack_on_flask
Entry file: blackjack_on_flask/blackjack.py
Scanned: 2016-10-25 23:45:41.643115
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

merryHunter/chat-flask-socketio
https://github.com/merryHunter/chat-flask-socketio
Entry file: chat-flask-socketio/chat.py
Scanned: 2016-10-25 23:45:47.312254
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

rjantos/flask-hello-world
https://github.com/rjantos/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:45:47.928046
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sd16spring/Toolbox-Flask
https://github.com/sd16spring/Toolbox-Flask
Entry file: Toolbox-Flask/hello.py
Scanned: 2016-10-25 23:45:51.623039
No vulnerabilities found.


HRKpython/flask
https://github.com/HRKpython/flask
Entry file: None
Scanned: 2016-10-25 23:45:52.172810
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bsteinberg/flask
https://github.com/bsteinberg/flask
Entry file: None
Scanned: 2016-10-25 23:45:52.679903
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ninadmhatre/zual
https://github.com/ninadmhatre/zual
Entry file: zual/local_mods/flask-blogging/flask_blogging/engine.py
Scanned: 2016-10-25 23:45:55.503281
Vulnerability 1:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 104, trigger word "get(": 
	count = count or config.get('BLOGGING_POSTS_PER_PAGE', 10)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 106: meta = _get_meta(storage, count, page)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 107: offset = meta['offset']
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 111: posts = storage.get_posts(count=count, offset=offset, include_draft=False, tag=None, user_id=None, recent=True)
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 115, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blogging/index.html',posts=posts, meta=meta, config=config)

Vulnerability 2:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 141, trigger word "get(": 
	count = count or config.get('BLOGGING_POSTS_PER_PAGE', 10)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 142: meta = _get_meta(storage, count, page,tag=tag)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 143: offset = meta['offset']
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 147: posts = storage.get_posts(count=count, offset=offset, tag=tag, include_draft=False, user_id=None, recent=True)
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blogging/index.html',posts=posts, meta=meta, config=config)

Vulnerability 3:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 159, trigger word "get(": 
	count = count or config.get('BLOGGING_POSTS_PER_PAGE', 10)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 160: meta = _get_meta(storage, count, page,user_id=user_id)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 161: offset = meta['offset']
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 164: posts = storage.get_posts(count=count, offset=offset, user_id=user_id, include_draft=False, tag=None, recent=True)
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 172, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blogging/index.html',posts=posts, meta=meta, config=config)

Vulnerability 4:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 199, trigger word ".data": 
	slug = post_processor.create_slug(form.title.data)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 204: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 220: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 224: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 228: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 200, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.page_by_id',post_id=pid, slug=slug))

Vulnerability 5:
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > User input at line 199, trigger word ".data": 
	slug = post_processor.create_slug(form.title.data)
Reassigned in: 
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 204: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 214: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 220: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 224: ret_MAYBE_FUNCTION_NAME = render_template('blogging/editor.html',form=form, post_id=post_id, config=config)
	File: zual/local_mods/flask-blogging/flask_blogging/views.py
	 > Line 228: ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.index',post_id=None))
File: zual/local_mods/flask-blogging/flask_blogging/views.py
 > reaches line 200, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('blogging.page_by_id',post_id=pid, slug=slug))



taogeT/flask-celery
https://github.com/taogeT/flask-celery
Entry file: flask-celery/example/app/__init__.py
Scanned: 2016-10-25 23:45:56.958816
No vulnerabilities found.


frankV/flask-sendgrid
https://github.com/frankV/flask-sendgrid
Entry file: flask-sendgrid/setup.py
Scanned: 2016-10-25 23:45:58.252627
No vulnerabilities found.


gyonghua/flasktaskr
https://github.com/gyonghua/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:45:58.782933
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Rothschild0120/flaskyblog
https://github.com/Rothschild0120/flaskyblog
Entry file: flaskyblog/app/__init__.py
Scanned: 2016-10-25 23:46:00.666745
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

islandev/flaskweb
https://github.com/islandev/flaskweb
Entry file: None
Scanned: 2016-10-25 23:46:01.217316
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yuyiwei305/flaskr
https://github.com/yuyiwei305/flaskr
Entry file: None
Scanned: 2016-10-25 23:46:01.754498
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yuyiwei305/flaskr.

stalwart201/flaskimgupload
https://github.com/stalwart201/flaskimgupload
Entry file: flaskimgupload/upload.py
Scanned: 2016-10-25 23:46:03.217039
Vulnerability 1:
File: flaskimgupload/upload.py
 > User input at line 19, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: flaskimgupload/upload.py
	 > Line 21: filename = secure_filename(file.filename)
	File: flaskimgupload/upload.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = '
    <!doctype html>
    <title>Upload new File</title>
    <h1>Upload new File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=Upload>
    </form>
    '
File: flaskimgupload/upload.py
 > reaches line 23, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))

Vulnerability 2:
File: flaskimgupload/upload.py
 > User input at line 19, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: flaskimgupload/upload.py
	 > Line 21: filename = secure_filename(file.filename)
	File: flaskimgupload/upload.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = '
    <!doctype html>
    <title>Upload new File</title>
    <h1>Upload new File</h1>
    <form action="" method=post enctype=multipart/form-data>
      <p><input type=file name=file>
         <input type=submit value=Upload>
    </form>
    '
File: flaskimgupload/upload.py
 > reaches line 23, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('uploaded_file',filename=filename))



zixuzhang/flasky
https://github.com/zixuzhang/flasky
Entry file: None
Scanned: 2016-10-25 23:46:03.783766
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hoobalias/Flaskr
https://github.com/hoobalias/Flaskr
Entry file: None
Scanned: 2016-10-25 23:46:10.301180
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

azureappserviceoss/FlaskAzure
https://github.com/azureappserviceoss/FlaskAzure
Entry file: FlaskAzure/FlaskWebProject1/__init__.py
Scanned: 2016-10-25 23:46:20.523675
No vulnerabilities found.


yhappy/FlaskProjects
https://github.com/yhappy/FlaskProjects
Entry file: FlaskProjects/FlaskProjects.py
Scanned: 2016-10-25 23:46:27.880363
No vulnerabilities found.


tajihiro/FlaskBluemix
https://github.com/tajihiro/FlaskBluemix
Entry file: FlaskBluemix/index.py
Scanned: 2016-10-25 23:46:32.203790
No vulnerabilities found.


Leyawiin/FlaskDemo
https://github.com/Leyawiin/FlaskDemo
Entry file: FlaskDemo/app/__init__.py
Scanned: 2016-10-25 23:46:34.137264
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

KotiyaSenya/FlaskLearn
https://github.com/KotiyaSenya/FlaskLearn
Entry file: FlaskLearn/flask_learn/__init__.py
Scanned: 2016-10-25 23:46:35.599607
Vulnerability 1:
File: FlaskLearn/flask_learn/main/views/index.py
 > User input at line 10, trigger word "get(": 
	user_agent = request.headers.get('User-Agent')
File: FlaskLearn/flask_learn/main/views/index.py
 > reaches line 11, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',user_agent=user_agent, current_time=datetime.utcnow())



Patreon/cartographer
https://github.com/Patreon/cartographer
Entry file: cartographer/example/generic_social_network/app/__init__.py
Scanned: 2016-10-25 23:46:37.410876
No vulnerabilities found.


Ketouem/flask-boto3
https://github.com/Ketouem/flask-boto3
Entry file: flask-boto3/example.py
Scanned: 2016-10-25 23:46:38.843061
No vulnerabilities found.


bellkev/docker-flask-browserify
https://github.com/bellkev/docker-flask-browserify
Entry file: docker-flask-browserify/src/python/hello.py
Scanned: 2016-10-25 23:46:40.138625
No vulnerabilities found.


Pushould/pushould-flask-sample
https://github.com/Pushould/pushould-flask-sample
Entry file: pushould-flask-sample/app.py
Scanned: 2016-10-25 23:46:41.450236
No vulnerabilities found.


miaoihan/qulook_flask
https://github.com/miaoihan/qulook_flask
Entry file: qulook_flask/qulook.py
Scanned: 2016-10-25 23:46:45.526538
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: qulook_flask/ENV/lib/python2.7/sre_compile.py

rogerpence/Flask-App
https://github.com/rogerpence/Flask-App
Entry file: Flask-App/app/__init__.py
Scanned: 2016-10-25 23:46:47.221679
No vulnerabilities found.


sandmarq/flask_test
https://github.com/sandmarq/flask_test
Entry file: None
Scanned: 2016-10-25 23:46:47.744717
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

barcai/Flask_Megatutorial
https://github.com/barcai/Flask_Megatutorial
Entry file: Flask_Megatutorial/app/__init__.py
Scanned: 2016-10-25 23:46:49.135503
No vulnerabilities found.


kessiacastro/flask-hello
https://github.com/kessiacastro/flask-hello
Entry file: flask-hello/app.py
Scanned: 2016-10-25 23:46:53.215063
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

renaldopringle/flask_heroku
https://github.com/renaldopringle/flask_heroku
Entry file: flask_heroku/app.py
Scanned: 2016-10-25 23:46:56.914129
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sunhughees/flask-blog
https://github.com/sunhughees/flask-blog
Entry file: None
Scanned: 2016-10-25 23:46:57.978887
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

AVandelay/flask_blog
https://github.com/AVandelay/flask_blog
Entry file: flask_blog/__init__.py
Scanned: 2016-10-25 23:47:01.836003
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_blog/venv/lib/python3.4/operator.py

uyoaix/learn-flask
https://github.com/uyoaix/learn-flask
Entry file: None
Scanned: 2016-10-25 23:47:02.403185
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

frenos/flask-sample
https://github.com/frenos/flask-sample
Entry file: flask-sample/app/__init__.py
Scanned: 2016-10-25 23:47:03.857786
No vulnerabilities found.


gyonghua/flask-blog
https://github.com/gyonghua/flask-blog
Entry file: None
Scanned: 2016-10-25 23:47:04.394218
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Zhgong/flask_microblog
https://github.com/Zhgong/flask_microblog
Entry file: flask_microblog/blog/__init__.py
Scanned: 2016-10-25 23:47:05.769293
No vulnerabilities found.


zhangcheng/flask-example
https://github.com/zhangcheng/flask-example
Entry file: flask-example/example/app.py
Scanned: 2016-10-25 23:47:07.106592
No vulnerabilities found.


gemimarosier/flask_project
https://github.com/gemimarosier/flask_project
Entry file: flask_project/tv_routes.py
Scanned: 2016-10-25 23:47:10.264218
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_project/env/lib/python2.7/sre_compile.py

gchange/flask_server
https://github.com/gchange/flask_server
Entry file: flask_server/flask_server/main.py
Scanned: 2016-10-25 23:47:11.606793
Vulnerability 1:
File: flask_server/flask_server/main.py
 > User input at line 21, trigger word "form[": 
	account = request.form['account']
Reassigned in: 
	File: flask_server/flask_server/main.py
	 > Line 31: account = generator.generator(account, account, account_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 32: password = generator.generator(account, password, password_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect('/password/')
	File: flask_server/flask_server/main.py
	 > Line 22: password = request.form['password']
File: flask_server/flask_server/main.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('generator.html',account=account, password=password)

Vulnerability 2:
File: flask_server/flask_server/main.py
 > User input at line 22, trigger word "form[": 
	password = request.form['password']
Reassigned in: 
	File: flask_server/flask_server/main.py
	 > Line 32: password = generator.generator(account, password, password_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect('/password/')
File: flask_server/flask_server/main.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('generator.html',account=account, password=password)

Vulnerability 3:
File: flask_server/flask_server/main.py
 > User input at line 23, trigger word "form[": 
	account_length = int(request.form['account_length'])
Reassigned in: 
	File: flask_server/flask_server/main.py
	 > Line 31: account = generator.generator(account, account, account_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 32: password = generator.generator(account, password, password_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect('/password/')
	File: flask_server/flask_server/main.py
	 > Line 21: account = request.form['account']
	File: flask_server/flask_server/main.py
	 > Line 22: password = request.form['password']
File: flask_server/flask_server/main.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('generator.html',account=account, password=password)

Vulnerability 4:
File: flask_server/flask_server/main.py
 > User input at line 24, trigger word "form[": 
	password_length = int(request.form['password_length'])
Reassigned in: 
	File: flask_server/flask_server/main.py
	 > Line 32: password = generator.generator(account, password, password_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect('/password/')
	File: flask_server/flask_server/main.py
	 > Line 22: password = request.form['password']
File: flask_server/flask_server/main.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('generator.html',account=account, password=password)

Vulnerability 5:
File: flask_server/flask_server/main.py
 > User input at line 25, trigger word "form[": 
	is_digit = request.form['is_digit']
Reassigned in: 
	File: flask_server/flask_server/main.py
	 > Line 28: is_digit = is_digit.lower() == 'true'TrueFalse
	File: flask_server/flask_server/main.py
	 > Line 31: account = generator.generator(account, account, account_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 32: password = generator.generator(account, password, password_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect('/password/')
	File: flask_server/flask_server/main.py
	 > Line 21: account = request.form['account']
	File: flask_server/flask_server/main.py
	 > Line 22: password = request.form['password']
File: flask_server/flask_server/main.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('generator.html',account=account, password=password)

Vulnerability 6:
File: flask_server/flask_server/main.py
 > User input at line 26, trigger word "form[": 
	is_uplow = request.form['is_uplow']
Reassigned in: 
	File: flask_server/flask_server/main.py
	 > Line 29: is_uplow = is_uplow.lower() == 'true'TrueFalse
	File: flask_server/flask_server/main.py
	 > Line 31: account = generator.generator(account, account, account_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 32: password = generator.generator(account, password, password_length, is_digit, is_uplow)
	File: flask_server/flask_server/main.py
	 > Line 19: ret_MAYBE_FUNCTION_NAME = redirect('/password/')
	File: flask_server/flask_server/main.py
	 > Line 21: account = request.form['account']
	File: flask_server/flask_server/main.py
	 > Line 22: password = request.form['password']
File: flask_server/flask_server/main.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('generator.html',account=account, password=password)



Nickyzj/flask-first
https://github.com/Nickyzj/flask-first
Entry file: flask-first/flask-first-notes.py
Scanned: 2016-10-25 23:47:13.177572
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

propupul/Flask_app
https://github.com/propupul/Flask_app
Entry file: Flask_app/hello.py
Scanned: 2016-10-25 23:47:16.720423
Vulnerability 1:
File: Flask_app/hello.py
 > User input at line 43, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: Flask_app/hello.py
	 > Line 44: prod_name = location(name)[0]
	File: Flask_app/hello.py
	 > Line 45: loc_name = location(name)[1] + '-' + location(name)[2] + '-' + location(name)[3]
	File: Flask_app/hello.py
	 > Line 49: prod_name = ''
	File: Flask_app/hello.py
	 > Line 38: prod_name = ''
	File: Flask_app/hello.py
	 > Line 39: loc_name = ''
File: Flask_app/hello.py
 > reaches line 52, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, prod_name=prod_name, loc_name=loc_name)



m18664319351/Blog_Flask
https://github.com/m18664319351/Blog_Flask
Entry file: Blog_Flask/app/__init__.py
Scanned: 2016-10-25 23:47:18.174589
No vulnerabilities found.


testforvln/flask-learning
https://github.com/testforvln/flask-learning
Entry file: flask-learning/hello.py
Scanned: 2016-10-25 23:47:19.472930
No vulnerabilities found.


Unicomcat/flask_test
https://github.com/Unicomcat/flask_test
Entry file: None
Scanned: 2016-10-25 23:47:19.999228
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jidn/flask-obscure
https://github.com/jidn/flask-obscure
Entry file: flask-obscure/tests/test_url.py
Scanned: 2016-10-25 23:47:28.458800
No vulnerabilities found.


cdaidone/small_flask
https://github.com/cdaidone/small_flask
Entry file: small_flask/small_flask.py
Scanned: 2016-10-25 23:47:34.876770
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

morphee31/flask_example
https://github.com/morphee31/flask_example
Entry file: None
Scanned: 2016-10-25 23:47:35.425716
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/morphee31/flask_example.

pedrogaudencio/refunite-flask
https://github.com/pedrogaudencio/refunite-flask
Entry file: refunite-flask/app.py
Scanned: 2016-10-25 23:47:36.970458
No vulnerabilities found.


master105/flask_server
https://github.com/master105/flask_server
Entry file: flask_server/project.py
Scanned: 2016-10-25 23:47:39.992457
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

d3prof3t/flask-intro
https://github.com/d3prof3t/flask-intro
Entry file: flask-intro/flasktaskr/__init__.py
Scanned: 2016-10-25 23:47:41.427171
No vulnerabilities found.


zubairah/Flask_App
https://github.com/zubairah/Flask_App
Entry file: Flask_App/Flask_App/app.py
Scanned: 2016-10-25 23:47:42.826008
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

shinstev/flask_server
https://github.com/shinstev/flask_server
Entry file: flask_server/app.py
Scanned: 2016-10-25 23:47:46.301702
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_server/venv/lib/python2.7/sre_compile.py

vramakin/LearnFlask
https://github.com/vramakin/LearnFlask
Entry file: LearnFlask/flaskr.py
Scanned: 2016-10-25 23:47:47.744531
No vulnerabilities found.


nbeede/docker-flask
https://github.com/nbeede/docker-flask
Entry file: docker-flask/app.py
Scanned: 2016-10-25 23:47:49.044002
No vulnerabilities found.


runningstrawberry/microblog
https://github.com/runningstrawberry/microblog
Entry file: None
Scanned: 2016-10-25 23:47:49.604090
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/runningstrawberry/microblog.

kolapapa/blog_kola
https://github.com/kolapapa/blog_kola
Entry file: blog_kola/db.py
Scanned: 2016-10-25 23:47:53.598359
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: blog_kola/.venv/lib/python2.7/sre_compile.py

B2Crypt/Random-Gamemode-
https://github.com/B2Crypt/Random-Gamemode-
Entry file: Random-Gamemode-/FLASK/__init__.py
Scanned: 2016-10-25 23:47:55.410779
No vulnerabilities found.


Lich2013/learnflask
https://github.com/Lich2013/learnflask
Entry file: None
Scanned: 2016-10-25 23:47:57.069508
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Lich2013/learnflask.

jbisasky/flaskProtoBuffer
https://github.com/jbisasky/flaskProtoBuffer
Entry file: flaskProtoBuffer/flaskHello.py
Scanned: 2016-10-25 23:48:00.664132
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

WangShengguang/FlaskWebDevelopment
https://github.com/WangShengguang/FlaskWebDevelopment
Entry file: FlaskWebDevelopment/hello.py
Scanned: 2016-10-25 23:48:02.733082
Vulnerability 1:
File: FlaskWebDevelopment/app/main/views.py
 > User input at line 17, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 25: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 27: posts = pagination.items
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 16: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskWebDevelopment/app/main/views.py
 > reaches line 28, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: FlaskWebDevelopment/app/main/views.py
 > User input at line 20, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 18: show_followed = False
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 16: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskWebDevelopment/app/main/views.py
 > reaches line 28, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: FlaskWebDevelopment/app/main/views.py
 > User input at line 108, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 110: page = post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 111: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 113: comments = pagination.items
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 107: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: FlaskWebDevelopment/app/main/views.py
 > reaches line 114, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 4:
File: FlaskWebDevelopment/app/main/views.py
 > User input at line 170, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 171: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWS_PER_PAGE'], error_out=False)
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 172: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 169: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskWebDevelopment/app/main/views.py
 > reaches line 173, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 5:
File: FlaskWebDevelopment/app/main/views.py
 > User input at line 183, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 184: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 187: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 182: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskWebDevelopment/app/main/views.py
 > reaches line 189, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 6:
File: FlaskWebDevelopment/app/main/views.py
 > User input at line 198, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 199: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskWebDevelopment/app/main/views.py
	 > Line 201: comments = pagination.items
File: FlaskWebDevelopment/app/main/views.py
 > reaches line 202, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



JunliuHub/FlaskWebDevelopment
https://github.com/JunliuHub/FlaskWebDevelopment
Entry file: FlaskWebDevelopment/src/helloflask.py
Scanned: 2016-10-25 23:48:05.058306
No vulnerabilities found.


adrianomaringolo/py-flask-tuts
https://github.com/adrianomaringolo/py-flask-tuts
Entry file: None
Scanned: 2016-10-25 23:48:11.239641
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rjantos/flask-hello-world
https://github.com/rjantos/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:48:11.747538
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ishwarya-iyer/nuage_proj_flask_app
https://github.com/ishwarya-iyer/nuage_proj_flask_app
Entry file: nuage_proj_flask_app/app.py
Scanned: 2016-10-25 23:48:13.974662
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

SamirKanaan/PlantillaFlaskREST1
https://github.com/SamirKanaan/PlantillaFlaskREST1
Entry file: PlantillaFlaskREST1/plantilla1.py
Scanned: 2016-10-25 23:48:15.877151
No vulnerabilities found.


remarcbalisi/flask-angular-auth
https://github.com/remarcbalisi/flask-angular-auth
Entry file: flask-angular-auth/project/__init__.py
Scanned: 2016-10-25 23:48:17.183057
No vulnerabilities found.


jarosenb/flask_ionratio_V2
https://github.com/jarosenb/flask_ionratio_V2
Entry file: flask_ionratio_V2/hello.py
Scanned: 2016-10-25 23:48:18.615204
No vulnerabilities found.


themuppet2/flask-hello-world
https://github.com/themuppet2/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:48:19.163639
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kindoprec/Flask-SecureHeaders
https://github.com/kindoprec/Flask-SecureHeaders
Entry file: Flask-SecureHeaders/tests/core_test.py
Scanned: 2016-10-25 23:48:20.486198
No vulnerabilities found.


ishwarya-iyer/nuage_flask_app
https://github.com/ishwarya-iyer/nuage_flask_app
Entry file: nuage_flask_app/app.py
Scanned: 2016-10-25 23:48:23.676666
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Christomas/flask_project_skeleton
https://github.com/Christomas/flask_project_skeleton
Entry file: flask_project_skeleton/app/__init__.py
Scanned: 2016-10-25 23:48:25.128863
No vulnerabilities found.


pranavn-cuelogic/flask_video_conference_room
https://github.com/pranavn-cuelogic/flask_video_conference_room
Entry file: flask_video_conference_room/video_conf/main.py
Scanned: 2016-10-25 23:48:26.540450
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

llxxee/A-website-by-Flask
https://github.com/llxxee/A-website-by-Flask
Entry file: None
Scanned: 2016-10-25 23:48:27.860845
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/llxxee/A-website-by-Flask.

micah-cal-sandbox/flask-heroku-sandbox
https://github.com/micah-cal-sandbox/flask-heroku-sandbox
Entry file: flask-heroku-sandbox/app.py
Scanned: 2016-10-25 23:48:29.138487
No vulnerabilities found.


lkpanganiban/flask-rest-example
https://github.com/lkpanganiban/flask-rest-example
Entry file: flask-rest-example/app.py
Scanned: 2016-10-25 23:48:33.456492
Vulnerability 1:
File: flask-rest-example/app.py
 > User input at line 48, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: flask-rest-example/app.py
 > reaches line 55, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



rodcox89/flask-restful-blueprint-boilerplate
https://github.com/rodcox89/flask-restful-blueprint-boilerplate
Entry file: flask-restful-blueprint-boilerplate/main.py
Scanned: 2016-10-25 23:48:36.926773
No vulnerabilities found.


braddmiller/flask-by-example
https://github.com/braddmiller/flask-by-example
Entry file: None
Scanned: 2016-10-25 23:48:37.455173
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/braddmiller/flask-by-example.

tych0/flask-demo-app
https://github.com/tych0/flask-demo-app
Entry file: flask-demo-app/app/__init__.py
Scanned: 2016-10-25 23:48:42.248457
No vulnerabilities found.


technocake/flask-user-profiles-example
https://github.com/technocake/flask-user-profiles-example
Entry file: flask-user-profiles-example/pyhtml.py
Scanned: 2016-10-25 23:48:43.536913
No vulnerabilities found.


Christomas/i_dev_flask
https://github.com/Christomas/i_dev_flask
Entry file: i_dev_flask/app/__init__.py
Scanned: 2016-10-25 23:48:44.983972
Vulnerability 1:
File: i_dev_flask/app/auth/views.py
 > User input at line 121, trigger word ".data": 
	user = models.User.query.filter_by(email=form.email.data).first()
Reassigned in: 
	File: i_dev_flask/app/auth/views.py
	 > Line 123: token = options.dump_token('reset_password', user.id)
File: i_dev_flask/app/auth/views.py
 > reaches line 124, trigger word "url_for(": 
	options.send_email(user.email, '重置密码', 'auth/mail/reset_password',user=user, url=url_for('auth.reset_confirm',token=token, _external=True))

Vulnerability 2:
File: i_dev_flask/app/auth/views.py
 > User input at line 139, trigger word "get(": 
	user = models.User.query.get(user_id)
Reassigned in: 
	File: i_dev_flask/app/auth/views.py
	 > Line 143: form = forms.ResetPasswordForm(email=user.email)
	File: i_dev_flask/app/auth/views.py
	 > Line 147: user.password = form.password.data
	File: i_dev_flask/app/auth/views.py
	 > Line 138: ret_MAYBE_FUNCTION_NAME = redirect(url_for('auth.login'))
	File: i_dev_flask/app/auth/views.py
	 > Line 142: ret_MAYBE_FUNCTION_NAME = redirect(url_for('auth.lgoin'))
	File: i_dev_flask/app/auth/views.py
	 > Line 150: ret_MAYBE_FUNCTION_NAME = redirect(url_for('auth.login'))
File: i_dev_flask/app/auth/views.py
 > reaches line 151, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('auth/reset_confirm.html',form=form)



paulsavala/flask_aws_demo
https://github.com/paulsavala/flask_aws_demo
Entry file: None
Scanned: 2016-10-25 23:48:53.968114
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

udpcloud/flask-rest-api
https://github.com/udpcloud/flask-rest-api
Entry file: flask-rest-api/app/__init__.py
Scanned: 2016-10-25 23:48:55.280709
Vulnerability 1:
File: flask-rest-api/app/api_v1/spaces.py
 > User input at line 16, trigger word "get(": 
	space = Spaces.query.get(id)
File: flask-rest-api/app/api_v1/spaces.py
 > reaches line 19, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(space_schema.dump(space).data)



AndersonQ/appengine-flask-contacts-api
https://github.com/AndersonQ/appengine-flask-contacts-api
Entry file: appengine-flask-contacts-api/application/__init__.py
Scanned: 2016-10-25 23:48:56.920150
No vulnerabilities found.


dhiraka/flask_basic_app
https://github.com/dhiraka/flask_basic_app
Entry file: flask_basic_app/test_rest_app.py
Scanned: 2016-10-25 23:48:58.240582
No vulnerabilities found.


aaronja38/assignment10-flask
https://github.com/aaronja38/assignment10-flask
Entry file: assignment10-flask/winners.py
Scanned: 2016-10-25 23:49:01.965394
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: assignment10-flask/env/lib/python2.7/sre_compile.py

avikantz/Flask-API-Demo
https://github.com/avikantz/Flask-API-Demo
Entry file: Flask-API-Demo/app/__init__.py
Scanned: 2016-10-25 23:49:03.778078
No vulnerabilities found.


deenaacree/flask_app1
https://github.com/deenaacree/flask_app1
Entry file: flask_app1/songsapp.py
Scanned: 2016-10-25 23:49:07.179749
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_app1/env/lib/python2.7/sre_compile.py

AMontalva/flask_hello_world
https://github.com/AMontalva/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-25 23:49:09.504498
No vulnerabilities found.


xiewenlongs/Flask-CacheOBJ
https://github.com/xiewenlongs/Flask-CacheOBJ
Entry file: Flask-CacheOBJ/tests.py
Scanned: 2016-10-25 23:49:11.078192
No vulnerabilities found.


thefunkjunky/python-flask-boilerplate
https://github.com/thefunkjunky/python-flask-boilerplate
Entry file: python-flask-boilerplate/mainapp/__init__.py
Scanned: 2016-10-25 23:49:12.495352
No vulnerabilities found.


harryoh/flask-rest-api
https://github.com/harryoh/flask-rest-api
Entry file: flask-rest-api/app/__init__.py
Scanned: 2016-10-25 23:49:13.802946
Vulnerability 1:
File: flask-rest-api/app/api_v1/spaces.py
 > User input at line 16, trigger word "get(": 
	space = Spaces.query.get(id)
File: flask-rest-api/app/api_v1/spaces.py
 > reaches line 19, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(space_schema.dump(space).data)



DanBlakeman/flask-deploy-practice
https://github.com/DanBlakeman/flask-deploy-practice
Entry file: flask-deploy-practice/src/app.py
Scanned: 2016-10-25 23:49:15.213206
No vulnerabilities found.


MoxmiNu/flask-mongo-test
https://github.com/MoxmiNu/flask-mongo-test
Entry file: flask-mongo-test/provisioning/files/dr-app.py
Scanned: 2016-10-25 23:49:32.249793
No vulnerabilities found.


medev21/Social-Network---Flask
https://github.com/medev21/Social-Network---Flask
Entry file: Social-Network---Flask/app.py
Scanned: 2016-10-25 23:49:33.605512
No vulnerabilities found.


sealzjh/flask-celery-test
https://github.com/sealzjh/flask-celery-test
Entry file: None
Scanned: 2016-10-25 23:49:34.918659
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sealzjh/flask-celery-test.

Glaun/flask-hello-world
https://github.com/Glaun/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:49:35.455788
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

acouderc/flask
https://github.com/acouderc/flask
Entry file: None
Scanned: 2016-10-25 23:49:37.869313
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

aintmetho/flask
https://github.com/aintmetho/flask
Entry file: None
Scanned: 2016-10-25 23:49:38.400136
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MapEntryManagement/flask
https://github.com/MapEntryManagement/flask
Entry file: None
Scanned: 2016-10-25 23:49:38.915544
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

klen/flask-pw
https://github.com/klen/flask-pw
Entry file: flask-pw/tests.py
Scanned: 2016-10-25 23:49:40.369728
No vulnerabilities found.


KujiraProject/Flask-PAM
https://github.com/KujiraProject/Flask-PAM
Entry file: Flask-PAM/example/www.py
Scanned: 2016-10-25 23:49:41.790955
No vulnerabilities found.


colingorrie/flask-boilerplate
https://github.com/colingorrie/flask-boilerplate
Entry file: None
Scanned: 2016-10-25 23:49:42.303438
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/colingorrie/flask-boilerplate.

TwilioDevEd/automated-survey-flask
https://github.com/TwilioDevEd/automated-survey-flask
Entry file: automated-survey-flask/automated_survey_flask/__init__.py
Scanned: 2016-10-25 23:49:45.002406
No vulnerabilities found.


gene1wood/flaskoktaapp
https://github.com/gene1wood/flaskoktaapp
Entry file: flaskoktaapp/flaskoktaapp/__init__.py
Scanned: 2016-10-25 23:49:46.438064
Vulnerability 1:
File: flaskoktaapp/flaskoktaapp/__init__.py
 > User input at line 201, trigger word "form[": 
	url = request.form['RelayState']
File: flaskoktaapp/flaskoktaapp/__init__.py
 > reaches line 196, trigger word "url_for(": 
	url = url_for('user')

Vulnerability 2:
File: flaskoktaapp/flaskoktaapp/__init__.py
 > User input at line 201, trigger word "form[": 
	url = request.form['RelayState']
File: flaskoktaapp/flaskoktaapp/__init__.py
 > reaches line 204, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url)



yu66s/flaskr
https://github.com/yu66s/flaskr
Entry file: None
Scanned: 2016-10-25 23:49:46.974597
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yu66s/flaskr.

xiaohu2015/Flasky
https://github.com/xiaohu2015/Flasky
Entry file: None
Scanned: 2016-10-25 23:49:47.491295
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/xiaohu2015/Flasky.

cwywang/flasky
https://github.com/cwywang/flasky
Entry file: None
Scanned: 2016-10-25 23:49:48.024507
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wangxuan007/flasky
https://github.com/wangxuan007/flasky
Entry file: None
Scanned: 2016-10-25 23:49:48.578362
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lambdaplus/flasko
https://github.com/lambdaplus/flasko
Entry file: flasko/Flasko.py
Scanned: 2016-10-25 23:49:53.021558
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flasko/lib/python3.4/operator.py

SSUHan/flasktutorial
https://github.com/SSUHan/flasktutorial
Entry file: None
Scanned: 2016-10-25 23:49:54.601370
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SSUHan/flasktutorial.

ma53192190/flaskwork
https://github.com/ma53192190/flaskwork
Entry file: flaskwork/flaskwork.py
Scanned: 2016-10-25 23:49:56.949303
No vulnerabilities found.


hoobalias/Flaskr
https://github.com/hoobalias/Flaskr
Entry file: None
Scanned: 2016-10-25 23:49:57.473068
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

NapoleonYoung/FlaskWeb
https://github.com/NapoleonYoung/FlaskWeb
Entry file: FlaskWeb/MyFirstWebServer/app/__init__.py
Scanned: 2016-10-25 23:50:03.029763
Vulnerability 1:
File: FlaskWeb/MyFirstWebServer/app/main/views.py
 > User input at line 15, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: FlaskWeb/MyFirstWebServer/app/main/views.py
	 > Line 12: name = None
File: FlaskWeb/MyFirstWebServer/app/main/views.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, name=name)



zhouyang2640/FlaskInit
https://github.com/zhouyang2640/FlaskInit
Entry file: FlaskInit/hello.py
Scanned: 2016-10-25 23:50:04.519087
No vulnerabilities found.


s3c0nDD/FlaskTutorial
https://github.com/s3c0nDD/FlaskTutorial
Entry file: FlaskTutorial/app/__init__.py
Scanned: 2016-10-25 23:50:05.834080
No vulnerabilities found.


ZaighumRajput/flaskPractice
https://github.com/ZaighumRajput/flaskPractice
Entry file: flaskPractice/chapter2/hello.py
Scanned: 2016-10-25 23:50:09.297750
No vulnerabilities found.


rmotr/flask-api-example
https://github.com/rmotr/flask-api-example
Entry file: flask-api-example/api/_01_manual_response_class.py
Scanned: 2016-10-25 23:50:13.151900
No vulnerabilities found.


jjapp/flask-blog
https://github.com/jjapp/flask-blog
Entry file: None
Scanned: 2016-10-25 23:50:13.662303
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

frankpiva/mastering-flask
https://github.com/frankpiva/mastering-flask
Entry file: mastering-flask/main.py
Scanned: 2016-10-25 23:50:15.956640
No vulnerabilities found.


engfilipe/curso_flask
https://github.com/engfilipe/curso_flask
Entry file: None
Scanned: 2016-10-25 23:50:21.452681
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sandmarq/flask_test
https://github.com/sandmarq/flask_test
Entry file: None
Scanned: 2016-10-25 23:50:32.969623
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

barcai/Flask_Megatutorial
https://github.com/barcai/Flask_Megatutorial
Entry file: Flask_Megatutorial/app/__init__.py
Scanned: 2016-10-25 23:50:35.374413
No vulnerabilities found.


zhang-zhang/learning-flask
https://github.com/zhang-zhang/learning-flask
Entry file: learning-flask/flaskr.py
Scanned: 2016-10-25 23:50:36.684811
No vulnerabilities found.


kosen10spajam/f-flask
https://github.com/kosen10spajam/f-flask
Entry file: f-flask/main.py
Scanned: 2016-10-25 23:50:38.099954
Vulnerability 1:
File: f-flask/main.py
 > User input at line 132, trigger word "get(": 
	since = int(request.args.get('since'))
File: f-flask/main.py
 > reaches line 134, trigger word "execute(": 
	sql.execute('SELECT time, animal, message FROM messages WHERE time >= %d' % since)

Vulnerability 2:
File: f-flask/main.py
 > User input at line 142, trigger word "get(": 
	animal = request.values.get('animal')
File: f-flask/main.py
 > reaches line 146, trigger word "execute(": 
	sql.execute('INSERT INTO messages (time, animal, message) VALUES (%d, '%s', $$%s$$)' % (time, animal, message))

Vulnerability 3:
File: f-flask/main.py
 > User input at line 143, trigger word "get(": 
	message = request.values.get('message')
File: f-flask/main.py
 > reaches line 146, trigger word "execute(": 
	sql.execute('INSERT INTO messages (time, animal, message) VALUES (%d, '%s', $$%s$$)' % (time, animal, message))

Vulnerability 4:
File: f-flask/main.py
 > User input at line 144, trigger word "get(": 
	time = int(request.values.get('time'))
File: f-flask/main.py
 > reaches line 146, trigger word "execute(": 
	sql.execute('INSERT INTO messages (time, animal, message) VALUES (%d, '%s', $$%s$$)' % (time, animal, message))



mihai011/flask_server
https://github.com/mihai011/flask_server
Entry file: flask_server/app.py
Scanned: 2016-10-25 23:50:39.990400
No vulnerabilities found.


morganvdavis/boilerplate-flask
https://github.com/morganvdavis/boilerplate-flask
Entry file: None
Scanned: 2016-10-25 23:50:41.294880
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/morganvdavis/boilerplate-flask.

jwg4/flask_converter
https://github.com/jwg4/flask_converter
Entry file: flask_converter/examples/app_with_constructor.py
Scanned: 2016-10-25 23:50:42.712177
No vulnerabilities found.


AVandelay/flask_blog
https://github.com/AVandelay/flask_blog
Entry file: flask_blog/__init__.py
Scanned: 2016-10-25 23:50:46.021547
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_blog/venv/lib/python3.4/operator.py

Davidthecoolsmartguy/weasyprint-Flask
https://github.com/Davidthecoolsmartguy/weasyprint-Flask
Entry file: weasyprint-Flask/app.py
Scanned: 2016-10-25 23:50:47.359240
No vulnerabilities found.


rajdeepd/flask-helloworld
https://github.com/rajdeepd/flask-helloworld
Entry file: flask-helloworld/app.py
Scanned: 2016-10-25 23:50:50.820277
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-helloworld/venv/lib/python2.7/sre_compile.py

honeeWong/Flask-Blog
https://github.com/honeeWong/Flask-Blog
Entry file: Flask-Blog/application/__init__.py
Scanned: 2016-10-25 23:50:52.676873
No vulnerabilities found.


frenos/flask-sample
https://github.com/frenos/flask-sample
Entry file: flask-sample/app/__init__.py
Scanned: 2016-10-25 23:50:54.071440
No vulnerabilities found.


lockie/flask_ldap
https://github.com/lockie/flask_ldap
Entry file: flask_ldap/index.py
Scanned: 2016-10-25 23:50:55.384394
Vulnerability 1:
File: flask_ldap/index.py
 > User input at line 28, trigger word "get(": 
	next = request.args.get('next')
Reassigned in: 
	File: flask_ldap/index.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: flask_ldap/index.py
 > reaches line 29, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('index'))

Vulnerability 2:
File: flask_ldap/index.py
 > User input at line 28, trigger word "get(": 
	next = request.args.get('next')
Reassigned in: 
	File: flask_ldap/index.py
	 > Line 30: ret_MAYBE_FUNCTION_NAME = render_template('login.html',form=form)
File: flask_ldap/index.py
 > reaches line 29, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next or url_for('index'))



AndreyBalandin/flask-test
https://github.com/AndreyBalandin/flask-test
Entry file: flask-test/app.py
Scanned: 2016-10-25 23:50:56.677561
No vulnerabilities found.


kessiacastro/imdb-flask
https://github.com/kessiacastro/imdb-flask
Entry file: imdb-flask/app.py
Scanned: 2016-10-25 23:51:01.865563
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

AmI-2016/python-Flask
https://github.com/AmI-2016/python-Flask
Entry file: python-Flask/flask-ex.py
Scanned: 2016-10-25 23:51:03.862636
Vulnerability 1:
File: python-Flask/flask-ex.py
 > User input at line 30, trigger word "form[": 
	user = request.form['user']
Reassigned in: 
	File: python-Flask/flask-ex.py
	 > Line 33: session['user'] = user
	File: python-Flask/flask-ex.py
	 > Line 34: session['valid'] = True
File: python-Flask/flask-ex.py
 > reaches line 36, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',user=user)



anazard/zardify_flask
https://github.com/anazard/zardify_flask
Entry file: zardify_flask/main/__init__.py
Scanned: 2016-10-25 23:51:08.481199
No vulnerabilities found.


buckeye76guy/learning-flask
https://github.com/buckeye76guy/learning-flask
Entry file: learning-flask/curious.py
Scanned: 2016-10-25 23:51:10.310590
No vulnerabilities found.


thewhitedingo/MenuFlask
https://github.com/thewhitedingo/MenuFlask
Entry file: MenuFlask/flaskserver.py
Scanned: 2016-10-25 23:51:11.781226
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

anazard/flask_project
https://github.com/anazard/flask_project
Entry file: flask_project/main/__init__.py
Scanned: 2016-10-25 23:51:16.294195
No vulnerabilities found.


lizmeister321/flask_practice
https://github.com/lizmeister321/flask_practice
Entry file: None
Scanned: 2016-10-25 23:51:16.872664
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

phillip-hopper/flask-test
https://github.com/phillip-hopper/flask-test
Entry file: flask-test/flaskr.py
Scanned: 2016-10-25 23:51:18.280888
No vulnerabilities found.


wkqzxh/flask_leaklib
https://github.com/wkqzxh/flask_leaklib
Entry file: flask_leaklib/flask_leaklib/leaklib_app/__init__.py
Scanned: 2016-10-25 23:51:19.610322
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Y-Rookie/flask_blog
https://github.com/Y-Rookie/flask_blog
Entry file: None
Scanned: 2016-10-25 23:51:24.429489
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

brightforme/flask-sqlalchemy
https://github.com/brightforme/flask-sqlalchemy
Entry file: flask-sqlalchemy/flask_sqlalchemy/__init__.py
Scanned: 2016-10-25 23:51:26.410195
No vulnerabilities found.


pedrogaudencio/refunite-flask
https://github.com/pedrogaudencio/refunite-flask
Entry file: refunite-flask/app.py
Scanned: 2016-10-25 23:51:34.458777
No vulnerabilities found.


holmandw/flask-arduino
https://github.com/holmandw/flask-arduino
Entry file: flask-arduino/app/__init__.py
Scanned: 2016-10-25 23:51:36.041854
No vulnerabilities found.


zenyui/flask-test
https://github.com/zenyui/flask-test
Entry file: flask-test/api-test/api2.py
Scanned: 2016-10-25 23:51:37.370877
No vulnerabilities found.


vobine/JobFlask
https://github.com/vobine/JobFlask
Entry file: None
Scanned: 2016-10-25 23:51:38.912695
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/vobine/JobFlask.

Lobster1991/learn_flask
https://github.com/Lobster1991/learn_flask
Entry file: learn_flask/app/models.py
Scanned: 2016-10-25 23:51:42.997782
No vulnerabilities found.


SarahJaine/flask-tutorial
https://github.com/SarahJaine/flask-tutorial
Entry file: None
Scanned: 2016-10-25 23:51:43.537462
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SarahJaine/flask-tutorial.

vatseek/flask_lessons
https://github.com/vatseek/flask_lessons
Entry file: flask_lessons/app/__init__.py
Scanned: 2016-10-25 23:51:44.869209
No vulnerabilities found.


Michael-F-Bryan/flask_template
https://github.com/Michael-F-Bryan/flask_template
Entry file: flask_template/app/__init__.py
Scanned: 2016-10-25 23:51:46.298082
No vulnerabilities found.


ol3j/azureday-flask
https://github.com/ol3j/azureday-flask
Entry file: azureday-flask/FlaskWebProject/__init__.py
Scanned: 2016-10-25 23:51:48.101965
Vulnerability 1:
File: azureday-flask/FlaskWebProject/views.py
 > User input at line 57, trigger word "form[": 
	mobile = request.form['yourmobile']
Reassigned in: 
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 74: task = 'PartitionKey''RowKey''mobile''file''tasksPoznan'suffixmobilefilename
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 77: new = db.Log(suffix=suffix, mobile=mobile, image=filename)
File: azureday-flask/FlaskWebProject/views.py
 > reaches line 86, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('form_action.html',mobile=mobile, url=url, important_metric=important_metric)

Vulnerability 2:
File: azureday-flask/FlaskWebProject/views.py
 > User input at line 58, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 59: basename = file.filename
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 61: filename = '_'.join([suffix, basename])
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 68: url = blob_service.make_blob_url(container_name='images', blob_name=filename)
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 72: body = json.dumps('suffix''image'str(suffix)str(url))
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 74: task = 'PartitionKey''RowKey''mobile''file''tasksPoznan'suffixmobilefilename
	File: azureday-flask/FlaskWebProject/views.py
	 > Line 77: new = db.Log(suffix=suffix, mobile=mobile, image=filename)
File: azureday-flask/FlaskWebProject/views.py
 > reaches line 86, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('form_action.html',mobile=mobile, url=url, important_metric=important_metric)



runningstrawberry/microblog
https://github.com/runningstrawberry/microblog
Entry file: None
Scanned: 2016-10-25 23:51:48.660785
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/runningstrawberry/microblog.

ShivamMahajan/my_first_flask_project
https://github.com/ShivamMahajan/my_first_flask_project
Entry file: my_first_flask_project/hello.py
Scanned: 2016-10-25 23:51:57.296164
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: my_first_flask_project/venv/lib/python2.7/sre_compile.py

sakib3/flask_Cartridge_openshift
https://github.com/sakib3/flask_Cartridge_openshift
Entry file: flask_Cartridge_openshift/flaskapp.py
Scanned: 2016-10-25 23:51:58.711077
No vulnerabilities found.


mfyock/flask_hello_world
https://github.com/mfyock/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-25 23:52:02.091711
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sakib3/flask_cartridge_Heroku
https://github.com/sakib3/flask_cartridge_Heroku
Entry file: flask_cartridge_Heroku/app.py
Scanned: 2016-10-25 23:52:03.505062
No vulnerabilities found.


gclabon/Twilio-Flask-CSV
https://github.com/gclabon/Twilio-Flask-CSV
Entry file: Twilio-Flask-CSV/twilioFlaskBasic/twilioFlaskBasic.py
Scanned: 2016-10-25 23:52:04.953511
No vulnerabilities found.


AdamHumphrey/housing2016flask
https://github.com/AdamHumphrey/housing2016flask
Entry file: None
Scanned: 2016-10-25 23:52:06.491980
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/AdamHumphrey/housing2016flask.

SamirKanaan/PlantillaFlaskREST2
https://github.com/SamirKanaan/PlantillaFlaskREST2
Entry file: PlantillaFlaskREST2/inicia.py
Scanned: 2016-10-25 23:52:07.909877
No vulnerabilities found.


pravinthsam/MnistFlaskKeras
https://github.com/pravinthsam/MnistFlaskKeras
Entry file: MnistFlaskKeras/flaskserver.py
Scanned: 2016-10-25 23:52:10.323396
No vulnerabilities found.


rfmapp/flask-by-example
https://github.com/rfmapp/flask-by-example
Entry file: None
Scanned: 2016-10-25 23:52:10.851899
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rfmapp/flask-by-example.

dschuler36/SimpleFlaskBlog
https://github.com/dschuler36/SimpleFlaskBlog
Entry file: SimpleFlaskBlog/main.py
Scanned: 2016-10-25 23:53:19.365335
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

macloo/flask_project1
https://github.com/macloo/flask_project1
Entry file: flask_project1/winners_BAK.py
Scanned: 2016-10-25 23:53:20.833543
No vulnerabilities found.


3130000547/musicbox-base-on-flask
https://github.com/3130000547/musicbox-base-on-flask
Entry file: musicbox-base-on-flask/musicbox.py
Scanned: 2016-10-25 23:53:22.364640
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

AjithPanneerselvam/my_flask_project
https://github.com/AjithPanneerselvam/my_flask_project
Entry file: my_flask_project/project.py
Scanned: 2016-10-25 23:53:23.798359
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

avikantz/Flask-API-Demo
https://github.com/avikantz/Flask-API-Demo
Entry file: Flask-API-Demo/app/__init__.py
Scanned: 2016-10-25 23:53:25.557104
No vulnerabilities found.


dengjonathan/flask_first_project
https://github.com/dengjonathan/flask_first_project
Entry file: flask_first_project/final_project.py
Scanned: 2016-10-25 23:53:27.363730
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

boyombo/asterisk-pycall-flask
https://github.com/boyombo/asterisk-pycall-flask
Entry file: asterisk-pycall-flask/calldemo/app.py
Scanned: 2016-10-25 23:53:28.668767
No vulnerabilities found.


kaslemr/sample_flask_project
https://github.com/kaslemr/sample_flask_project
Entry file: sample_flask_project/app2.py
Scanned: 2016-10-25 23:53:30.163842
Vulnerability 1:
File: sample_flask_project/app2.py
 > User input at line 129, trigger word "get(": 
	username = request.json.get('username')
Reassigned in: 
	File: sample_flask_project/app2.py
	 > Line 135: user = User(username=username)
File: sample_flask_project/app2.py
 > reaches line 139, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('username'user.username), 201, 'Location'url_for('get_user',id=user.id, _external=True))

Vulnerability 2:
File: sample_flask_project/app2.py
 > User input at line 129, trigger word "get(": 
	username = request.json.get('username')
Reassigned in: 
	File: sample_flask_project/app2.py
	 > Line 135: user = User(username=username)
File: sample_flask_project/app2.py
 > reaches line 139, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('username'user.username), 201, 'Location'url_for('get_user',id=user.id, _external=True))

Vulnerability 3:
File: sample_flask_project/app2.py
 > User input at line 145, trigger word "get(": 
	user = User.query.get(id)
File: sample_flask_project/app2.py
 > reaches line 148, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('username'user.username)

Vulnerability 4:
File: sample_flask_project/app.py
 > User input at line 81, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: sample_flask_project/app.py
 > reaches line 88, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'make_public_task(task)), 201)



mapingfan/Flask-Mail-Test
https://github.com/mapingfan/Flask-Mail-Test
Entry file: Flask-Mail-Test/Mail-Test.py
Scanned: 2016-10-25 23:53:32.460840
No vulnerabilities found.


4Catalyzer/flask-resty-tenants
https://github.com/4Catalyzer/flask-resty-tenants
Entry file: flask-resty-tenants/tests/conftest.py
Scanned: 2016-10-25 23:53:33.868301
No vulnerabilities found.


lucaswadedavis/iguanodon
https://github.com/lucaswadedavis/iguanodon
Entry file: iguanodon/server.py
Scanned: 2016-10-25 23:53:35.503703
No vulnerabilities found.


ederavilaprado/paas-app-example-python-flask
https://github.com/ederavilaprado/paas-app-example-python-flask
Entry file: paas-app-example-python-flask/app.py
Scanned: 2016-10-25 23:53:37.295368
No vulnerabilities found.


afh/yabab
https://github.com/afh/yabab
Entry file: yabab/yabab/__init__.py
Scanned: 2016-10-25 23:53:39.216623
No vulnerabilities found.


Michael-F-Bryan/mfb_website
https://github.com/Michael-F-Bryan/mfb_website
Entry file: mfb_website/app/__init__.py
Scanned: 2016-10-25 23:53:40.657338
No vulnerabilities found.


Yelloworking/SlackWebservice
https://github.com/Yelloworking/SlackWebservice
Entry file: None
Scanned: 2016-10-25 23:53:41.959974
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Yelloworking/SlackWebservice.

TrailBlazerZ/imgaptcha--api
https://github.com/TrailBlazerZ/imgaptcha--api
Entry file: imgaptcha--api/app.py
Scanned: 2016-10-25 23:53:43.657140
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

NSBum/AnkiStatsServer
https://github.com/NSBum/AnkiStatsServer
Entry file: AnkiStatsServer/app.py
Scanned: 2016-10-25 23:53:45.630148
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yobuntu/laboratory
https://github.com/yobuntu/laboratory
Entry file: laboratory/laboratory/fooflask.py
Scanned: 2016-10-25 23:53:46.925954
Vulnerability 1:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 5, trigger word "get(": 
	response = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 5, trigger word "url_for(": 
	response = client.get(url_for('hello'))

Vulnerability 2:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 11, trigger word "get(": 
	r = client.get(url_for('add',name='test'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 11, trigger word "url_for(": 
	r = client.get(url_for('add',name='test'))

Vulnerability 3:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 12, trigger word "get(": 
	r = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 11, trigger word "url_for(": 
	r = client.get(url_for('add',name='test'))

Vulnerability 4:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 11, trigger word "get(": 
	r = client.get(url_for('add',name='test'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 12, trigger word "url_for(": 
	r = client.get(url_for('hello'))

Vulnerability 5:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 12, trigger word "get(": 
	r = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 12, trigger word "url_for(": 
	r = client.get(url_for('hello'))

Vulnerability 6:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 19, trigger word "get(": 
	response = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 19, trigger word "url_for(": 
	response = client.get(url_for('hello'))

Vulnerability 7:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 26, trigger word "get(": 
	r = client.get(url_for('add',name='test0'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 26, trigger word "url_for(": 
	r = client.get(url_for('add',name='test0'))

Vulnerability 8:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 27, trigger word "get(": 
	r = client.get(url_for('add',name='test1'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 26, trigger word "url_for(": 
	r = client.get(url_for('add',name='test0'))

Vulnerability 9:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 28, trigger word "get(": 
	r = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 26, trigger word "url_for(": 
	r = client.get(url_for('add',name='test0'))

Vulnerability 10:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 26, trigger word "get(": 
	r = client.get(url_for('add',name='test0'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 27, trigger word "url_for(": 
	r = client.get(url_for('add',name='test1'))

Vulnerability 11:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 27, trigger word "get(": 
	r = client.get(url_for('add',name='test1'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 27, trigger word "url_for(": 
	r = client.get(url_for('add',name='test1'))

Vulnerability 12:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 28, trigger word "get(": 
	r = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 27, trigger word "url_for(": 
	r = client.get(url_for('add',name='test1'))

Vulnerability 13:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 26, trigger word "get(": 
	r = client.get(url_for('add',name='test0'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 28, trigger word "url_for(": 
	r = client.get(url_for('hello'))

Vulnerability 14:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 27, trigger word "get(": 
	r = client.get(url_for('add',name='test1'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 28, trigger word "url_for(": 
	r = client.get(url_for('hello'))

Vulnerability 15:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 28, trigger word "get(": 
	r = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 28, trigger word "url_for(": 
	r = client.get(url_for('hello'))

Vulnerability 16:
File: laboratory/laboratory/tests/test_base.py
 > User input at line 36, trigger word "get(": 
	response = client.get(url_for('hello'))
File: laboratory/laboratory/tests/test_base.py
 > reaches line 36, trigger word "url_for(": 
	response = client.get(url_for('hello'))



hkalexling/Twitter-Like-Count
https://github.com/hkalexling/Twitter-Like-Count
Entry file: Twitter-Like-Count/__init__.py
Scanned: 2016-10-25 23:53:48.467972
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ljxxcaijing/flask
https://github.com/ljxxcaijing/flask
Entry file: None
Scanned: 2016-10-25 23:53:50.399875
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

PacktPublishing/Mastering-Flask
https://github.com/PacktPublishing/Mastering-Flask
Entry file: Mastering-Flask/Chapter 13_Code/Chapter 13/webapp/__init__.py
Scanned: 2016-10-25 23:53:52.549179
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

migrateup/flaskr
https://github.com/migrateup/flaskr
Entry file: None
Scanned: 2016-10-25 23:53:53.086162
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/migrateup/flaskr.

reparadocs/Flask-HelloWorldBot
https://github.com/reparadocs/Flask-HelloWorldBot
Entry file: Flask-HelloWorldBot/HelloWorldBot.py
Scanned: 2016-10-25 23:53:54.484699
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

singingwolfboy/flask-sse
https://github.com/singingwolfboy/flask-sse
Entry file: flask-sse/tests/conftest.py
Scanned: 2016-10-25 23:53:55.926372
No vulnerabilities found.


pankajpant22/flask
https://github.com/pankajpant22/flask
Entry file: None
Scanned: 2016-10-25 23:54:13.497423
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

underdogio/flask-graylog
https://github.com/underdogio/flask-graylog
Entry file: flask-graylog/example/app.py
Scanned: 2016-10-25 23:54:20.844714
No vulnerabilities found.


adyouri/flask-basics
https://github.com/adyouri/flask-basics
Entry file: flask-basics/lesson5/app.py
Scanned: 2016-10-25 23:54:22.289456
No vulnerabilities found.


KujiraProject/Flask-PAM
https://github.com/KujiraProject/Flask-PAM
Entry file: Flask-PAM/example/www.py
Scanned: 2016-10-25 23:54:24.708633
No vulnerabilities found.


TwilioDevEd/automated-survey-flask
https://github.com/TwilioDevEd/automated-survey-flask
Entry file: automated-survey-flask/automated_survey_flask/__init__.py
Scanned: 2016-10-25 23:54:27.368360
No vulnerabilities found.


gucxufangling/flask--
https://github.com/gucxufangling/flask--
Entry file: flask--/app/__init__.py
Scanned: 2016-10-25 23:54:31.837086
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pragmaticcoders/flask-react-seed
https://github.com/pragmaticcoders/flask-react-seed
Entry file: None
Scanned: 2016-10-25 23:54:32.437875
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pragmaticcoders/flask-react-seed.

danil3d/flaskblog
https://github.com/danil3d/flaskblog
Entry file: None
Scanned: 2016-10-25 23:54:32.952405
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/danil3d/flaskblog.

ailtoncsf/flasklearn
https://github.com/ailtoncsf/flasklearn
Entry file: flasklearn/flask-basics/app.py
Scanned: 2016-10-25 23:54:40.494439
No vulnerabilities found.


VimDong/flaskme
https://github.com/VimDong/flaskme
Entry file: flaskme/app/__init__.py
Scanned: 2016-10-25 23:54:42.119872
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

axavio/flasky
https://github.com/axavio/flasky
Entry file: None
Scanned: 2016-10-25 23:54:42.634264
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

annoys-parrot/flaskbook
https://github.com/annoys-parrot/flaskbook
Entry file: flaskbook/application.py
Scanned: 2016-10-25 23:54:44.246705
Vulnerability 1:
File: flaskbook/user/views.py
 > User input at line 24, trigger word ".data": 
	user = User.objects.filter(username=form.username.data).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 37: user = None
File: flaskbook/user/views.py
 > reaches line 24, trigger word "filter(": 
	user = User.objects.filter(username=form.username.data).first()

Vulnerability 2:
File: flaskbook/user/views.py
 > User input at line 31, trigger word "get(": 
	next = session.get('next')
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 35: ret_MAYBE_FUNCTION_NAME = 'User logged in'
	File: flaskbook/user/views.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = render_template('user/login.html',form=form, error=error)
File: flaskbook/user/views.py
 > reaches line 33, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(next)

Vulnerability 3:
File: flaskbook/user/views.py
 > User input at line 47, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 49: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 62, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 4:
File: flaskbook/user/views.py
 > User input at line 49, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 62, trigger word "render_template(": 
	body_html = render_template('mail/user/register.html',user=user)

Vulnerability 5:
File: flaskbook/user/views.py
 > User input at line 47, trigger word ".data": 
	hashed_password = bcrypt.hashpw(form.password.data, salt)
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 49: user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 63, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 6:
File: flaskbook/user/views.py
 > User input at line 49, trigger word ".data": 
	user = User(username=form.username.data, password=hashed_password, email=form.email.data, first_name=form.first_name.data, last_name=form.last_name.data, change_configuration='new_email''confirmation_code'form.email.datacode)
File: flaskbook/user/views.py
 > reaches line 63, trigger word "render_template(": 
	body_text = render_template('mail/user/register.txt',user=user)

Vulnerability 7:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 90, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()

Vulnerability 8:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 106, trigger word "filter(": 
	if User.objects.filter(username=form.username.data.lower()).first():

Vulnerability 9:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 113, trigger word "filter(": 
	if User.objects.filter(email=form.email.data.lower()).first():

Vulnerability 10:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 126, trigger word "render_template(": 
	body_html = render_template('mail/user/change_email.html',user=user)

Vulnerability 11:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 127, trigger word "render_template(": 
	body_text = render_template('mail/user/change_email.txt',user=user)

Vulnerability 12:
File: flaskbook/user/views.py
 > User input at line 90, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
Reassigned in: 
	File: flaskbook/user/views.py
	 > Line 92: form = EditForm(obj=user)
	File: flaskbook/user/views.py
	 > Line 99: filename = secure_filename(form.image.data.filename)
	File: flaskbook/user/views.py
	 > Line 100: file_path = os.path.join(UPLOAD_FOLDER, 'user', filename)
	File: flaskbook/user/views.py
	 > Line 102: image_ts = str(thumbnail_process(file_path, 'user', str(user.id)))
	File: flaskbook/user/views.py
	 > Line 122: form.email.data = user.email
	File: flaskbook/user/views.py
	 > Line 133: user.profile_image = image_ts
	File: flaskbook/user/views.py
	 > Line 97: image_ts = None
File: flaskbook/user/views.py
 > reaches line 137, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user/edit.html',form=form, error=error, message=message, user=user)

Vulnerability 13:
File: flaskbook/user/views.py
 > User input at line 160, trigger word ".data": 
	user = User.objects.filter(email=form.email.data).first()
File: flaskbook/user/views.py
 > reaches line 160, trigger word "filter(": 
	user = User.objects.filter(email=form.email.data).first()

Vulnerability 14:
File: flaskbook/user/views.py
 > User input at line 160, trigger word ".data": 
	user = User.objects.filter(email=form.email.data).first()
File: flaskbook/user/views.py
 > reaches line 168, trigger word "render_template(": 
	body_html = render_template('mail/user/password_reset.html',user=user)

Vulnerability 15:
File: flaskbook/user/views.py
 > User input at line 160, trigger word ".data": 
	user = User.objects.filter(email=form.email.data).first()
File: flaskbook/user/views.py
 > reaches line 169, trigger word "render_template(": 
	body_text = render_template('mail/user/password_reset.txt',user=user)

Vulnerability 16:
File: flaskbook/user/views.py
 > User input at line 215, trigger word "get(": 
	user = User.objects.filter(username=session.get('username')).first()
File: flaskbook/user/views.py
 > reaches line 215, trigger word "filter(": 
	user = User.objects.filter(username=session.get('username')).first()



jinxiaoyuan/flaskr
https://github.com/jinxiaoyuan/flaskr
Entry file: None
Scanned: 2016-10-25 23:54:44.770027
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jinxiaoyuan/flaskr.

fkirwin/flaskhelloworld
https://github.com/fkirwin/flaskhelloworld
Entry file: flaskhelloworld/hello_world.py
Scanned: 2016-10-25 23:54:48.043076
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wang7lu6qiang5/flasky
https://github.com/wang7lu6qiang5/flasky
Entry file: None
Scanned: 2016-10-25 23:54:48.557326
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ak042/flasktaskr
https://github.com/ak042/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:54:49.080037
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wanghaa/flasky
https://github.com/wanghaa/flasky
Entry file: None
Scanned: 2016-10-25 23:54:49.591341
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

omshankar1/flaskapp
https://github.com/omshankar1/flaskapp
Entry file: None
Scanned: 2016-10-25 23:54:50.104846
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/omshankar1/flaskapp.

maxwang051/flasktaskr
https://github.com/maxwang051/flasktaskr
Entry file: None
Scanned: 2016-10-25 23:54:50.618328
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

joanna-solomiewicz/FlaskWorkshop
https://github.com/joanna-solomiewicz/FlaskWorkshop
Entry file: FlaskWorkshop/app.py
Scanned: 2016-10-25 23:54:53.669451
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskWorkshop/venv/lib/python3.5/operator.py

NapoleonYoung/FlaskWeb
https://github.com/NapoleonYoung/FlaskWeb
Entry file: FlaskWeb/MyFirstWebServer/app/__init__.py
Scanned: 2016-10-25 23:54:58.520162
Vulnerability 1:
File: FlaskWeb/MyFirstWebServer/app/main/views.py
 > User input at line 15, trigger word ".data": 
	name = form.name.data
Reassigned in: 
	File: FlaskWeb/MyFirstWebServer/app/main/views.py
	 > Line 12: name = None
File: FlaskWeb/MyFirstWebServer/app/main/views.py
 > reaches line 18, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, name=name)



rmGuarachi/flaskTutorial
https://github.com/rmGuarachi/flaskTutorial
Entry file: flaskTutorial/webapp.py
Scanned: 2016-10-25 23:54:59.853424
No vulnerabilities found.


mion00/flaskSQLAlchemy
https://github.com/mion00/flaskSQLAlchemy
Entry file: flaskSQLAlchemy/app.py
Scanned: 2016-10-25 23:55:01.218388
Vulnerability 1:
File: flaskSQLAlchemy/app.py
 > User input at line 32, trigger word "get(": 
	service = request.args.get('service')
File: flaskSQLAlchemy/app.py
 > reaches line 34, trigger word "filter(": 
	users = User.query.filter(User.json.has_key(service)).all()



GriMel/FlaskFirst
https://github.com/GriMel/FlaskFirst
Entry file: FlaskFirst/app/__init__.py
Scanned: 2016-10-25 23:55:02.957350
No vulnerabilities found.


Pazoles/Geocoder
https://github.com/Pazoles/Geocoder
Entry file: Geocoder/app.py
Scanned: 2016-10-25 23:55:06.939965
No vulnerabilities found.


spring3th/flask-blogdemo
https://github.com/spring3th/flask-blogdemo
Entry file: flask-blogdemo/app/__init__.py
Scanned: 2016-10-25 23:55:08.562780
Vulnerability 1:
File: flask-blogdemo/app/main/views.py
 > User input at line 27, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 35: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['SIKA_POSTS_PER_PAGE'], error_out=False)
	File: flask-blogdemo/app/main/views.py
	 > Line 38: posts = pagination.items
	File: flask-blogdemo/app/main/views.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blogdemo/app/main/views.py
 > reaches line 39, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: flask-blogdemo/app/main/views.py
 > User input at line 30, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 28: show_followed = False
	File: flask-blogdemo/app/main/views.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blogdemo/app/main/views.py
 > reaches line 39, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: flask-blogdemo/app/main/views.py
 > User input at line 44, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 45: pagination = User.query.order_by(User.member_since.desc()).paginate(page,per_page=current_app.config['SIKA_USERS_PER_PAGE'], error_out=False)
	File: flask-blogdemo/app/main/views.py
	 > Line 46: alluser = pagination.items
File: flask-blogdemo/app/main/views.py
 > reaches line 47, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('alluser.html',alluser=alluser, pagination=pagination, page=page)

Vulnerability 4:
File: flask-blogdemo/app/main/views.py
 > User input at line 106, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 108: page = post.comments.count() - 1 // current_app.config['SIKA_COMMENTS_PER_PAGE'] + 1
	File: flask-blogdemo/app/main/views.py
	 > Line 110: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['SIKA_COMMENTS_PER_PAGE'], error_out=False)
	File: flask-blogdemo/app/main/views.py
	 > Line 111: comments = pagination.items
	File: flask-blogdemo/app/main/views.py
	 > Line 105: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flask-blogdemo/app/main/views.py
 > reaches line 112, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: flask-blogdemo/app/main/views.py
 > User input at line 184, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 185: pagination = user.followers.paginate(page,per_page=current_app.config['SIKA_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask-blogdemo/app/main/views.py
	 > Line 188: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask-blogdemo/app/main/views.py
	 > Line 183: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blogdemo/app/main/views.py
 > reaches line 190, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: flask-blogdemo/app/main/views.py
 > User input at line 201, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 202: pagination = user.followed.paginate(page,per_page=current_app.config['SIKA_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask-blogdemo/app/main/views.py
	 > Line 205: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask-blogdemo/app/main/views.py
	 > Line 200: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask-blogdemo/app/main/views.py
 > reaches line 207, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: flask-blogdemo/app/main/views.py
 > User input at line 230, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask-blogdemo/app/main/views.py
	 > Line 231: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['SIKA_COMMENTS_PER_PAGE'], error_out=False)
	File: flask-blogdemo/app/main/views.py
	 > Line 232: comments = pagination.items
File: flask-blogdemo/app/main/views.py
 > reaches line 233, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



NixonInnes/Flask-Blueprints
https://github.com/NixonInnes/Flask-Blueprints
Entry file: Flask-Blueprints/app/__init__.py
Scanned: 2016-10-25 23:55:10.831447
No vulnerabilities found.


isichkodmitry/flask-caesar
https://github.com/isichkodmitry/flask-caesar
Entry file: flask-caesar/app/__init__.py
Scanned: 2016-10-25 23:55:12.269001
No vulnerabilities found.


and3rson/flask-testsite
https://github.com/and3rson/flask-testsite
Entry file: flask-testsite/app.py
Scanned: 2016-10-25 23:55:13.588264
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

SShayashi/flask-test
https://github.com/SShayashi/flask-test
Entry file: flask-test/flaskr/__init__.py
Scanned: 2016-10-25 23:55:14.991249
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tyrelsouza/flask_vagrant
https://github.com/tyrelsouza/flask_vagrant
Entry file: flask_vagrant/code/src/app.py
Scanned: 2016-10-25 23:55:21.391221
No vulnerabilities found.


ak042/flask-blog
https://github.com/ak042/flask-blog
Entry file: None
Scanned: 2016-10-25 23:55:21.934922
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhang-zhang/learning-flask
https://github.com/zhang-zhang/learning-flask
Entry file: learning-flask/flaskr.py
Scanned: 2016-10-25 23:55:25.238595
No vulnerabilities found.


syniuhin/storyteller-flask
https://github.com/syniuhin/storyteller-flask
Entry file: storyteller-flask/app/__init__.py
Scanned: 2016-10-25 23:55:26.714668
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

arushijain/flask_tutorial
https://github.com/arushijain/flask_tutorial
Entry file: None
Scanned: 2016-10-25 23:55:28.267683
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/arushijain/flask_tutorial.

iooop/flask-blog
https://github.com/iooop/flask-blog
Entry file: None
Scanned: 2016-10-25 23:55:32.822191
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

AndreyBalandin/flask-test
https://github.com/AndreyBalandin/flask-test
Entry file: flask-test/app.py
Scanned: 2016-10-25 23:55:34.137959
No vulnerabilities found.


mastershao/lening-flask
https://github.com/mastershao/lening-flask
Entry file: None
Scanned: 2016-10-25 23:55:42.056314
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mastershao/lening-flask.

markchodges/mastering-flask
https://github.com/markchodges/mastering-flask
Entry file: mastering-flask/webapp/__init__.py
Scanned: 2016-10-25 23:55:46.259644
Vulnerability 1:
File: mastering-flask/webapp/controllers/blog.py
 > User input at line 71, trigger word ".data": 
	filename = secure_filename(form.photo.data.filename)
Reassigned in: 
	File: mastering-flask/webapp/controllers/blog.py
	 > Line 74: filename = None
File: mastering-flask/webapp/controllers/blog.py
 > reaches line 75, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('upload.html',form=form, filename=filename)



keeleys/flask_RESTful
https://github.com/keeleys/flask_RESTful
Entry file: flask_RESTful/api/__init__.py
Scanned: 2016-10-25 23:55:47.702369
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Datamine/PokerTexter
https://github.com/Datamine/PokerTexter
Entry file: PokerTexter/run-pokertexter.py
Scanned: 2016-10-25 23:55:49.880586
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

AmI-2016/python-Flask
https://github.com/AmI-2016/python-Flask
Entry file: python-Flask/flask-ex.py
Scanned: 2016-10-25 23:55:51.307774
Vulnerability 1:
File: python-Flask/flask-ex.py
 > User input at line 30, trigger word "form[": 
	user = request.form['user']
Reassigned in: 
	File: python-Flask/flask-ex.py
	 > Line 33: session['user'] = user
	File: python-Flask/flask-ex.py
	 > Line 34: session['valid'] = True
File: python-Flask/flask-ex.py
 > reaches line 36, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('login.html',user=user)



SorenPeterson/flask-intro
https://github.com/SorenPeterson/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-25 23:55:54.995539
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-intro/venv/lib/python2.7/sre_compile.py

an5rag/flask-tutorial
https://github.com/an5rag/flask-tutorial
Entry file: None
Scanned: 2016-10-25 23:55:55.568995
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/an5rag/flask-tutorial.

sugarguo/Flask_Blog
https://github.com/sugarguo/Flask_Blog
Entry file: Flask_Blog/app/__init__.py
Scanned: 2016-10-25 23:56:00.044832
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

andresgariglio/poc-flask
https://github.com/andresgariglio/poc-flask
Entry file: poc-flask/poc-flask/flask_rest_service/__init__.py
Scanned: 2016-10-25 23:56:01.498249
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

stuncyilmaz/flask_init
https://github.com/stuncyilmaz/flask_init
Entry file: flask_init/hello.py
Scanned: 2016-10-25 23:56:03.074105
No vulnerabilities found.


mrpatiwi/flask-starter
https://github.com/mrpatiwi/flask-starter
Entry file: None
Scanned: 2016-10-25 23:56:03.600368
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mrpatiwi/flask-starter.

jmccutchan/raspi_flask
https://github.com/jmccutchan/raspi_flask
Entry file: raspi_flask/app.py
Scanned: 2016-10-25 23:56:07.414160
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

priyankt68/flask_example
https://github.com/priyankt68/flask_example
Entry file: None
Scanned: 2016-10-25 23:56:07.969120
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/priyankt68/flask_example.

zeratullich/flask_maizi
https://github.com/zeratullich/flask_maizi
Entry file: flask_maizi/app/__init__.py
Scanned: 2016-10-25 23:56:10.513983
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mtimebombm/python-flask
https://github.com/mtimebombm/python-flask
Entry file: python-flask/app/__init__.py
Scanned: 2016-10-25 23:56:12.239294
No vulnerabilities found.


Lobster1991/learn_flask
https://github.com/Lobster1991/learn_flask
Entry file: learn_flask/app/models.py
Scanned: 2016-10-25 23:56:17.119633
No vulnerabilities found.


JessyHurbain/Flask_test
https://github.com/JessyHurbain/Flask_test
Entry file: Flask_test/coucou.py
Scanned: 2016-10-25 23:56:18.439453
No vulnerabilities found.


achinnac/microblog-flask
https://github.com/achinnac/microblog-flask
Entry file: microblog-flask/app/__init__.py
Scanned: 2016-10-25 23:56:19.728384
No vulnerabilities found.


jpirih/Flask-Blog
https://github.com/jpirih/Flask-Blog
Entry file: None
Scanned: 2016-10-25 23:56:25.190999
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhaokefei/web_flask
https://github.com/zhaokefei/web_flask
Entry file: web_flask/app/__init__.py
Scanned: 2016-10-25 23:56:26.962714
Vulnerability 1:
File: web_flask/app/main/views.py
 > User input at line 24, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: web_flask/app/main/views.py
	 > Line 25: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: web_flask/app/main/views.py
	 > Line 28: posts = pagination.items
	File: web_flask/app/main/views.py
	 > Line 23: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: web_flask/app/main/views.py
 > reaches line 29, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)



BaichuanWu/Blog_flask
https://github.com/BaichuanWu/Blog_flask
Entry file: Blog_flask/flaskpractise.py
Scanned: 2016-10-25 23:56:28.261975
No vulnerabilities found.


sreyemnayr/jss-flask
https://github.com/sreyemnayr/jss-flask
Entry file: jss-flask/jss-flask.py
Scanned: 2016-10-25 23:56:29.582612
No vulnerabilities found.


hectorip/TinyFlaskExperiment
https://github.com/hectorip/TinyFlaskExperiment
Entry file: TinyFlaskExperiment/hello.py
Scanned: 2016-10-25 23:56:30.870668
No vulnerabilities found.


WhiteShirts/windowsflask
https://github.com/WhiteShirts/windowsflask
Entry file: windowsflask/flasky/app/__init__.py
Scanned: 2016-10-25 23:56:32.625957
Vulnerability 1:
File: windowsflask/flasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: windowsflask/flasky/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: windowsflask/flasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: windowsflask/flasky/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: windowsflask/flasky/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: windowsflask/flasky/app/api_1_0/posts.py
	 > Line 19: next = None
File: windowsflask/flasky/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: windowsflask/flasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 23: next = None
File: windowsflask/flasky/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: windowsflask/flasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 23: next = None
File: windowsflask/flasky/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: windowsflask/flasky/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 20: prev = None
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 23: next = None
File: windowsflask/flasky/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: windowsflask/flasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 45: next = None
File: windowsflask/flasky/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: windowsflask/flasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 45: next = None
File: windowsflask/flasky/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: windowsflask/flasky/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 42: prev = None
	File: windowsflask/flasky/app/api_1_0/users.py
	 > Line 45: next = None
File: windowsflask/flasky/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: windowsflask/flasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: windowsflask/flasky/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: windowsflask/flasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: windowsflask/flasky/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: windowsflask/flasky/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 18: next = None
File: windowsflask/flasky/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: windowsflask/flasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: windowsflask/flasky/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: windowsflask/flasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: windowsflask/flasky/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: windowsflask/flasky/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: windowsflask/flasky/app/api_1_0/comments.py
	 > Line 46: next = None
File: windowsflask/flasky/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: windowsflask/flasky/app/main/views.py
 > User input at line 27, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 37: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASK_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/main/views.py
	 > Line 40: posts = pagination.items
	File: windowsflask/flasky/app/main/views.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: windowsflask/flasky/app/main/views.py
 > reaches line 42, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: windowsflask/flasky/app/main/views.py
 > User input at line 32, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 30: show_followed = False
	File: windowsflask/flasky/app/main/views.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: windowsflask/flasky/app/main/views.py
 > reaches line 42, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: windowsflask/flasky/app/main/views.py
 > User input at line 67, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 68: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASK_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/main/views.py
	 > Line 71: posts = pagination.items
File: windowsflask/flasky/app/main/views.py
 > reaches line 72, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: windowsflask/flasky/app/main/views.py
 > User input at line 135, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 137: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: windowsflask/flasky/app/main/views.py
	 > Line 139: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/main/views.py
	 > Line 142: comments = pagination.items
	File: windowsflask/flasky/app/main/views.py
	 > Line 134: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: windowsflask/flasky/app/main/views.py
 > reaches line 143, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: windowsflask/flasky/app/main/views.py
 > User input at line 201, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 202: pagination = user.followers.paginate(page,per_page=current_app.config['FLASK_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/main/views.py
	 > Line 205: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: windowsflask/flasky/app/main/views.py
	 > Line 200: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: windowsflask/flasky/app/main/views.py
 > reaches line 207, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of ', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: windowsflask/flasky/app/main/views.py
 > User input at line 217, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 218: pagination = user.followed.paginate(page,per_page=current_app.config['FLASK_POSTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/main/views.py
	 > Line 221: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: windowsflask/flasky/app/main/views.py
	 > Line 216: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: windowsflask/flasky/app/main/views.py
 > reaches line 223, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: windowsflask/flasky/app/main/views.py
 > User input at line 231, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: windowsflask/flasky/app/main/views.py
	 > Line 232: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: windowsflask/flasky/app/main/views.py
	 > Line 235: comments = pagination.items
File: windowsflask/flasky/app/main/views.py
 > reaches line 236, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



ptomelle/appflask
https://github.com/ptomelle/appflask
Entry file: appflask/wsgi/myflaskapp.py
Scanned: 2016-10-25 23:56:34.175690
No vulnerabilities found.


globocom/gbix
https://github.com/globocom/gbix
Entry file: gbix/src/server_jsonrpc.py
Scanned: 2016-10-25 23:56:35.614339
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

martinpeck/bedlam-slack
https://github.com/martinpeck/bedlam-slack
Entry file: bedlam-slack/bedlam_slack/__init__.py
Scanned: 2016-10-25 23:56:37.062273
Vulnerability 1:
File: bedlam-slack/bedlam_slack/ud.py
 > User input at line 11, trigger word "get(": 
	phrase = parse.quote_plus(request.values.get('text').strip())
Reassigned in: 
	File: bedlam-slack/bedlam_slack/ud.py
	 > Line 13: response = 'response_type''text''unfurl_links''in_channel''http://www.urbandictionary.com/define.php?term=' + phrase'true'
File: bedlam-slack/bedlam_slack/ud.py
 > reaches line 19, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(response)



kud-i/FlaskRestAPI
https://github.com/kud-i/FlaskRestAPI
Entry file: FlaskRestAPI/REST_API.py
Scanned: 2016-10-25 23:56:38.368209
Vulnerability 1:
File: FlaskRestAPI/REST_API.py
 > User input at line 75, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: FlaskRestAPI/REST_API.py
 > reaches line 82, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



mapingfan/Flask-Web-Dev
https://github.com/mapingfan/Flask-Web-Dev
Entry file: Flask-Web-Dev/app.py
Scanned: 2016-10-25 23:56:46.733269
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

opendatakosovo/flask-app-framework
https://github.com/opendatakosovo/flask-app-framework
Entry file: flask-app-framework/app/__init__.py
Scanned: 2016-10-25 23:56:48.252284
No vulnerabilities found.


cbeasley92/Flask-REST-API-Testing
https://github.com/cbeasley92/Flask-REST-API-Testing
Entry file: Flask-REST-API-Testing/rest_api.py
Scanned: 2016-10-25 23:56:49.560717
Vulnerability 1:
File: Flask-REST-API-Testing/rest_api.py
 > User input at line 88, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: Flask-REST-API-Testing/rest_api.py
 > reaches line 95, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



kriesbeck/flask_heroku_practice
https://github.com/kriesbeck/flask_heroku_practice
Entry file: flask_heroku_practice/app/__init__.py
Scanned: 2016-10-25 23:56:51.123626
No vulnerabilities found.


zelinlee0303/python-flask-mysql
https://github.com/zelinlee0303/python-flask-mysql
Entry file: python-flask-mysql/app/__init__.py
Scanned: 2016-10-25 23:56:52.720275
Vulnerability 1:
File: python-flask-mysql/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: python-flask-mysql/app/main/views.py
	 > Line 23: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: python-flask-mysql/app/main/views.py
	 > Line 26: posts = pagination.items
	File: python-flask-mysql/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: python-flask-mysql/app/main/views.py
 > reaches line 27, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: python-flask-mysql/app/main/views.py
 > User input at line 41, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: python-flask-mysql/app/main/views.py
	 > Line 42: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: python-flask-mysql/app/main/views.py
	 > Line 45: posts = pagination.items
	File: python-flask-mysql/app/main/views.py
	 > Line 40: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.mindtrace'))
File: python-flask-mysql/app/main/views.py
 > reaches line 46, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('mindtrace.html',form=form, posts=posts, pagination=pagination)

Vulnerability 3:
File: python-flask-mysql/app/main/views.py
 > User input at line 118, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: python-flask-mysql/app/main/views.py
	 > Line 119: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: python-flask-mysql/app/main/views.py
	 > Line 122: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: python-flask-mysql/app/main/views.py
	 > Line 117: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.mindtrace'))
File: python-flask-mysql/app/main/views.py
 > reaches line 124, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='被', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 4:
File: python-flask-mysql/app/main/views.py
 > User input at line 135, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: python-flask-mysql/app/main/views.py
	 > Line 136: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: python-flask-mysql/app/main/views.py
	 > Line 139: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: python-flask-mysql/app/main/views.py
	 > Line 134: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.mindtrace'))
File: python-flask-mysql/app/main/views.py
 > reaches line 141, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 5:
File: python-flask-mysql/app/main/views.py
 > User input at line 154, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: python-flask-mysql/app/main/views.py
	 > Line 155: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: python-flask-mysql/app/main/views.py
	 > Line 158: posts = pagination.items
File: python-flask-mysql/app/main/views.py
 > reaches line 159, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)



ZAGJAB/Flask_OAuth2
https://github.com/ZAGJAB/Flask_OAuth2
Entry file: Flask_OAuth2/app.py
Scanned: 2016-10-25 23:56:54.023385
Vulnerability 1:
File: Flask_OAuth2/app.py
 > User input at line 75, trigger word "get(": 
	code = request.args.get('code')
Reassigned in: 
	File: Flask_OAuth2/app.py
	 > Line 76: uri = 'http://localhost:5000/oauth?response_type=%s&client_id=%s&redirect_uri=%s' % (code, client_id, redirect_uri)
File: Flask_OAuth2/app.py
 > reaches line 77, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(uri)



k-funk/flask-bower-bootstrap-compass
https://github.com/k-funk/flask-bower-bootstrap-compass
Entry file: flask-bower-bootstrap-compass/app_name/__init__.py
Scanned: 2016-10-25 23:56:57.380250
No vulnerabilities found.


SamirKanaan/PlantillaFlaskREST3
https://github.com/SamirKanaan/PlantillaFlaskREST3
Entry file: PlantillaFlaskREST3/inicia.py
Scanned: 2016-10-25 23:56:58.795844
No vulnerabilities found.


cruor99/heartbeat-flask-app
https://github.com/cruor99/heartbeat-flask-app
Entry file: heartbeat-flask-app/flaskheartbeat/__init__.py
Scanned: 2016-10-25 23:57:00.469314
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sakib3/flask_cartridge_Heroku
https://github.com/sakib3/flask_cartridge_Heroku
Entry file: flask_cartridge_Heroku/app.py
Scanned: 2016-10-25 23:57:01.954065
No vulnerabilities found.


gclabon/Twilio-Flask-CSV
https://github.com/gclabon/Twilio-Flask-CSV
Entry file: Twilio-Flask-CSV/twilioFlaskBasic/twilioFlaskBasic.py
Scanned: 2016-10-25 23:57:03.408805
No vulnerabilities found.


ak042/flask-hello-world
https://github.com/ak042/flask-hello-world
Entry file: None
Scanned: 2016-10-25 23:57:03.991417
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

king100/Flask-Hello-World-
https://github.com/king100/Flask-Hello-World-
Entry file: Flask-Hello-World-/app.py
Scanned: 2016-10-25 23:57:08.278334
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: Flask-Hello-World-/flask/lib/python2.7/sre_compile.py

MMohan1/Flask_with_celery
https://github.com/MMohan1/Flask_with_celery
Entry file: Flask_with_celery/flask_app_test/flask_app/edge/__init__.py
Scanned: 2016-10-25 23:57:09.644395
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jhelgren/flask_movie_reviews
https://github.com/jhelgren/flask_movie_reviews
Entry file: flask_movie_reviews/server.py
Scanned: 2016-10-25 23:57:11.066976
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

NixonInnes/Flask-Blueprints-Logins
https://github.com/NixonInnes/Flask-Blueprints-Logins
Entry file: Flask-Blueprints-Logins/app/__init__.py
Scanned: 2016-10-25 23:57:12.877117
No vulnerabilities found.


nejohnson2/flask-template-app
https://github.com/nejohnson2/flask-template-app
Entry file: flask-template-app/app.py
Scanned: 2016-10-25 23:57:14.285872
No vulnerabilities found.


xlmn/DiplomFlaskAngular
https://github.com/xlmn/DiplomFlaskAngular
Entry file: DiplomFlaskAngular/app/__init__.py
Scanned: 2016-10-25 23:57:19.120151
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

AMontalva/flask-thinkful-api
https://github.com/AMontalva/flask-thinkful-api
Entry file: flask-thinkful-api/posts/__init__.py
Scanned: 2016-10-25 23:57:20.443705
Vulnerability 1:
File: flask-thinkful-api/posts/api.py
 > User input at line 16, trigger word "get(": 
	title_like = request.args.get('title_like')
Reassigned in: 
	File: flask-thinkful-api/posts/api.py
	 > Line 22: posts = posts.order_by(models.Post.id)
	File: flask-thinkful-api/posts/api.py
	 > Line 25: data = json.dumps([post.as_dictionary() for post in posts])
	File: flask-thinkful-api/posts/api.py
	 > Line 26: ret_MAYBE_FUNCTION_NAME = Response(data, 200,mimetype='application/json')
	File: flask-thinkful-api/posts/api.py
	 > Line 19: posts = session.query(models.Post)
File: flask-thinkful-api/posts/api.py
 > reaches line 21, trigger word "filter(": 
	posts = posts.filter(models.Post.title.contains(title_like))



davidnuon/flask-falcon-example
https://github.com/davidnuon/flask-falcon-example
Entry file: flask-falcon-example/flask-demo.py
Scanned: 2016-10-25 23:57:21.746998
No vulnerabilities found.


genedex/flask-neo4j
https://github.com/genedex/flask-neo4j
Entry file: flask-neo4j/blog/views.py
Scanned: 2016-10-25 23:57:27.078727
No vulnerabilities found.


yazquez/example-rest-flask.python
https://github.com/yazquez/example-rest-flask.python
Entry file: None
Scanned: 2016-10-25 23:57:30.001066
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yazquez/example-rest-flask.python.

sceene/test-flask-app
https://github.com/sceene/test-flask-app
Entry file: None
Scanned: 2016-10-25 23:57:31.403399
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sceene/test-flask-app.

mtnriver/docker-flask-app
https://github.com/mtnriver/docker-flask-app
Entry file: docker-flask-app/app.py
Scanned: 2016-10-25 23:57:32.683300
No vulnerabilities found.


josephmuli/Flask
https://github.com/josephmuli/Flask
Entry file: None
Scanned: 2016-10-25 23:57:35.509860
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

janukobytsch/flask-autofixture
https://github.com/janukobytsch/flask-autofixture
Entry file: flask-autofixture/tests/conftest.py
Scanned: 2016-10-25 23:57:39.551860
No vulnerabilities found.


paceko/shopping-site
https://github.com/paceko/shopping-site
Entry file: shopping-site/shoppingsite.py
Scanned: 2016-10-25 23:57:45.819025
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pragmaticcoders/flask-react-seed
https://github.com/pragmaticcoders/flask-react-seed
Entry file: None
Scanned: 2016-10-25 23:57:47.331670
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/pragmaticcoders/flask-react-seed.

axavio/flasky
https://github.com/axavio/flasky
Entry file: None
Scanned: 2016-10-25 23:57:48.837954
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rahulballal/flasktemplate
https://github.com/rahulballal/flasktemplate
Entry file: flasktemplate/app.py
Scanned: 2016-10-25 23:57:51.268915
No vulnerabilities found.


dimdal/flasktutorial
https://github.com/dimdal/flasktutorial
Entry file: None
Scanned: 2016-10-25 23:57:51.788685
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/dimdal/flasktutorial.

bspaans/flaskal
https://github.com/bspaans/flaskal
Entry file: flaskal/flaskal/imports.py
Scanned: 2016-10-25 23:57:54.222465
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

stoodsteal/flasky
https://github.com/stoodsteal/flasky
Entry file: None
Scanned: 2016-10-25 23:57:56.739733
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

fkirwin/flaskhelloworld
https://github.com/fkirwin/flaskhelloworld
Entry file: flaskhelloworld/hello_world.py
Scanned: 2016-10-25 23:58:02.248294
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

thedrew82/flaskr
https://github.com/thedrew82/flaskr
Entry file: None
Scanned: 2016-10-25 23:58:02.789718
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/thedrew82/flaskr.

shenmj053/flaskr
https://github.com/shenmj053/flaskr
Entry file: None
Scanned: 2016-10-25 23:58:03.332328
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/shenmj053/flaskr.

zverxw13/flaskr
https://github.com/zverxw13/flaskr
Entry file: None
Scanned: 2016-10-25 23:58:03.847553
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zverxw13/flaskr.

allergier/flaskr
https://github.com/allergier/flaskr
Entry file: None
Scanned: 2016-10-25 23:58:04.370358
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/allergier/flaskr.

liuhuai0217/flasky
https://github.com/liuhuai0217/flasky
Entry file: None
Scanned: 2016-10-25 23:58:04.892758
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

erk52/FlaskDynamics
https://github.com/erk52/FlaskDynamics
Entry file: FlaskDynamics/view.py
Scanned: 2016-10-25 23:58:10.218006
Vulnerability 1:
File: FlaskDynamics/view.py
 > User input at line 18, trigger word ".data": 
	result = phasePlot(form.XPrime.data, form.YPrime.data)
Reassigned in: 
	File: FlaskDynamics/view.py
	 > Line 20: result = None
File: FlaskDynamics/view.py
 > reaches line 22, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('new_view.html',form=form, result=result)



KentaYamada/flaskr2
https://github.com/KentaYamada/flaskr2
Entry file: flaskr2/__init__.py
Scanned: 2016-10-25 23:58:11.526383
No vulnerabilities found.


HaarisKhan/FlaskDemos
https://github.com/HaarisKhan/FlaskDemos
Entry file: None
Scanned: 2016-10-25 23:58:12.059973
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gnu4cn/flaskLearnings
https://github.com/gnu4cn/flaskLearnings
Entry file: flaskLearnings/demos/request_attributes.py
Scanned: 2016-10-25 23:58:19.533069
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

pepemontana7/flaskFinal
https://github.com/pepemontana7/flaskFinal
Entry file: flaskFinal/firstapp/hello.py
Scanned: 2016-10-25 23:58:20.846296
No vulnerabilities found.


rishilification/Flask_Sql
https://github.com/rishilification/Flask_Sql
Entry file: Flask_Sql/app.py
Scanned: 2016-10-25 23:58:22.560721
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

marvelaz/Flask_python
https://github.com/marvelaz/Flask_python
Entry file: Flask_python/app.py
Scanned: 2016-10-25 23:58:23.859755
Vulnerability 1:
File: Flask_python/app.py
 > User input at line 30, trigger word ".data": 
	url = form.url.data
File: Flask_python/app.py
 > reaches line 33, trigger word "flash(": 
	flash('Stored bookmark '{}''.format(url))



HDking/flask-blog
https://github.com/HDking/flask-blog
Entry file: None
Scanned: 2016-10-25 23:58:26.407804
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Topytops/nice-flask
https://github.com/Topytops/nice-flask
Entry file: nice-flask/nice.py
Scanned: 2016-10-25 23:58:28.716148
No vulnerabilities found.


Bluepig/flask-blog
https://github.com/Bluepig/flask-blog
Entry file: None
Scanned: 2016-10-25 23:58:29.230339
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

groovycol/flask-intro
https://github.com/groovycol/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:31.544786
No vulnerabilities found.


lyoness1/flask-intro
https://github.com/lyoness1/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:32.858454
No vulnerabilities found.


kelseyoo14/flask-intro
https://github.com/kelseyoo14/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:34.159351
No vulnerabilities found.


filiplasak/flask-skeleton
https://github.com/filiplasak/flask-skeleton
Entry file: flask-skeleton/app/__init__.py
Scanned: 2016-10-25 23:58:36.506210
No vulnerabilities found.


tyrelsouza/flask_vagrant
https://github.com/tyrelsouza/flask_vagrant
Entry file: flask_vagrant/code/src/app.py
Scanned: 2016-10-25 23:58:37.797094
No vulnerabilities found.


HBKO/flask-test
https://github.com/HBKO/flask-test
Entry file: None
Scanned: 2016-10-25 23:58:40.159625
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/HBKO/flask-test.

wolfram74/flask_exploration
https://github.com/wolfram74/flask_exploration
Entry file: flask_exploration/app2.py
Scanned: 2016-10-25 23:58:45.487183
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

CrustyBarnacle/flask_app
https://github.com/CrustyBarnacle/flask_app
Entry file: None
Scanned: 2016-10-25 23:58:46.010252
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Weilor/learn_flask
https://github.com/Weilor/learn_flask
Entry file: learn_flask/app/__init__.py
Scanned: 2016-10-25 23:58:48.570424
No vulnerabilities found.


cristinamclarkin/flask-intro
https://github.com/cristinamclarkin/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:49.876735
No vulnerabilities found.


emilydowgialo/flask-intro
https://github.com/emilydowgialo/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:51.179484
No vulnerabilities found.


roboticmonkey/flask-intro
https://github.com/roboticmonkey/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:53.492151
No vulnerabilities found.


sarahcstringer/flask-intro
https://github.com/sarahcstringer/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:54.794641
No vulnerabilities found.


askiefer/flask-intro
https://github.com/askiefer/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:58.098786
No vulnerabilities found.


lachilles/flask-intro
https://github.com/lachilles/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:58:59.414936
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

dencynluv/Flask--Intro
https://github.com/dencynluv/Flask--Intro
Entry file: Flask--Intro/nice.py
Scanned: 2016-10-25 23:59:03.767091
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

holmandw/flask-pi
https://github.com/holmandw/flask-pi
Entry file: flask-pi/app/__init__.py
Scanned: 2016-10-25 23:59:05.314026
No vulnerabilities found.


amiceli/flask-blog
https://github.com/amiceli/flask-blog
Entry file: None
Scanned: 2016-10-25 23:59:05.831127
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kellyhiggins/flask-intro
https://github.com/kellyhiggins/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:59:07.129127
No vulnerabilities found.


hollywoodno/flask-intro
https://github.com/hollywoodno/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:59:08.451205
No vulnerabilities found.


k-hub/flask-intro
https://github.com/k-hub/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:59:10.775423
No vulnerabilities found.


sunshine-water/Flask_Exercise
https://github.com/sunshine-water/Flask_Exercise
Entry file: Flask_Exercise/nice.py
Scanned: 2016-10-25 23:59:12.085747
No vulnerabilities found.


loopDelicious/flask-intro
https://github.com/loopDelicious/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:59:13.401136
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

mastershao/lening-flask
https://github.com/mastershao/lening-flask
Entry file: None
Scanned: 2016-10-25 23:59:13.938467
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/mastershao/lening-flask.

bulain/flask-demo
https://github.com/bulain/flask-demo
Entry file: flask-demo/hello.py
Scanned: 2016-10-25 23:59:21.267201
No vulnerabilities found.


diannaowa/flask-blog
https://github.com/diannaowa/flask-blog
Entry file: None
Scanned: 2016-10-25 23:59:21.785422
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hyhlinux/stu_flask
https://github.com/hyhlinux/stu_flask
Entry file: stu_flask/part3/h.py
Scanned: 2016-10-25 23:59:29.554143
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

wOstensen/flask-first
https://github.com/wOstensen/flask-first
Entry file: None
Scanned: 2016-10-25 23:59:38.009563
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Tacolizard/flask-kott
https://github.com/Tacolizard/flask-kott
Entry file: flask-kott/kott.py
Scanned: 2016-10-25 23:59:39.328800
No vulnerabilities found.


wattanar/flask-sample
https://github.com/wattanar/flask-sample
Entry file: flask-sample/app.py
Scanned: 2016-10-25 23:59:40.617864
No vulnerabilities found.


rpalo/flask-headlines
https://github.com/rpalo/flask-headlines
Entry file: flask-headlines/headlines.py
Scanned: 2016-10-25 23:59:41.933384
No vulnerabilities found.


stanliski/flask_dev
https://github.com/stanliski/flask_dev
Entry file: None
Scanned: 2016-10-25 23:59:45.310883
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

an5rag/flask-tutorial
https://github.com/an5rag/flask-tutorial
Entry file: None
Scanned: 2016-10-25 23:59:45.824040
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/an5rag/flask-tutorial.

sugarguo/Flask_Blog
https://github.com/sugarguo/Flask_Blog
Entry file: Flask_Blog/app/__init__.py
Scanned: 2016-10-25 23:59:51.529525
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tlwlmy/flask_base
https://github.com/tlwlmy/flask_base
Entry file: flask_base/app/__init__.py
Scanned: 2016-10-25 23:59:53.021424
No vulnerabilities found.


themuppet2/flask-blog
https://github.com/themuppet2/flask-blog
Entry file: None
Scanned: 2016-10-25 23:59:53.574207
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Aaver69/Python-Flask
https://github.com/Aaver69/Python-Flask
Entry file: None
Scanned: 2016-10-25 23:59:55.314038
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Aaver69/Python-Flask.

Aperyon/flask-base
https://github.com/Aperyon/flask-base
Entry file: flask-base/src/__init__.py
Scanned: 2016-10-25 23:59:56.775982
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ak042/flask-bdd
https://github.com/ak042/flask-bdd
Entry file: flask-bdd/flaskr.py
Scanned: 2016-10-25 23:59:58.097900
No vulnerabilities found.


k-wiz/flask-intro
https://github.com/k-wiz/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-25 23:59:59.404702
No vulnerabilities found.


dflee/flask-intro
https://github.com/dflee/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:00.712178
No vulnerabilities found.


glasses4days/flask-intro
https://github.com/glasses4days/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:02.714538
No vulnerabilities found.


maheskett/flask-intro
https://github.com/maheskett/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:04.727552
No vulnerabilities found.


kelly4strength/flask-lab
https://github.com/kelly4strength/flask-lab
Entry file: flask-lab/nice.py
Scanned: 2016-10-26 00:00:06.418146
No vulnerabilities found.


kjlundsgaard/flask-intro
https://github.com/kjlundsgaard/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:07.784670
No vulnerabilities found.


laurensila/flask-intro
https://github.com/laurensila/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:09.258034
No vulnerabilities found.


Munnu/flask-intro
https://github.com/Munnu/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:10.696697
No vulnerabilities found.


nanoha25/flask_local
https://github.com/nanoha25/flask_local
Entry file: flask_local/setup.py
Scanned: 2016-10-26 00:00:17.294218
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

yaoice/flask-micblog
https://github.com/yaoice/flask-micblog
Entry file: flask-micblog/micblog/app/__init__.py
Scanned: 2016-10-26 00:00:19.281283
Vulnerability 1:
File: flask-micblog/micblog/app/views.py
 > User input at line 92, trigger word "get(": 
	user_name = request.form.get('user_name')
Reassigned in: 
	File: flask-micblog/micblog/app/views.py
	 > Line 102: user.nickname = user_name
File: flask-micblog/micblog/app/views.py
 > reaches line 95, trigger word "filter(": 
	register_check = User.query.filter(db.or_(User.nickname == user_name, User.email == user_email)).first()

Vulnerability 2:
File: flask-micblog/micblog/app/views.py
 > User input at line 93, trigger word "get(": 
	user_email = request.form.get('user_email')
Reassigned in: 
	File: flask-micblog/micblog/app/views.py
	 > Line 103: user.email = user_email
File: flask-micblog/micblog/app/views.py
 > reaches line 95, trigger word "filter(": 
	register_check = User.query.filter(db.or_(User.nickname == user_name, User.email == user_email)).first()



Wynndow/flask_skeleton
https://github.com/Wynndow/flask_skeleton
Entry file: None
Scanned: 2016-10-26 00:00:19.808733
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Wynndow/flask_skeleton.

chiubaca/flask-app
https://github.com/chiubaca/flask-app
Entry file: flask-app/app.py
Scanned: 2016-10-26 00:00:28.233520
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

afarges/flask-intro
https://github.com/afarges/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:30.060593
No vulnerabilities found.


paceko/flask-intro
https://github.com/paceko/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:31.556022
No vulnerabilities found.


ucgyyf/yaoke-flask
https://github.com/ucgyyf/yaoke-flask
Entry file: yaoke-flask/app/__init__.py
Scanned: 2016-10-26 00:00:33.190444
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

SethHWeidman/flask-test
https://github.com/SethHWeidman/flask-test
Entry file: None
Scanned: 2016-10-26 00:00:34.236593
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/SethHWeidman/flask-test.

rpalo/flask-firstapp
https://github.com/rpalo/flask-firstapp
Entry file: flask-firstapp/hello.py
Scanned: 2016-10-26 00:00:39.563565
No vulnerabilities found.


Jar-win/Flask-Pratice
https://github.com/Jar-win/Flask-Pratice
Entry file: Flask-Pratice/8a-login/app/__init__.py
Scanned: 2016-10-26 00:00:41.048843
No vulnerabilities found.


stuncyilmaz/flask_init
https://github.com/stuncyilmaz/flask_init
Entry file: flask_init/hello.py
Scanned: 2016-10-26 00:00:42.345476
No vulnerabilities found.


tageee/test_Flask
https://github.com/tageee/test_Flask
Entry file: test_Flask/hello.py
Scanned: 2016-10-26 00:00:44.125295
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Aisling-Dempsey/flask-intro
https://github.com/Aisling-Dempsey/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:47.443455
No vulnerabilities found.


tkahnhau/flask-intro
https://github.com/tkahnhau/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:48.789481
No vulnerabilities found.


ubermelon/Flask_exercise
https://github.com/ubermelon/Flask_exercise
Entry file: Flask_exercise/nice.py
Scanned: 2016-10-26 00:00:50.144074
No vulnerabilities found.


lsylk/flask-intro
https://github.com/lsylk/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:51.456416
No vulnerabilities found.


minyisme/flask-intro
https://github.com/minyisme/flask-intro
Entry file: flask-intro/nice.py
Scanned: 2016-10-26 00:00:53.759826
No vulnerabilities found.


allisonscofield/flask-lab
https://github.com/allisonscofield/flask-lab
Entry file: flask-lab/nice.py
Scanned: 2016-10-26 00:00:55.074137
No vulnerabilities found.


TiyaBelay/Flask-intro
https://github.com/TiyaBelay/Flask-intro
Entry file: Flask-intro/nice.py
Scanned: 2016-10-26 00:00:56.416045
No vulnerabilities found.


chck/flask-sandbox
https://github.com/chck/flask-sandbox
Entry file: flask-sandbox/app.py
Scanned: 2016-10-26 00:00:57.773992
Vulnerability 1:
File: flask-sandbox/controllers.py
 > User input at line 22, trigger word "get(": 
	limit = request.args.get('limit', 20)
Reassigned in: 
	File: flask-sandbox/controllers.py
	 > Line 27: ret_MAYBE_FUNCTION_NAME = jsonify(data=[material.serialize for material in materials])
File: flask-sandbox/controllers.py
 > reaches line 24, trigger word "filter(": 
	materials = idMaterial.query.filter(Material.id == id)Material.query.order_by(Material.updated_at.desc()).limit(limit)



NixonInnes/Flask-Calendar
https://github.com/NixonInnes/Flask-Calendar
Entry file: Flask-Calendar/app/__init__.py
Scanned: 2016-10-26 00:00:59.613498
Vulnerability 1:
File: Flask-Calendar/app/blueprints/calendar/views.py
 > User input at line 30, trigger word ".data": 
	calendar = Calendar(author_id=current_user.id, name=form.name.data)
Reassigned in: 
	File: Flask-Calendar/app/blueprints/calendar/views.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = render_template('calendar/calendar_form.html',form=form)
File: Flask-Calendar/app/blueprints/calendar/views.py
 > reaches line 37, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('calendar.get',id=calendar.id))

Vulnerability 2:
File: Flask-Calendar/app/blueprints/calendar/views.py
 > User input at line 30, trigger word ".data": 
	calendar = Calendar(author_id=current_user.id, name=form.name.data)
Reassigned in: 
	File: Flask-Calendar/app/blueprints/calendar/views.py
	 > Line 38: ret_MAYBE_FUNCTION_NAME = render_template('calendar/calendar_form.html',form=form)
File: Flask-Calendar/app/blueprints/calendar/views.py
 > reaches line 37, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('calendar.get',id=calendar.id))



aurigadl/flask-base
https://github.com/aurigadl/flask-base
Entry file: flask-base/app.py
Scanned: 2016-10-26 00:01:01.151266
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

tageee/Blog
https://github.com/tageee/Blog
Entry file: Blog/app/__init__.py
Scanned: 2016-10-26 00:01:03.290213
Vulnerability 1:
File: Blog/app/main/views.py
 > User input at line 21, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 30: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 33: posts = pagination.items
	File: Blog/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: Blog/app/main/views.py
 > User input at line 25, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 23: show_followed = False
	File: Blog/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: Blog/app/main/views.py
 > User input at line 59, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 60: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 63: posts = pagination.items
File: Blog/app/main/views.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: Blog/app/main/views.py
 > User input at line 122, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 124: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: Blog/app/main/views.py
	 > Line 126: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 129: comments = pagination.items
	File: Blog/app/main/views.py
	 > Line 121: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: Blog/app/main/views.py
 > reaches line 130, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: Blog/app/main/views.py
 > User input at line 189, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 190: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 193: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: Blog/app/main/views.py
	 > Line 188: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 195, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: Blog/app/main/views.py
 > User input at line 206, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 207: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 210: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: Blog/app/main/views.py
	 > Line 205: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 212, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: Blog/app/main/views.py
 > User input at line 221, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 222: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 225: comments = pagination.items
File: Blog/app/main/views.py
 > reaches line 226, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



amateurPotato/flask
https://github.com/amateurPotato/flask
Entry file: None
Scanned: 2016-10-26 00:01:05.571778
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ahdrage/flask
https://github.com/ahdrage/flask
Entry file: None
Scanned: 2016-10-26 00:01:06.083534
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Goomah/flask
https://github.com/Goomah/flask
Entry file: None
Scanned: 2016-10-26 00:01:07.660084
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ultramarine7/flask
https://github.com/ultramarine7/flask
Entry file: None
Scanned: 2016-10-26 00:01:09.200302
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

od210291jpv/flask
https://github.com/od210291jpv/flask
Entry file: None
Scanned: 2016-10-26 00:01:10.718133
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MonPower/Flask
https://github.com/MonPower/Flask
Entry file: None
Scanned: 2016-10-26 00:01:11.281314
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

wenzi0595/flask
https://github.com/wenzi0595/flask
Entry file: None
Scanned: 2016-10-26 00:01:18.804282
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

singingwolfboy/build-a-flask-api
https://github.com/singingwolfboy/build-a-flask-api
Entry file: build-a-flask-api/step08/puppy.py
Scanned: 2016-10-26 00:01:21.962900
Vulnerability 1:
File: build-a-flask-api/step08/puppy.py
 > User input at line 25, trigger word "get(": 
	name = request.form.get('name')
Reassigned in: 
	File: build-a-flask-api/step08/puppy.py
	 > Line 31: slug = slugify(name)
	File: build-a-flask-api/step08/puppy.py
	 > Line 34: puppy = Puppy(slug=slug, name=name, image_url=image_url)
	File: build-a-flask-api/step08/puppy.py
	 > Line 43: resp.headers['Location'] = location
File: build-a-flask-api/step08/puppy.py
 > reaches line 40, trigger word "url_for(": 
	location = url_for('get_puppy',slug=slug)



sunary/flask-optimize
https://github.com/sunary/flask-optimize
Entry file: flask-optimize/tests/flask_app.py
Scanned: 2016-10-26 00:01:23.380848
No vulnerabilities found.


kashyap32/flask-REST
https://github.com/kashyap32/flask-REST
Entry file: None
Scanned: 2016-10-26 00:01:31.455674
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/kashyap32/flask-REST.

Julzmbugua/flasky
https://github.com/Julzmbugua/flasky
Entry file: None
Scanned: 2016-10-26 00:01:34.493307
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rsk7/flaskapp
https://github.com/rsk7/flaskapp
Entry file: None
Scanned: 2016-10-26 00:01:35.012896
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/rsk7/flaskapp.

Sarmacid/flaskr
https://github.com/Sarmacid/flaskr
Entry file: None
Scanned: 2016-10-26 00:01:39.534942
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Sarmacid/flaskr.

skhe/flasky
https://github.com/skhe/flasky
Entry file: None
Scanned: 2016-10-26 00:01:41.440749
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

baloo98/flasky
https://github.com/baloo98/flasky
Entry file: None
Scanned: 2016-10-26 00:01:41.964335
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sanketg10/flaskapp
https://github.com/sanketg10/flaskapp
Entry file: None
Scanned: 2016-10-26 00:01:43.547681
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/sanketg10/flaskapp.

neotrinity/flaskavro
https://github.com/neotrinity/flaskavro
Entry file: flaskavro/main.py
Scanned: 2016-10-26 00:01:47.880805
No vulnerabilities found.


zeroisme/flaskblog
https://github.com/zeroisme/flaskblog
Entry file: None
Scanned: 2016-10-26 00:01:48.401907
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/zeroisme/flaskblog.

Mendurim/flasktut
https://github.com/Mendurim/flasktut
Entry file: flasktut/hello.py
Scanned: 2016-10-26 00:01:50.731251
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

HDking/flasktaskr
https://github.com/HDking/flasktaskr
Entry file: None
Scanned: 2016-10-26 00:01:51.279327
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gjcooper/flaskprac
https://github.com/gjcooper/flaskprac
Entry file: flaskprac/app/__init__.py
Scanned: 2016-10-26 00:01:54.723192
No vulnerabilities found.


deliveryyyyguy/flaskapp
https://github.com/deliveryyyyguy/flaskapp
Entry file: None
Scanned: 2016-10-26 00:01:55.242693
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/deliveryyyyguy/flaskapp.

aaron077/flaskblog
https://github.com/aaron077/flaskblog
Entry file: None
Scanned: 2016-10-26 00:01:55.794680
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/aaron077/flaskblog.

DaBaiLi/FlaskBlog
https://github.com/DaBaiLi/FlaskBlog
Entry file: FlaskBlog/app/__init__.py
Scanned: 2016-10-26 00:01:58.275685
Vulnerability 1:
File: FlaskBlog/app/main/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 23: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 26: posts = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskBlog/app/main/views.py
 > reaches line 27, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 2:
File: FlaskBlog/app/main/views.py
 > User input at line 34, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 35: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 38: posts = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 39, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 3:
File: FlaskBlog/app/main/views.py
 > User input at line 98, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 100: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: FlaskBlog/app/main/views.py
	 > Line 102: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 105: comments = pagination.items
	File: FlaskBlog/app/main/views.py
	 > Line 97: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: FlaskBlog/app/main/views.py
 > reaches line 106, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 4:
File: FlaskBlog/app/main/views.py
 > User input at line 131, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskBlog/app/main/views.py
	 > Line 132: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskBlog/app/main/views.py
	 > Line 135: comments = pagination.items
File: FlaskBlog/app/main/views.py
 > reaches line 136, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



cs207-project/FlaskAPI
https://github.com/cs207-project/FlaskAPI
Entry file: None
Scanned: 2016-10-26 00:01:58.792453
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/cs207-project/FlaskAPI.

Thetides/FlaskyTut
https://github.com/Thetides/FlaskyTut
Entry file: FlaskyTut/app.py
Scanned: 2016-10-26 00:02:01.135535
No vulnerabilities found.


prrateekk/FlaskTesting
https://github.com/prrateekk/FlaskTesting
Entry file: FlaskTesting/hello.py
Scanned: 2016-10-26 00:02:05.290408
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: FlaskTesting/venv/lib/python2.7/sre_compile.py

kolapapa/flasky2
https://github.com/kolapapa/flasky2
Entry file: flasky2/app/__init__.py
Scanned: 2016-10-26 00:02:06.789481
No vulnerabilities found.


argenis2021/FlaskTutorial
https://github.com/argenis2021/FlaskTutorial
Entry file: FlaskTutorial/app/__init__.py
Scanned: 2016-10-26 00:02:08.428851
No vulnerabilities found.


konglx90/flask_study
https://github.com/konglx90/flask_study
Entry file: flask_study/hello.py
Scanned: 2016-10-26 00:02:09.887808
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

datademofun/congress-flask
https://github.com/datademofun/congress-flask
Entry file: congress-flask/app.py
Scanned: 2016-10-26 00:02:12.243705
No vulnerabilities found.


ifwenvlook/flask-celery
https://github.com/ifwenvlook/flask-celery
Entry file: flask-celery/app.py
Scanned: 2016-10-26 00:02:13.563204
Vulnerability 1:
File: flask-celery/app.py
 > User input at line 66, trigger word "form[": 
	email = request.form['email']
Reassigned in: 
	File: flask-celery/app.py
	 > Line 67: session['email'] = email
File: flask-celery/app.py
 > reaches line 76, trigger word "flash(": 
	flash('Sending email to {0}'.format(email))

Vulnerability 2:
File: flask-celery/app.py
 > User input at line 66, trigger word "form[": 
	email = request.form['email']
Reassigned in: 
	File: flask-celery/app.py
	 > Line 67: session['email'] = email
File: flask-celery/app.py
 > reaches line 80, trigger word "flash(": 
	flash('An email will be sent to {0} in one minute'.format(email))

Vulnerability 3:
File: flask-celery/app.py
 > User input at line 103, trigger word "get(": 
	response = 'state''current''total''status'task.statetask.info.get('current', 0)task.info.get('total', 1)task.info.get('status', '')
Reassigned in: 
	File: flask-celery/app.py
	 > Line 96: response = 'state''current''total''status'task.state01'Pending...'
	File: flask-celery/app.py
	 > Line 113: response = 'state''current''total''status'task.state11str(task.info)
File: flask-celery/app.py
 > reaches line 119, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(response)



jonalligood/flask-diary
https://github.com/jonalligood/flask-diary
Entry file: flask-diary/app/__init__.py
Scanned: 2016-10-26 00:02:26.171263
No vulnerabilities found.


HDking/flask-blog
https://github.com/HDking/flask-blog
Entry file: None
Scanned: 2016-10-26 00:02:26.776073
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

sugarguo/flask-login
https://github.com/sugarguo/flask-login
Entry file: flask-login/yan.py
Scanned: 2016-10-26 00:02:33.008711
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Afghary/bloggingFlask
https://github.com/Afghary/bloggingFlask
Entry file: bloggingFlask/src/app.py
Scanned: 2016-10-26 00:02:34.368859
No vulnerabilities found.


abaratif/flask_sms
https://github.com/abaratif/flask_sms
Entry file: flask_sms/app.py
Scanned: 2016-10-26 00:02:35.707017
No vulnerabilities found.


full-stakk/flask-rest
https://github.com/full-stakk/flask-rest
Entry file: flask-rest/app.py
Scanned: 2016-10-26 00:02:37.163694
No vulnerabilities found.


ikolito/flask-yahoomarket
https://github.com/ikolito/flask-yahoomarket
Entry file: None
Scanned: 2016-10-26 00:02:38.469506
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ikolito/flask-yahoomarket.

kunalj101/flask-blog
https://github.com/kunalj101/flask-blog
Entry file: None
Scanned: 2016-10-26 00:02:38.997597
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

RiverAge/flask-mongodb
https://github.com/RiverAge/flask-mongodb
Entry file: flask-mongodb/app/__init__.py
Scanned: 2016-10-26 00:02:41.311489
No vulnerabilities found.


natedoyle/flask-cyoa
https://github.com/natedoyle/flask-cyoa
Entry file: flask-cyoa/src/app.py
Scanned: 2016-10-26 00:02:42.605850
No vulnerabilities found.


ShakedFadi/flask_blog
https://github.com/ShakedFadi/flask_blog
Entry file: None
Scanned: 2016-10-26 00:02:43.127476
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

makensy/flask_alchemy
https://github.com/makensy/flask_alchemy
Entry file: flask_alchemy/app/__init__.py
Scanned: 2016-10-26 00:02:44.424792
No vulnerabilities found.


28sui/dao-flask
https://github.com/28sui/dao-flask
Entry file: dao-flask/app.py
Scanned: 2016-10-26 00:02:48.739736
No vulnerabilities found.


quvide/docker-flask
https://github.com/quvide/docker-flask
Entry file: docker-flask/flask/app/main.py
Scanned: 2016-10-26 00:02:50.245853
No vulnerabilities found.


carlsagan21/flask-crawler
https://github.com/carlsagan21/flask-crawler
Entry file: flask-crawler/flask-crawler.py
Scanned: 2016-10-26 00:02:51.541421
No vulnerabilities found.


Ouro130Ros/LearningFlask
https://github.com/Ouro130Ros/LearningFlask
Entry file: LearningFlask/1-HelloWorld/helloWorld.py
Scanned: 2016-10-26 00:02:52.823103
No vulnerabilities found.


mandshaw/flask_microbrewery
https://github.com/mandshaw/flask_microbrewery
Entry file: flask_microbrewery/flask_microbrewery/run.py
Scanned: 2016-10-26 00:02:55.246671
No vulnerabilities found.


kindoprec/flask-boot
https://github.com/kindoprec/flask-boot
Entry file: flask-boot/app.py
Scanned: 2016-10-26 00:02:56.553486
Vulnerability 1:
File: flask-boot/app.py
 > User input at line 15, trigger word "get(": 
	out = 'Hello ' + request.args.get('name', '')
File: flask-boot/app.py
 > reaches line 16, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(output=out)



liuyun90/learn_flask
https://github.com/liuyun90/learn_flask
Entry file: learn_flask/app/__init__.py
Scanned: 2016-10-26 00:02:58.058311
Vulnerability 1:
File: learn_flask/app/api_1_0/posts.py
 > User input at line 12, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/posts.py
	 > Line 13: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: learn_flask/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: learn_flask/app/api_1_0/posts.py
	 > Line 18: next = None
File: learn_flask/app/api_1_0/posts.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: learn_flask/app/api_1_0/posts.py
 > User input at line 12, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/posts.py
	 > Line 13: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: learn_flask/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: learn_flask/app/api_1_0/posts.py
	 > Line 18: next = None
File: learn_flask/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: learn_flask/app/api_1_0/posts.py
 > User input at line 12, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/posts.py
	 > Line 13: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: learn_flask/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: learn_flask/app/api_1_0/posts.py
	 > Line 18: next = None
File: learn_flask/app/api_1_0/posts.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: learn_flask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: learn_flask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: learn_flask/app/api_1_0/users.py
	 > Line 23: next = None
File: learn_flask/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_user_posts',id=id, page=page - 1, _external=True)

Vulnerability 5:
File: learn_flask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: learn_flask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: learn_flask/app/api_1_0/users.py
	 > Line 23: next = None
File: learn_flask/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_user_posts',id=id, page=page + 1, _external=True)

Vulnerability 6:
File: learn_flask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: learn_flask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: learn_flask/app/api_1_0/users.py
	 > Line 23: next = None
File: learn_flask/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: learn_flask/app/api_1_0/users.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/users.py
	 > Line 39: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: learn_flask/app/api_1_0/users.py
	 > Line 42: prev = None
	File: learn_flask/app/api_1_0/users.py
	 > Line 45: next = None
File: learn_flask/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_user_followed_posts',id=user.id, page=page - 1, _external=True)

Vulnerability 8:
File: learn_flask/app/api_1_0/users.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/users.py
	 > Line 39: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: learn_flask/app/api_1_0/users.py
	 > Line 42: prev = None
	File: learn_flask/app/api_1_0/users.py
	 > Line 45: next = None
File: learn_flask/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_user_followed_posts',id=user.id, page=page + 1, _external=True)

Vulnerability 9:
File: learn_flask/app/api_1_0/users.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/users.py
	 > Line 39: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: learn_flask/app/api_1_0/users.py
	 > Line 42: prev = None
	File: learn_flask/app/api_1_0/users.py
	 > Line 45: next = None
File: learn_flask/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: learn_flask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/comments.py
	 > Line 13: comments = pagination.items
	File: learn_flask/app/api_1_0/comments.py
	 > Line 14: prev = None
	File: learn_flask/app/api_1_0/comments.py
	 > Line 17: next = None
File: learn_flask/app/api_1_0/comments.py
 > reaches line 16, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: learn_flask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/comments.py
	 > Line 13: comments = pagination.items
	File: learn_flask/app/api_1_0/comments.py
	 > Line 14: prev = None
	File: learn_flask/app/api_1_0/comments.py
	 > Line 17: next = None
File: learn_flask/app/api_1_0/comments.py
 > reaches line 19, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: learn_flask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/comments.py
	 > Line 13: comments = pagination.items
	File: learn_flask/app/api_1_0/comments.py
	 > Line 14: prev = None
	File: learn_flask/app/api_1_0/comments.py
	 > Line 17: next = None
File: learn_flask/app/api_1_0/comments.py
 > reaches line 20, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: learn_flask/app/api_1_0/comments.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/comments.py
	 > Line 38: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/comments.py
	 > Line 40: comments = pagination.items
	File: learn_flask/app/api_1_0/comments.py
	 > Line 41: prev = None
	File: learn_flask/app/api_1_0/comments.py
	 > Line 44: next = None
File: learn_flask/app/api_1_0/comments.py
 > reaches line 43, trigger word "url_for(": 
	prev = url_for('api.get_post_comments',id=post.id, page=page - 1, _external=True)

Vulnerability 14:
File: learn_flask/app/api_1_0/comments.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/comments.py
	 > Line 38: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/comments.py
	 > Line 40: comments = pagination.items
	File: learn_flask/app/api_1_0/comments.py
	 > Line 41: prev = None
	File: learn_flask/app/api_1_0/comments.py
	 > Line 44: next = None
File: learn_flask/app/api_1_0/comments.py
 > reaches line 46, trigger word "url_for(": 
	next = url_for('api.get_post_comments',id=post.id, page=page + 1, _external=True)

Vulnerability 15:
File: learn_flask/app/api_1_0/comments.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/api_1_0/comments.py
	 > Line 38: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/api_1_0/comments.py
	 > Line 40: comments = pagination.items
	File: learn_flask/app/api_1_0/comments.py
	 > Line 41: prev = None
	File: learn_flask/app/api_1_0/comments.py
	 > Line 44: next = None
File: learn_flask/app/api_1_0/comments.py
 > reaches line 47, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('comments''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: learn_flask/app/main/views.py
 > User input at line 20, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 18: show_followed = False
	File: learn_flask/app/main/views.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: learn_flask/app/main/views.py
 > reaches line 29, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination, show_followed=show_followed)

Vulnerability 17:
File: learn_flask/app/main/views.py
 > User input at line 25, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 26: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/main/views.py
	 > Line 28: posts = pagination.items
	File: learn_flask/app/main/views.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: learn_flask/app/main/views.py
 > reaches line 29, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination, show_followed=show_followed)

Vulnerability 18:
File: learn_flask/app/main/views.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 38: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/main/views.py
	 > Line 40: posts = pagination.items
File: learn_flask/app/main/views.py
 > reaches line 41, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: learn_flask/app/main/views.py
 > User input at line 98, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 100: page = int(post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1)
	File: learn_flask/app/main/views.py
	 > Line 101: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/main/views.py
	 > Line 104: comments = pagination.items
	File: learn_flask/app/main/views.py
	 > Line 97: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: learn_flask/app/main/views.py
 > reaches line 105, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: learn_flask/app/main/views.py
 > User input at line 162, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 163: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: learn_flask/app/main/views.py
	 > Line 165: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: learn_flask/app/main/views.py
	 > Line 161: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: learn_flask/app/main/views.py
 > reaches line 166, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of ', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: learn_flask/app/main/views.py
 > User input at line 176, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 177: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: learn_flask/app/main/views.py
	 > Line 179: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: learn_flask/app/main/views.py
	 > Line 175: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: learn_flask/app/main/views.py
 > reaches line 180, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by ', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: learn_flask/app/main/views.py
 > User input at line 204, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: learn_flask/app/main/views.py
	 > Line 205: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: learn_flask/app/main/views.py
	 > Line 208: comments = pagination.items
File: learn_flask/app/main/views.py
 > reaches line 209, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



richardqlin/flask_app
https://github.com/richardqlin/flask_app
Entry file: None
Scanned: 2016-10-26 00:02:58.600864
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

blarneyosullivan/flask_blog
https://github.com/blarneyosullivan/flask_blog
Entry file: None
Scanned: 2016-10-26 00:02:59.134074
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

MUICProgrammingClub/flask-tutorial
https://github.com/MUICProgrammingClub/flask-tutorial
Entry file: None
Scanned: 2016-10-26 00:03:00.651008
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/MUICProgrammingClub/flask-tutorial.

AuthentiqID/examples-flask
https://github.com/AuthentiqID/examples-flask
Entry file: examples-flask/example_basic.py
Scanned: 2016-10-26 00:03:04.127335
Vulnerability 1:
File: examples-flask/example_basic.py
 > User input at line 135, trigger word "get(": 
	userinfo = authentiq.get(USERINFO_URL).json()
File: examples-flask/example_basic.py
 > reaches line 149, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(userinfo)

Vulnerability 2:
File: examples-flask/test_example_basic.py
 > User input at line 71, trigger word "get(": 
	res = test_app.get(url_for('index'))
Reassigned in: 
	File: examples-flask/test_example_basic.py
	 > Line 76: res = requests.get(url,allow_redirects=1)
File: examples-flask/test_example_basic.py
 > reaches line 71, trigger word "url_for(": 
	res = test_app.get(url_for('index'))

Vulnerability 3:
File: examples-flask/test_example_basic.py
 > User input at line 75, trigger word "get(": 
	url = res.headers.get('Location')
Reassigned in: 
	File: examples-flask/test_example_basic.py
	 > Line 76: res = requests.get(url,allow_redirects=1)
File: examples-flask/test_example_basic.py
 > reaches line 71, trigger word "url_for(": 
	res = test_app.get(url_for('index'))

Vulnerability 4:
File: examples-flask/test_example_basic.py
 > User input at line 76, trigger word "get(": 
	res = requests.get(url,allow_redirects=1)
File: examples-flask/test_example_basic.py
 > reaches line 71, trigger word "url_for(": 
	res = test_app.get(url_for('index'))

Vulnerability 5:
File: examples-flask/example_2fa.py
 > User input at line 159, trigger word "get(": 
	userinfo = authentiq.get(USERINFO_URL).json()
File: examples-flask/example_2fa.py
 > reaches line 173, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(userinfo)



rpalo/flask-headlines
https://github.com/rpalo/flask-headlines
Entry file: flask-headlines/headlines.py
Scanned: 2016-10-26 00:03:07.440340
No vulnerabilities found.


stanliski/flask_dev
https://github.com/stanliski/flask_dev
Entry file: None
Scanned: 2016-10-26 00:03:08.002870
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

s4ayub/FirstFlask
https://github.com/s4ayub/FirstFlask
Entry file: FirstFlask/app.py
Scanned: 2016-10-26 00:03:12.656815
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

emilydowgialo/skills-flask
https://github.com/emilydowgialo/skills-flask
Entry file: skills-flask/application.py
Scanned: 2016-10-26 00:03:15.395671
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: skills-flask/env/lib/python2.7/sre_compile.py

condemnedbachelor/flask-skills
https://github.com/condemnedbachelor/flask-skills
Entry file: flask-skills/application.py
Scanned: 2016-10-26 00:03:19.121224
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'ingoing'

jimlambrt-roadscholar/udemy-flask
https://github.com/jimlambrt-roadscholar/udemy-flask
Entry file: udemy-flask/hello.py
Scanned: 2016-10-26 00:03:20.464275
No vulnerabilities found.


CharAct3/flask_test
https://github.com/CharAct3/flask_test
Entry file: None
Scanned: 2016-10-26 00:03:20.999941
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

jlberzal/Flask-User
https://github.com/jlberzal/Flask-User
Entry file: Flask-User/flask_user/tests/tst_app.py
Scanned: 2016-10-26 00:03:23.913987
Vulnerability 1:
File: Flask-User/flask_user/tests/tst_app.py
 > User input at line 119, trigger word "SQLAlchemy": 
	db_adapter = SQLAlchemyAdapter(db, User,UserInvitationClass=UserInvitation)
Reassigned in: 
	File: Flask-User/flask_user/tests/tst_app.py
	 > Line 120: user_manager = UserManager(db_adapter, app)
File: Flask-User/flask_user/tests/tst_app.py
 > reaches line 123, trigger word "filter(": 
	if not User.query.filter(User.username == 'member').first():

Vulnerability 2:
File: Flask-User/flask_user/tests/tst_app.py
 > User input at line 119, trigger word "SQLAlchemy": 
	db_adapter = SQLAlchemyAdapter(db, User,UserInvitationClass=UserInvitation)
Reassigned in: 
	File: Flask-User/flask_user/tests/tst_app.py
	 > Line 120: user_manager = UserManager(db_adapter, app)
File: Flask-User/flask_user/tests/tst_app.py
 > reaches line 130, trigger word "filter(": 
	if not User.query.filter(User.username == 'user007').first():

Vulnerability 3:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 59, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)

Vulnerability 4:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 59, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)

Vulnerability 5:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 71, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.manage_emails'))

Vulnerability 6:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 71, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.manage_emails'))

Vulnerability 7:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 75, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)

Vulnerability 8:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 75, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)

Vulnerability 9:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 98, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='confirm'))

Vulnerability 10:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 98, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='confirm'))

Vulnerability 11:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 101, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='make-primary'))

Vulnerability 12:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 101, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='make-primary'))

Vulnerability 13:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 104, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email1.id, action='delete'))

Vulnerability 14:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 104, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email1.id, action='delete'))



kstripp/flask-crud
https://github.com/kstripp/flask-crud
Entry file: flask-crud/app/__init__.py
Scanned: 2016-10-26 00:03:28.356051
Vulnerability 1:
File: flask-crud/app/views.py
 > User input at line 25, trigger word "get(": 
	post = models.Post.query.get(id)
File: flask-crud/app/views.py
 > reaches line 28, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('show.html',post=post)



iceihehe/flask-test
https://github.com/iceihehe/flask-test
Entry file: None
Scanned: 2016-10-26 00:03:28.880519
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/iceihehe/flask-test.

gonza-peralta/flask-celery
https://github.com/gonza-peralta/flask-celery
Entry file: flask-celery/app/factory.py
Scanned: 2016-10-26 00:03:35.330716
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

girishramnani/flask-facebookbot
https://github.com/girishramnani/flask-facebookbot
Entry file: flask-facebookbot/app.py
Scanned: 2016-10-26 00:03:36.670935
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Master-Yan/flask_template
https://github.com/Master-Yan/flask_template
Entry file: flask_template/app/__init__.py
Scanned: 2016-10-26 00:03:38.326550
No vulnerabilities found.


zjqzero/flask_migrate
https://github.com/zjqzero/flask_migrate
Entry file: flask_migrate/add_index/test.py
Scanned: 2016-10-26 00:03:39.758977
No vulnerabilities found.


nanoha25/flask_local
https://github.com/nanoha25/flask_local
Entry file: flask_local/setup.py
Scanned: 2016-10-26 00:03:43.770472
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Wynndow/flask_skeleton
https://github.com/Wynndow/flask_skeleton
Entry file: None
Scanned: 2016-10-26 00:03:44.295301
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Wynndow/flask_skeleton.

chiubaca/flask-app
https://github.com/chiubaca/flask-app
Entry file: flask-app/app.py
Scanned: 2016-10-26 00:03:48.551668
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

bdhammel/asteroid-flask
https://github.com/bdhammel/asteroid-flask
Entry file: asteroid-flask/game.py
Scanned: 2016-10-26 00:03:57.300410
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

FizLBQ/Flask_fiz
https://github.com/FizLBQ/Flask_fiz
Entry file: Flask_fiz/demo.py
Scanned: 2016-10-26 00:03:58.635997
No vulnerabilities found.


rpalo/flask-firstapp
https://github.com/rpalo/flask-firstapp
Entry file: flask-firstapp/hello.py
Scanned: 2016-10-26 00:03:59.914069
No vulnerabilities found.


rpalo/flask-crimemap
https://github.com/rpalo/flask-crimemap
Entry file: flask-crimemap/crimemap.py
Scanned: 2016-10-26 00:04:01.456921
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

singleyoungtao/myblog-flask
https://github.com/singleyoungtao/myblog-flask
Entry file: myblog-flask/app/__init__.py
Scanned: 2016-10-26 00:04:03.394910
Vulnerability 1:
File: myblog-flask/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 19: next = None
File: myblog-flask/app/api_1_0/posts.py
 > reaches line 18, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: myblog-flask/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 19: next = None
File: myblog-flask/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: myblog-flask/app/api_1_0/posts.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 12: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 15: posts = pagination.items
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 16: prev = None
	File: myblog-flask/app/api_1_0/posts.py
	 > Line 19: next = None
File: myblog-flask/app/api_1_0/posts.py
 > reaches line 22, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 4:
File: myblog-flask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: myblog-flask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: myblog-flask/app/api_1_0/users.py
	 > Line 23: next = None
File: myblog-flask/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 5:
File: myblog-flask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: myblog-flask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: myblog-flask/app/api_1_0/users.py
	 > Line 23: next = None
File: myblog-flask/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 6:
File: myblog-flask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: myblog-flask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: myblog-flask/app/api_1_0/users.py
	 > Line 23: next = None
File: myblog-flask/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 7:
File: myblog-flask/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: myblog-flask/app/api_1_0/users.py
	 > Line 42: prev = None
	File: myblog-flask/app/api_1_0/users.py
	 > Line 45: next = None
File: myblog-flask/app/api_1_0/users.py
 > reaches line 44, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: myblog-flask/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: myblog-flask/app/api_1_0/users.py
	 > Line 42: prev = None
	File: myblog-flask/app/api_1_0/users.py
	 > Line 45: next = None
File: myblog-flask/app/api_1_0/users.py
 > reaches line 47, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: myblog-flask/app/api_1_0/users.py
 > User input at line 37, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/users.py
	 > Line 38: pagination = user.followed_posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/users.py
	 > Line 41: posts = pagination.items
	File: myblog-flask/app/api_1_0/users.py
	 > Line 42: prev = None
	File: myblog-flask/app/api_1_0/users.py
	 > Line 45: next = None
File: myblog-flask/app/api_1_0/users.py
 > reaches line 48, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 10:
File: myblog-flask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 18: next = None
File: myblog-flask/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 11:
File: myblog-flask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 18: next = None
File: myblog-flask/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 12:
File: myblog-flask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 18: next = None
File: myblog-flask/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 13:
File: myblog-flask/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 46: next = None
File: myblog-flask/app/api_1_0/comments.py
 > reaches line 45, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 14:
File: myblog-flask/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 46: next = None
File: myblog-flask/app/api_1_0/comments.py
 > reaches line 48, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 15:
File: myblog-flask/app/api_1_0/comments.py
 > User input at line 38, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 39: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 42: comments = pagination.items
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 43: prev = None
	File: myblog-flask/app/api_1_0/comments.py
	 > Line 46: next = None
File: myblog-flask/app/api_1_0/comments.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 16:
File: myblog-flask/app/main/views.py
 > User input at line 47, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 55: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/main/views.py
	 > Line 58: posts = pagination.items
	File: myblog-flask/app/main/views.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: myblog-flask/app/main/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 17:
File: myblog-flask/app/main/views.py
 > User input at line 50, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 48: show_followed = False
	File: myblog-flask/app/main/views.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: myblog-flask/app/main/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 18:
File: myblog-flask/app/main/views.py
 > User input at line 66, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 67: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/main/views.py
	 > Line 70: posts = pagination.items
File: myblog-flask/app/main/views.py
 > reaches line 71, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 19:
File: myblog-flask/app/main/views.py
 > User input at line 133, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 135: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: myblog-flask/app/main/views.py
	 > Line 137: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/main/views.py
	 > Line 140: comments = pagination.items
	File: myblog-flask/app/main/views.py
	 > Line 132: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: myblog-flask/app/main/views.py
 > reaches line 141, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 20:
File: myblog-flask/app/main/views.py
 > User input at line 201, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 202: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/main/views.py
	 > Line 205: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: myblog-flask/app/main/views.py
	 > Line 200: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: myblog-flask/app/main/views.py
 > reaches line 207, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 21:
File: myblog-flask/app/main/views.py
 > User input at line 218, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 219: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/main/views.py
	 > Line 222: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: myblog-flask/app/main/views.py
	 > Line 217: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: myblog-flask/app/main/views.py
 > reaches line 224, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 22:
File: myblog-flask/app/main/views.py
 > User input at line 249, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: myblog-flask/app/main/views.py
	 > Line 250: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: myblog-flask/app/main/views.py
	 > Line 253: comments = pagination.items
File: myblog-flask/app/main/views.py
 > reaches line 254, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



rpalo/flask-waitercaller
https://github.com/rpalo/flask-waitercaller
Entry file: flask-waitercaller/waitercaller.py
Scanned: 2016-10-26 00:04:04.710233
No vulnerabilities found.


NJUPole/Flask_tickets
https://github.com/NJUPole/Flask_tickets
Entry file: Flask_tickets/tickets.py
Scanned: 2016-10-26 00:04:06.671048
Vulnerability 1:
File: Flask_tickets/tickets.py
 > User input at line 62, trigger word "get(": 
	movieDate = request.args.get('date')
Reassigned in: 
	File: Flask_tickets/tickets.py
	 > Line 74: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 75: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 78: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 79: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 81: resultNum = len(results)
	File: Flask_tickets/tickets.py
	 > Line 82: pageNum = resultNum % 20 == 0int(resultNum / 20)int(resultNum / 20) + 1
	File: Flask_tickets/tickets.py
	 > Line 64: queryRes = data.query.filter_by(movieName=movieName).order_by(data.price)
	File: Flask_tickets/tickets.py
	 > Line 65: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 66: dateList = list(set(map(x.date, results)))
	File: Flask_tickets/tickets.py
	 > Line 71: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 72: dateList = list(set(map(x.date, results)))
File: Flask_tickets/tickets.py
 > reaches line 70, trigger word "filter(": 
	queryRes = queryRes.filter(data.cinemaName.like('%{}%'.format(searchWords)))

Vulnerability 2:
File: Flask_tickets/tickets.py
 > User input at line 63, trigger word "get(": 
	searchWords = request.args.get('search')
Reassigned in: 
	File: Flask_tickets/tickets.py
	 > Line 71: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 72: dateList = list(set(map(x.date, results)))
	File: Flask_tickets/tickets.py
	 > Line 74: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 75: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 78: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 79: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 81: resultNum = len(results)
	File: Flask_tickets/tickets.py
	 > Line 82: pageNum = resultNum % 20 == 0int(resultNum / 20)int(resultNum / 20) + 1
	File: Flask_tickets/tickets.py
	 > Line 64: queryRes = data.query.filter_by(movieName=movieName).order_by(data.price)
	File: Flask_tickets/tickets.py
	 > Line 65: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 66: dateList = list(set(map(x.date, results)))
File: Flask_tickets/tickets.py
 > reaches line 70, trigger word "filter(": 
	queryRes = queryRes.filter(data.cinemaName.like('%{}%'.format(searchWords)))

Vulnerability 3:
File: Flask_tickets/tickets.py
 > User input at line 61, trigger word "get(": 
	page = request.args.get('page')
Reassigned in: 
	File: Flask_tickets/tickets.py
	 > Line 68: page = pageint(page) - 10
File: Flask_tickets/tickets.py
 > reaches line 83, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('showtimeTable.html',results=results[20 * page20 * page + 1], page=page, pageNum=pageNum, movieList=movieList, dateList=dateList, movieDate=movieDate, searchWords=searchWords)

Vulnerability 4:
File: Flask_tickets/tickets.py
 > User input at line 62, trigger word "get(": 
	movieDate = request.args.get('date')
Reassigned in: 
	File: Flask_tickets/tickets.py
	 > Line 74: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 75: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 78: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 79: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 81: resultNum = len(results)
	File: Flask_tickets/tickets.py
	 > Line 82: pageNum = resultNum % 20 == 0int(resultNum / 20)int(resultNum / 20) + 1
	File: Flask_tickets/tickets.py
	 > Line 64: queryRes = data.query.filter_by(movieName=movieName).order_by(data.price)
	File: Flask_tickets/tickets.py
	 > Line 65: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 66: dateList = list(set(map(x.date, results)))
	File: Flask_tickets/tickets.py
	 > Line 71: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 72: dateList = list(set(map(x.date, results)))
File: Flask_tickets/tickets.py
 > reaches line 83, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('showtimeTable.html',results=results[20 * page20 * page + 1], page=page, pageNum=pageNum, movieList=movieList, dateList=dateList, movieDate=movieDate, searchWords=searchWords)

Vulnerability 5:
File: Flask_tickets/tickets.py
 > User input at line 63, trigger word "get(": 
	searchWords = request.args.get('search')
Reassigned in: 
	File: Flask_tickets/tickets.py
	 > Line 71: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 72: dateList = list(set(map(x.date, results)))
	File: Flask_tickets/tickets.py
	 > Line 74: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 75: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 78: queryRes = queryRes.filter_by(date=movieDate)
	File: Flask_tickets/tickets.py
	 > Line 79: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 81: resultNum = len(results)
	File: Flask_tickets/tickets.py
	 > Line 82: pageNum = resultNum % 20 == 0int(resultNum / 20)int(resultNum / 20) + 1
	File: Flask_tickets/tickets.py
	 > Line 64: queryRes = data.query.filter_by(movieName=movieName).order_by(data.price)
	File: Flask_tickets/tickets.py
	 > Line 65: results = queryRes[]
	File: Flask_tickets/tickets.py
	 > Line 66: dateList = list(set(map(x.date, results)))
File: Flask_tickets/tickets.py
 > reaches line 83, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('showtimeTable.html',results=results[20 * page20 * page + 1], page=page, pageNum=pageNum, movieList=movieList, dateList=dateList, movieDate=movieDate, searchWords=searchWords)



Mingz2013/demo.flasky
https://github.com/Mingz2013/demo.flasky
Entry file: None
Scanned: 2016-10-26 00:04:08.087680
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Mingz2013/demo.flasky.

LaundryOrder/Backend
https://github.com/LaundryOrder/Backend
Entry file: Backend/app.py
Scanned: 2016-10-26 00:04:09.540130
No vulnerabilities found.


tageee/Blog
https://github.com/tageee/Blog
Entry file: Blog/app/__init__.py
Scanned: 2016-10-26 00:04:11.804298
Vulnerability 1:
File: Blog/app/main/views.py
 > User input at line 21, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 30: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 33: posts = pagination.items
	File: Blog/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: Blog/app/main/views.py
 > User input at line 25, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 23: show_followed = False
	File: Blog/app/main/views.py
	 > Line 20: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: Blog/app/main/views.py
 > User input at line 59, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 60: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 63: posts = pagination.items
File: Blog/app/main/views.py
 > reaches line 64, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: Blog/app/main/views.py
 > User input at line 122, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 124: page = post.comments.count() - 1 // current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: Blog/app/main/views.py
	 > Line 126: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 129: comments = pagination.items
	File: Blog/app/main/views.py
	 > Line 121: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: Blog/app/main/views.py
 > reaches line 130, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: Blog/app/main/views.py
 > User input at line 189, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 190: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 193: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: Blog/app/main/views.py
	 > Line 188: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 195, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: Blog/app/main/views.py
 > User input at line 206, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 207: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 210: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: Blog/app/main/views.py
	 > Line 205: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Blog/app/main/views.py
 > reaches line 212, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)

Vulnerability 7:
File: Blog/app/main/views.py
 > User input at line 221, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Blog/app/main/views.py
	 > Line 222: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: Blog/app/main/views.py
	 > Line 225: comments = pagination.items
File: Blog/app/main/views.py
 > reaches line 226, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



ahumeijun/RestfulTest
https://github.com/ahumeijun/RestfulTest
Entry file: RestfulTest/app/__init__.py
Scanned: 2016-10-26 00:04:13.606577
No vulnerabilities found.


jlberzal/my_app
https://github.com/jlberzal/my_app
Entry file: my_app/app/__init__.py
Scanned: 2016-10-26 00:04:15.175230
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zzq2015/myFirstWeb
https://github.com/zzq2015/myFirstWeb
Entry file: None
Scanned: 2016-10-26 00:04:20.695862
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

thomasroulin/SpreadPoll
https://github.com/thomasroulin/SpreadPoll
Entry file: SpreadPoll/SpreadPoll.py
Scanned: 2016-10-26 00:04:22.027926
No vulnerabilities found.


vincentdnl/flask-facebook-messenger-bot-boilerplate
https://github.com/vincentdnl/flask-facebook-messenger-bot-boilerplate
Entry file: flask-facebook-messenger-bot-boilerplate/app.py
Scanned: 2016-10-26 00:04:23.328485
No vulnerabilities found.


vishwanath79/FlaskRestAPI
https://github.com/vishwanath79/FlaskRestAPI
Entry file: FlaskRestAPI/rest.py
Scanned: 2016-10-26 00:04:24.649867
Vulnerability 1:
File: FlaskRestAPI/rest.py
 > User input at line 41, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: FlaskRestAPI/rest.py
 > reaches line 49, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



GrantJamesPowell/FlaskRaffleApp
https://github.com/GrantJamesPowell/FlaskRaffleApp
Entry file: FlaskRaffleApp/raffleapp.py
Scanned: 2016-10-26 00:04:26.184511
No vulnerabilities found.


catmin/flask49erStore
https://github.com/catmin/flask49erStore
Entry file: flask49erStore/flask49erStore.py
Scanned: 2016-10-26 00:04:29.014960
Vulnerability 1:
File: flask49erStore/flask49erStore.py
 > User input at line 253, trigger word "get(": 
	offer = Offer.query.get(id)
Reassigned in: 
	File: flask49erStore/flask49erStore.py
	 > Line 254: hulls = Hull.query.filter_by(offer_id=offer.id)
	File: flask49erStore/flask49erStore.py
	 > Line 255: masts = Mast.query.filter_by(offer_id=offer.id)
	File: flask49erStore/flask49erStore.py
	 > Line 256: sails = Sail.query.filter_by(offer_id=offer.id)
File: flask49erStore/flask49erStore.py
 > reaches line 261, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('offer_details.html',offer=offer, sails=sails, hulls=hulls, masts=masts)



leavyli/flaskWebDevelopment
https://github.com/leavyli/flaskWebDevelopment
Entry file: flaskWebDevelopment/hello/hello.py
Scanned: 2016-10-26 00:04:30.322748
No vulnerabilities found.


thedod/boilerplate-peewee-flask
https://github.com/thedod/boilerplate-peewee-flask
Entry file: None
Scanned: 2016-10-26 00:04:35.882961
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/thedod/boilerplate-peewee-flask.

shn7798/FlaskZhihu
https://github.com/shn7798/FlaskZhihu
Entry file: FlaskZhihu/tests/test_orm.py
Scanned: 2016-10-26 00:04:39.028828
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

syntaxSizer/flask
https://github.com/syntaxSizer/flask
Entry file: None
Scanned: 2016-10-26 00:04:39.596681
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gabrielecker/Flask
https://github.com/gabrielecker/Flask
Entry file: None
Scanned: 2016-10-26 00:04:41.108810
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Dianalim209/flask
https://github.com/Dianalim209/flask
Entry file: None
Scanned: 2016-10-26 00:04:41.683585
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

luojiyin1987/flask
https://github.com/luojiyin1987/flask
Entry file: None
Scanned: 2016-10-26 00:04:45.228063
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chrislinan/flask
https://github.com/chrislinan/flask
Entry file: None
Scanned: 2016-10-26 00:04:45.743435
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

lagougou/flask
https://github.com/lagougou/flask
Entry file: None
Scanned: 2016-10-26 00:04:49.250078
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tkirkland/Flask
https://github.com/tkirkland/Flask
Entry file: None
Scanned: 2016-10-26 00:04:58.791634
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ooohiroyukiooo/flask
https://github.com/ooohiroyukiooo/flask
Entry file: None
Scanned: 2016-10-26 00:04:59.300265
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

RoseOu/Flask-learning
https://github.com/RoseOu/Flask-learning
Entry file: None
Scanned: 2016-10-26 00:05:00.841186
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yassipo/webservice
https://github.com/yassipo/webservice
Entry file: webservice/app.py
Scanned: 2016-10-26 00:05:05.853225
No vulnerabilities found.


amey-sam/Flask-MailGun
https://github.com/amey-sam/Flask-MailGun
Entry file: None
Scanned: 2016-10-26 00:05:06.368888
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/amey-sam/Flask-MailGun.

efrainmunoz/flasktaskr
https://github.com/efrainmunoz/flasktaskr
Entry file: None
Scanned: 2016-10-26 00:05:06.883108
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

HansKramer/flaskr
https://github.com/HansKramer/flaskr
Entry file: None
Scanned: 2016-10-26 00:05:07.398492
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/HansKramer/flaskr.

shorian/flaskr
https://github.com/shorian/flaskr
Entry file: None
Scanned: 2016-10-26 00:05:08.916893
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/shorian/flaskr.

mmoran0032/flaskwork
https://github.com/mmoran0032/flaskwork
Entry file: flaskwork/hello.py
Scanned: 2016-10-26 00:05:11.492943
No vulnerabilities found.


Maxwell-Ying/flaskbook
https://github.com/Maxwell-Ying/flaskbook
Entry file: flaskbook/app/__init__.py
Scanned: 2016-10-26 00:05:13.962236
Vulnerability 1:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 2:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 3:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 4:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 5:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 6:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 7:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 84, trigger word "filter(": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))

Vulnerability 8:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 9:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 10:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 11:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 12:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 13:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 14:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 86, trigger word "filter(": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))

Vulnerability 15:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 16:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 17:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 18:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 19:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 20:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 21:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 88, trigger word "filter(": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)

Vulnerability 22:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 23:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 24:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 25:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 26:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 27:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 28:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 90, trigger word "filter(": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))

Vulnerability 29:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 30:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 31:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 32:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 33:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 34:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 35:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 92, trigger word "filter(": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))

Vulnerability 36:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 37:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 38:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 39:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 40:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 41:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 42:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 94, trigger word "filter(": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)

Vulnerability 43:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 44:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 45:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 46:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 47:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 48:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 49:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 97, trigger word "filter(": 
	results = results.filter(books.name == form.name.data)

Vulnerability 50:
File: flaskbook/app/views.py
 > User input at line 84, trigger word ".data": 
	results = results.filter(books.name.like('%' + form.name.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 51:
File: flaskbook/app/views.py
 > User input at line 86, trigger word ".data": 
	results = results.filter(books.author.like('%' + form.author.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 52:
File: flaskbook/app/views.py
 > User input at line 88, trigger word ".data": 
	results = results.filter(books.age < form.age.data + 10, books.age > form.age.data - 10)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 53:
File: flaskbook/app/views.py
 > User input at line 90, trigger word ".data": 
	results = results.filter(books.public.like('%' + form.public.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 54:
File: flaskbook/app/views.py
 > User input at line 92, trigger word ".data": 
	results = results.filter(books.home.like('%' + form.home.data + '%'))
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 55:
File: flaskbook/app/views.py
 > User input at line 94, trigger word ".data": 
	results = results.filter(books.pages < form.pages.data + 20, books.pages > form.pages.data - 20)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())

Vulnerability 56:
File: flaskbook/app/views.py
 > User input at line 97, trigger word ".data": 
	results = results.filter(books.name == form.name.data)
Reassigned in: 
	File: flaskbook/app/views.py
	 > Line 81: results = books.query
File: flaskbook/app/views.py
 > reaches line 108, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('result.html',title='search', results=results.all())



yoophi/flaskygram
https://github.com/yoophi/flaskygram
Entry file: None
Scanned: 2016-10-26 00:05:16.486849
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/yoophi/flaskygram.

Ifresher/Flaskr
https://github.com/Ifresher/Flaskr
Entry file: None
Scanned: 2016-10-26 00:05:22.007264
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hongmaoxiao/flasky
https://github.com/hongmaoxiao/flasky
Entry file: None
Scanned: 2016-10-26 00:05:23.519621
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ojgoyal/flaskr
https://github.com/ojgoyal/flaskr
Entry file: None
Scanned: 2016-10-26 00:05:24.029489
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ojgoyal/flaskr.

hoorn91/flaskproject
https://github.com/hoorn91/flaskproject
Entry file: flaskproject/app/hello.py
Scanned: 2016-10-26 00:05:26.476151
Vulnerability 1:
File: flaskproject/app/hello.py
 > User input at line 70, trigger word "get(": 
	task = 'id''title''description''done'tasks[-1]['id'] + 1request.json['title']request.json.get('description', '')False
File: flaskproject/app/hello.py
 > reaches line 77, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = (jsonify('task'task), 201)



jiuhuandao/Flaskr
https://github.com/jiuhuandao/Flaskr
Entry file: None
Scanned: 2016-10-26 00:05:27.017705
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ansel333/flaskr
https://github.com/ansel333/flaskr
Entry file: None
Scanned: 2016-10-26 00:05:28.562201
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ansel333/flaskr.

richardqlin/flaskralchemy
https://github.com/richardqlin/flaskralchemy
Entry file: None
Scanned: 2016-10-26 00:05:35.600190
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/richardqlin/flaskralchemy.

shen5630/FlaskProject
https://github.com/shen5630/FlaskProject
Entry file: FlaskProject/myRestful/healthcareApi.py
Scanned: 2016-10-26 00:05:37.990174
No vulnerabilities found.


viprs/FlaskyBlog
https://github.com/viprs/FlaskyBlog
Entry file: FlaskyBlog/app/__init__.py
Scanned: 2016-10-26 00:05:39.842410
Vulnerability 1:
File: FlaskyBlog/app/api_1_0/posts.py
 > User input at line 14, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 15: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 18: posts = pagination.items
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 25: post_list = [post.to_json() for post in posts]
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 19: prev_page = None
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 22: next_page = None
File: FlaskyBlog/app/api_1_0/posts.py
 > reaches line 21, trigger word "url_for(": 
	prev_page = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 2:
File: FlaskyBlog/app/api_1_0/posts.py
 > User input at line 14, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 15: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 18: posts = pagination.items
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 25: post_list = [post.to_json() for post in posts]
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 19: prev_page = None
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 22: next_page = None
File: FlaskyBlog/app/api_1_0/posts.py
 > reaches line 24, trigger word "url_for(": 
	next_page = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 3:
File: FlaskyBlog/app/api_1_0/posts.py
 > User input at line 14, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 15: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 18: posts = pagination.items
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 25: post_list = [post.to_json() for post in posts]
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 19: prev_page = None
	File: FlaskyBlog/app/api_1_0/posts.py
	 > Line 22: next_page = None
File: FlaskyBlog/app/api_1_0/posts.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev_page''next_page''total_count''page_count'post_listprev_pagenext_pagepagination.totalpost_list.__len__())

Vulnerability 4:
File: FlaskyBlog/app/api_1_0/users.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 12: pagination = User.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 15: users = pagination.items
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 22: user_list = [user.to_json() for user in users]
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 16: prev_page = None
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 19: next_page = None
File: FlaskyBlog/app/api_1_0/users.py
 > reaches line 18, trigger word "url_for(": 
	prev_page = url_for('api.get_users',page=page - 1, _external=True)

Vulnerability 5:
File: FlaskyBlog/app/api_1_0/users.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 12: pagination = User.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 15: users = pagination.items
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 22: user_list = [user.to_json() for user in users]
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 16: prev_page = None
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 19: next_page = None
File: FlaskyBlog/app/api_1_0/users.py
 > reaches line 21, trigger word "url_for(": 
	next_page = url_for('api.get_users',page=page + 1, _external=True)

Vulnerability 6:
File: FlaskyBlog/app/api_1_0/users.py
 > User input at line 11, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 12: pagination = User.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 15: users = pagination.items
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 22: user_list = [user.to_json() for user in users]
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 16: prev_page = None
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 19: next_page = None
File: FlaskyBlog/app/api_1_0/users.py
 > reaches line 23, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('users''prev_page''next_page''total_count''page_count'user_listprev_pagenext_pagepagination.totaluser_list.__len__())

Vulnerability 7:
File: FlaskyBlog/app/api_1_0/users.py
 > User input at line 41, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 42: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 45: posts = pagination.items
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 46: prev_page = None
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 49: next_page = None
File: FlaskyBlog/app/api_1_0/users.py
 > reaches line 48, trigger word "url_for(": 
	prev_page = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 8:
File: FlaskyBlog/app/api_1_0/users.py
 > User input at line 41, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 42: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 45: posts = pagination.items
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 46: prev_page = None
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 49: next_page = None
File: FlaskyBlog/app/api_1_0/users.py
 > reaches line 51, trigger word "url_for(": 
	next_page = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 9:
File: FlaskyBlog/app/api_1_0/users.py
 > User input at line 41, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 42: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 45: posts = pagination.items
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 46: prev_page = None
	File: FlaskyBlog/app/api_1_0/users.py
	 > Line 49: next_page = None
File: FlaskyBlog/app/api_1_0/users.py
 > reaches line 52, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev_page''next_page''count'[post.to_json() for post in posts]prev_pagenext_pagepagination.total)

Vulnerability 10:
File: FlaskyBlog/app/main/views.py
 > User input at line 26, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/main/views.py
	 > Line 27: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/main/views.py
	 > Line 31: posts = pagination.items
	File: FlaskyBlog/app/main/views.py
	 > Line 24: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskyBlog/app/main/views.py
 > reaches line 32, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination)

Vulnerability 11:
File: FlaskyBlog/app/main/views.py
 > User input at line 47, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/main/views.py
	 > Line 50: page = post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: FlaskyBlog/app/main/views.py
	 > Line 52: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/main/views.py
	 > Line 55: comments = pagination.items
	File: FlaskyBlog/app/main/views.py
	 > Line 46: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: FlaskyBlog/app/main/views.py
 > reaches line 56, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 12:
File: FlaskyBlog/app/main/views.py
 > User input at line 170, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/main/views.py
	 > Line 171: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/main/views.py
	 > Line 175: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: FlaskyBlog/app/main/views.py
	 > Line 169: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskyBlog/app/main/views.py
 > reaches line 177, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 13:
File: FlaskyBlog/app/main/views.py
 > User input at line 187, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/main/views.py
	 > Line 188: pagination = user.follower.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/main/views.py
	 > Line 192: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: FlaskyBlog/app/main/views.py
	 > Line 186: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: FlaskyBlog/app/main/views.py
 > reaches line 194, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 14:
File: FlaskyBlog/app/main/views.py
 > User input at line 203, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: FlaskyBlog/app/main/views.py
	 > Line 204: pagination = Comment.query.order_by(Comment.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: FlaskyBlog/app/main/views.py
	 > Line 207: comments = pagination.items
File: FlaskyBlog/app/main/views.py
 > reaches line 208, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('moderate.html',comments=comments, pagination=pagination, page=page)



thunn/Flaskr1
https://github.com/thunn/Flaskr1
Entry file: Flaskr1/flaskr.py
Scanned: 2016-10-26 00:05:41.159625
No vulnerabilities found.


thejojo87/FlaskBlog
https://github.com/thejojo87/FlaskBlog
Entry file: FlaskBlog/final/app/__init__.py
Scanned: 2016-10-26 00:05:43.496421
No vulnerabilities found.


er3456qi/FlaskTutorial
https://github.com/er3456qi/FlaskTutorial
Entry file: FlaskTutorial/flaskr.py
Scanned: 2016-10-26 00:05:44.866023
No vulnerabilities found.


PaperAndColours/flaskImage
https://github.com/PaperAndColours/flaskImage
Entry file: flaskImage/app.py
Scanned: 2016-10-26 00:05:47.621161
No vulnerabilities found.


hamartia0/FlaskWeb
https://github.com/hamartia0/FlaskWeb
Entry file: FlaskWeb/web3b.py
Scanned: 2016-10-26 00:05:51.660757
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

rmGuarachi/flask2
https://github.com/rmGuarachi/flask2
Entry file: flask2/flask2/app/__init__.py
Scanned: 2016-10-26 00:05:53.478082
No vulnerabilities found.


maheskett/flask-testing
https://github.com/maheskett/flask-testing
Entry file: flask-testing/party.py
Scanned: 2016-10-26 00:06:00.413746
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kellyhiggins/Flask-testing
https://github.com/kellyhiggins/Flask-testing
Entry file: Flask-testing/party.py
Scanned: 2016-10-26 00:06:02.520113
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

laurensila/flask-testing
https://github.com/laurensila/flask-testing
Entry file: flask-testing/party.py
Scanned: 2016-10-26 00:06:04.309419
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sugarguo/flask-login
https://github.com/sugarguo/flask-login
Entry file: flask-login/yan.py
Scanned: 2016-10-26 00:06:11.067297
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Afghary/bloggingFlask
https://github.com/Afghary/bloggingFlask
Entry file: bloggingFlask/src/app.py
Scanned: 2016-10-26 00:06:12.505446
No vulnerabilities found.


DANWINS-LLC/flask-starter
https://github.com/DANWINS-LLC/flask-starter
Entry file: None
Scanned: 2016-10-26 00:06:13.021728
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/DANWINS-LLC/flask-starter.

coffee-world/flask_wd
https://github.com/coffee-world/flask_wd
Entry file: flask_wd/hello.py
Scanned: 2016-10-26 00:06:14.595107
No vulnerabilities found.


jiang2/flask-rest
https://github.com/jiang2/flask-rest
Entry file: None
Scanned: 2016-10-26 00:06:16.387055
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jiang2/flask-rest.

progBill/flask_blueprint
https://github.com/progBill/flask_blueprint
Entry file: flask_blueprint/__init__.py
Scanned: 2016-10-26 00:06:17.751660
No vulnerabilities found.


carlsagan21/flask-crawler
https://github.com/carlsagan21/flask-crawler
Entry file: flask-crawler/flask-crawler.py
Scanned: 2016-10-26 00:06:19.031588
No vulnerabilities found.


jdesilvio/flask-deploy
https://github.com/jdesilvio/flask-deploy
Entry file: None
Scanned: 2016-10-26 00:06:19.546025
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jdesilvio/flask-deploy.

stanliski/flask-dev
https://github.com/stanliski/flask-dev
Entry file: None
Scanned: 2016-10-26 00:06:22.895051
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

paceko/testing-flask
https://github.com/paceko/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:06:24.788009
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

minyisme/flask-testing
https://github.com/minyisme/flask-testing
Entry file: flask-testing/party.py
Scanned: 2016-10-26 00:06:26.593665
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

cristinamclarkin/Flask-testing
https://github.com/cristinamclarkin/Flask-testing
Entry file: Flask-testing/party.py
Scanned: 2016-10-26 00:06:28.478066
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kindoprec/flask-boot
https://github.com/kindoprec/flask-boot
Entry file: flask-boot/app.py
Scanned: 2016-10-26 00:06:29.805945
Vulnerability 1:
File: flask-boot/app.py
 > User input at line 15, trigger word "get(": 
	out = 'Hello ' + request.args.get('name', '')
File: flask-boot/app.py
 > reaches line 16, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(output=out)



enlacee/appFlask
https://github.com/enlacee/appFlask
Entry file: appFlask/web/hello.py
Scanned: 2016-10-26 00:06:31.105936
No vulnerabilities found.


shuangfu/learnFlask
https://github.com/shuangfu/learnFlask
Entry file: None
Scanned: 2016-10-26 00:06:32.123709
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/shuangfu/learnFlask.

andresmguk/flask-blog
https://github.com/andresmguk/flask-blog
Entry file: None
Scanned: 2016-10-26 00:06:36.157098
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

tnygren/flask-testing
https://github.com/tnygren/flask-testing
Entry file: flask-testing/megaTutorial/app/__init__.py
Scanned: 2016-10-26 00:06:38.595947
No vulnerabilities found.


licsh/flask_app
https://github.com/licsh/flask_app
Entry file: None
Scanned: 2016-10-26 00:06:39.115364
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

saampandit/flask-intro
https://github.com/saampandit/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-26 00:06:46.113105
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-intro/venv/lib/python2.7/sre_compile.py

jlberzal/Flask-User
https://github.com/jlberzal/Flask-User
Entry file: Flask-User/flask_user/tests/tst_app.py
Scanned: 2016-10-26 00:06:48.396747
Vulnerability 1:
File: Flask-User/flask_user/tests/tst_app.py
 > User input at line 119, trigger word "SQLAlchemy": 
	db_adapter = SQLAlchemyAdapter(db, User,UserInvitationClass=UserInvitation)
Reassigned in: 
	File: Flask-User/flask_user/tests/tst_app.py
	 > Line 120: user_manager = UserManager(db_adapter, app)
File: Flask-User/flask_user/tests/tst_app.py
 > reaches line 123, trigger word "filter(": 
	if not User.query.filter(User.username == 'member').first():

Vulnerability 2:
File: Flask-User/flask_user/tests/tst_app.py
 > User input at line 119, trigger word "SQLAlchemy": 
	db_adapter = SQLAlchemyAdapter(db, User,UserInvitationClass=UserInvitation)
Reassigned in: 
	File: Flask-User/flask_user/tests/tst_app.py
	 > Line 120: user_manager = UserManager(db_adapter, app)
File: Flask-User/flask_user/tests/tst_app.py
 > reaches line 130, trigger word "filter(": 
	if not User.query.filter(User.username == 'user007').first():

Vulnerability 3:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 59, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)

Vulnerability 4:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 59, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)

Vulnerability 5:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 71, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.manage_emails'))

Vulnerability 6:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 71, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.manage_emails'))

Vulnerability 7:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 75, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)

Vulnerability 8:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 75, trigger word "url_for(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)

Vulnerability 9:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 98, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='confirm'))

Vulnerability 10:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 98, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='confirm'))

Vulnerability 11:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 101, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='make-primary'))

Vulnerability 12:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 101, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email2.id, action='make-primary'))

Vulnerability 13:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 59, trigger word "form(": 
	response = client.post_valid_form(url_for('user.register'),email=EMAIL1, password=PASSWORD)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 104, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email1.id, action='delete'))

Vulnerability 14:
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > User input at line 75, trigger word "form(": 
	response = client.post_valid_form(url_for('user.manage_emails'),email=EMAIL2)
File: Flask-User/flask_user/tests/test_multiple_emails.py
 > reaches line 104, trigger word "url_for(": 
	response = client.get_valid_page(url_for('user.email_action',id=user_email1.id, action='delete'))



Danielyao0312/flask-intro
https://github.com/Danielyao0312/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-26 00:06:50.157671
No vulnerabilities found.


eduardoferrandezr/flask-bokeh
https://github.com/eduardoferrandezr/flask-bokeh
Entry file: flask-bokeh/app.py
Scanned: 2016-10-26 00:06:51.466521
No vulnerabilities found.


zachwooddoughty/flask-tester
https://github.com/zachwooddoughty/flask-tester
Entry file: flask-tester/hello.py
Scanned: 2016-10-26 00:06:52.749383
No vulnerabilities found.


rd82/flask-tute
https://github.com/rd82/flask-tute
Entry file: flask-tute/app/__init__.py
Scanned: 2016-10-26 00:06:54.182937
No vulnerabilities found.


dencynluv/testing-flask
https://github.com/dencynluv/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:07:01.100973
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

efrainmunoz/flask-blog
https://github.com/efrainmunoz/flask-blog
Entry file: None
Scanned: 2016-10-26 00:07:01.633959
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

bdhammel/asteroid-flask
https://github.com/bdhammel/asteroid-flask
Entry file: asteroid-flask/game.py
Scanned: 2016-10-26 00:07:11.269929
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

dflee/testing-flask
https://github.com/dflee/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:07:13.191784
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Ihyatt/testing-flask
https://github.com/Ihyatt/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:07:14.974621
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

gyermolenko/flask-modelhistory
https://github.com/gyermolenko/flask-modelhistory
Entry file: flask-modelhistory/example/app/__init__.py
Scanned: 2016-10-26 00:07:16.377808
No vulnerabilities found.


hiro93n/sample_flask
https://github.com/hiro93n/sample_flask
Entry file: sample_flask/tutorial/flaskr/__init__.py
Scanned: 2016-10-26 00:07:17.717242
No vulnerabilities found.


DraZoro/flask_learning
https://github.com/DraZoro/flask_learning
Entry file: flask_learning/flaskr.py
Scanned: 2016-10-26 00:07:19.017833
No vulnerabilities found.


skols/flask_blog
https://github.com/skols/flask_blog
Entry file: None
Scanned: 2016-10-26 00:07:19.534686
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

eleweek/Mastering_Flask
https://github.com/eleweek/Mastering_Flask
Entry file: Mastering_Flask/section2/app.py
Scanned: 2016-10-26 00:07:21.993239
No vulnerabilities found.


Mingz2013/demo.flasky
https://github.com/Mingz2013/demo.flasky
Entry file: None
Scanned: 2016-10-26 00:07:22.547960
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ahumeijun/RestfulTest
https://github.com/ahumeijun/RestfulTest
Entry file: RestfulTest/app/__init__.py
Scanned: 2016-10-26 00:07:23.836500
No vulnerabilities found.


jlberzal/my_app
https://github.com/jlberzal/my_app
Entry file: my_app/app/__init__.py
Scanned: 2016-10-26 00:07:25.409671
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Kathure/microblg
https://github.com/Kathure/microblg
Entry file: microblg/app/__init__.py
Scanned: 2016-10-26 00:07:37.485208
No vulnerabilities found.


hufan-Akari/BookLibrary
https://github.com/hufan-Akari/BookLibrary
Entry file: BookLibrary/app/__init__.py
Scanned: 2016-10-26 00:07:39.818030
Vulnerability 1:
File: BookLibrary/app/main/auth/views.py
 > User input at line 14, trigger word ".data": 
	the_user = User.query.filter(User.email.ilike(login_form.email.data)).first()
File: BookLibrary/app/main/auth/views.py
 > reaches line 14, trigger word "filter(": 
	the_user = User.query.filter(User.email.ilike(login_form.email.data)).first()

Vulnerability 2:
File: BookLibrary/app/main/auth/views.py
 > User input at line 14, trigger word ".data": 
	the_user = User.query.filter(User.email.ilike(login_form.email.data)).first()
File: BookLibrary/app/main/auth/views.py
 > reaches line 17, trigger word "flash(": 
	flash('登录成功!  欢迎您 %s!' % the_user.name, 'success')

Vulnerability 3:
File: BookLibrary/app/main/book/views.py
 > User input at line 14, trigger word "get(": 
	search_word = request.args.get('search', None)
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 23: search_word = search_word.strip()
	File: BookLibrary/app/main/book/views.py
	 > Line 28: search_form.search.data = search_word
File: BookLibrary/app/main/book/views.py
 > reaches line 24, trigger word "filter(": 
	the_books = the_books.filter(db.or_(Book.title.ilike('%%%s%%' % search_word), Book.author.ilike('%%%s%%' % search_word), Book.isbn.ilike('%%%s%%' % search_word), Book.tags.any(Tag.name.ilike('%%%s%%' % search_word)), Book.subtitle.ilike('%%%s%%' % search_word))).outerjoin(Log).group_by(Book.id).order_by(db.func.count(Log.id).desc())

Vulnerability 4:
File: BookLibrary/app/main/book/views.py
 > User input at line 16, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 32: pagination = the_books.paginate(page,per_page=8)
	File: BookLibrary/app/main/book/views.py
	 > Line 33: result_books = pagination.items
File: BookLibrary/app/main/book/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('book.html',books=result_books, pagination=pagination, search_form=search_form, title='书籍清单')

Vulnerability 5:
File: BookLibrary/app/main/book/views.py
 > User input at line 46, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 50: pagination = the_book.logs.filter_by(returned=show - 1).order_by(Log.borrow_timestamp.desc()).paginate(page,per_page=5)
	File: BookLibrary/app/main/book/views.py
	 > Line 53: pagination = the_book.comments.filter_by(deleted=0).order_by(Comment.edit_timestamp.desc()).paginate(page,per_page=5)
	File: BookLibrary/app/main/book/views.py
	 > Line 56: data = pagination.items
File: BookLibrary/app/main/book/views.py
 > reaches line 57, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('book_detail.html',book=the_book, data=data, pagination=pagination, form=form, title=the_book.title)

Vulnerability 6:
File: BookLibrary/app/main/book/views.py
 > User input at line 112, trigger word ".data": 
	new_book = Book(isbn=form.isbn.data, title=form.title.data, origin_title=form.origin_title.data, subtitle=form.subtitle.data, author=form.author.data, translator=form.translator.data, publisher=form.publisher.data, image=form.image.data, pubdate=form.pubdate.data, tags_string=form.tags.data, pages=form.pages.data, price=form.price.data, binding=form.binding.data, numbers=form.numbers.data, summary=form.summary.data or '', catalog=form.catalog.data or '')
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 133: ret_MAYBE_FUNCTION_NAME = render_template('book_edit.html',form=form, title='添加新书')
File: BookLibrary/app/main/book/views.py
 > reaches line 131, trigger word "flash(": 
	flash('书籍 %s 已添加至图书馆!' % new_book.title, 'success')

Vulnerability 7:
File: BookLibrary/app/main/book/views.py
 > User input at line 112, trigger word ".data": 
	new_book = Book(isbn=form.isbn.data, title=form.title.data, origin_title=form.origin_title.data, subtitle=form.subtitle.data, author=form.author.data, translator=form.translator.data, publisher=form.publisher.data, image=form.image.data, pubdate=form.pubdate.data, tags_string=form.tags.data, pages=form.pages.data, price=form.price.data, binding=form.binding.data, numbers=form.numbers.data, summary=form.summary.data or '', catalog=form.catalog.data or '')
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 133: ret_MAYBE_FUNCTION_NAME = render_template('book_edit.html',form=form, title='添加新书')
File: BookLibrary/app/main/book/views.py
 > reaches line 132, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('book.detail',book_id=new_book.id))

Vulnerability 8:
File: BookLibrary/app/main/book/views.py
 > User input at line 112, trigger word ".data": 
	new_book = Book(isbn=form.isbn.data, title=form.title.data, origin_title=form.origin_title.data, subtitle=form.subtitle.data, author=form.author.data, translator=form.translator.data, publisher=form.publisher.data, image=form.image.data, pubdate=form.pubdate.data, tags_string=form.tags.data, pages=form.pages.data, price=form.price.data, binding=form.binding.data, numbers=form.numbers.data, summary=form.summary.data or '', catalog=form.catalog.data or '')
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 133: ret_MAYBE_FUNCTION_NAME = render_template('book_edit.html',form=form, title='添加新书')
File: BookLibrary/app/main/book/views.py
 > reaches line 132, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(url_for('book.detail',book_id=new_book.id))

Vulnerability 9:
File: BookLibrary/app/main/book/views.py
 > User input at line 161, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: BookLibrary/app/main/book/views.py
	 > Line 179: pagination = the_books.paginate(page,per_page=8)
	File: BookLibrary/app/main/book/views.py
	 > Line 180: data = pagination.items
	File: BookLibrary/app/main/book/views.py
	 > Line 167: data = None
	File: BookLibrary/app/main/book/views.py
	 > Line 168: pagination = None
File: BookLibrary/app/main/book/views.py
 > reaches line 182, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('book_tag.html',tags=the_tags, title='Tags', search_form=search_form, books=data, pagination=pagination)

Vulnerability 10:
File: BookLibrary/app/main/log/views.py
 > User input at line 14, trigger word "get(": 
	book_id = request.args.get('book_id')
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 15: the_book = Book.query.get_or_404(book_id)
	File: BookLibrary/app/main/log/views.py
	 > Line 19: result = current_user.borrow_book(the_book)
	File: BookLibrary/app/main/log/views.py
	 > Line 19: message = current_user.borrow_book(the_book)
File: BookLibrary/app/main/log/views.py
 > reaches line 20, trigger word "flash(": 
	flash(message, result'success''danger')

Vulnerability 11:
File: BookLibrary/app/main/log/views.py
 > User input at line 14, trigger word "get(": 
	book_id = request.args.get('book_id')
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 15: the_book = Book.query.get_or_404(book_id)
	File: BookLibrary/app/main/log/views.py
	 > Line 19: result = current_user.borrow_book(the_book)
	File: BookLibrary/app/main/log/views.py
	 > Line 19: message = current_user.borrow_book(the_book)
File: BookLibrary/app/main/log/views.py
 > reaches line 22, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(request.args.get('next') or url_for('book.detail',book_id=book_id))

Vulnerability 12:
File: BookLibrary/app/main/log/views.py
 > User input at line 14, trigger word "get(": 
	book_id = request.args.get('book_id')
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 15: the_book = Book.query.get_or_404(book_id)
	File: BookLibrary/app/main/log/views.py
	 > Line 19: result = current_user.borrow_book(the_book)
	File: BookLibrary/app/main/log/views.py
	 > Line 19: message = current_user.borrow_book(the_book)
File: BookLibrary/app/main/log/views.py
 > reaches line 22, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(request.args.get('next') or url_for('book.detail',book_id=book_id))

Vulnerability 13:
File: BookLibrary/app/main/log/views.py
 > User input at line 29, trigger word "get(": 
	log_id = request.args.get('log_id')
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 33: the_log = Log.query.get(log_id)
	File: BookLibrary/app/main/log/views.py
	 > Line 35: the_log = Log.query.filter_by(user_id=current_user.id, book_id=book_id).first()
	File: BookLibrary/app/main/log/views.py
	 > Line 39: result = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 39: message = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 31: the_log = None
File: BookLibrary/app/main/log/views.py
 > reaches line 40, trigger word "flash(": 
	flash(message, result'success''danger')

Vulnerability 14:
File: BookLibrary/app/main/log/views.py
 > User input at line 33, trigger word "get(": 
	the_log = Log.query.get(log_id)
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 31: the_log = None
	File: BookLibrary/app/main/log/views.py
	 > Line 35: the_log = Log.query.filter_by(user_id=current_user.id, book_id=book_id).first()
	File: BookLibrary/app/main/log/views.py
	 > Line 39: result = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 39: message = current_user.return_book(the_log)
File: BookLibrary/app/main/log/views.py
 > reaches line 40, trigger word "flash(": 
	flash(message, result'success''danger')

Vulnerability 15:
File: BookLibrary/app/main/log/views.py
 > User input at line 29, trigger word "get(": 
	log_id = request.args.get('log_id')
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 33: the_log = Log.query.get(log_id)
	File: BookLibrary/app/main/log/views.py
	 > Line 35: the_log = Log.query.filter_by(user_id=current_user.id, book_id=book_id).first()
	File: BookLibrary/app/main/log/views.py
	 > Line 39: result = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 39: message = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 31: the_log = None
File: BookLibrary/app/main/log/views.py
 > reaches line 42, trigger word "redirect(": 
	ret_MAYBE_FUNCTION_NAME = redirect(request.args.get('next') or url_for('book.detail',book_id=log_id))

Vulnerability 16:
File: BookLibrary/app/main/log/views.py
 > User input at line 29, trigger word "get(": 
	log_id = request.args.get('log_id')
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 33: the_log = Log.query.get(log_id)
	File: BookLibrary/app/main/log/views.py
	 > Line 35: the_log = Log.query.filter_by(user_id=current_user.id, book_id=book_id).first()
	File: BookLibrary/app/main/log/views.py
	 > Line 39: result = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 39: message = current_user.return_book(the_log)
	File: BookLibrary/app/main/log/views.py
	 > Line 31: the_log = None
File: BookLibrary/app/main/log/views.py
 > reaches line 42, trigger word "url_for(": 
	ret_MAYBE_FUNCTION_NAME = redirect(request.args.get('next') or url_for('book.detail',book_id=log_id))

Vulnerability 17:
File: BookLibrary/app/main/log/views.py
 > User input at line 52, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: BookLibrary/app/main/log/views.py
	 > Line 53: pagination = Log.query.filter_by(returned=show).order_by(Log.borrow_timestamp.desc()).paginate(page,per_page=10)
	File: BookLibrary/app/main/log/views.py
	 > Line 54: logs = pagination.items
File: BookLibrary/app/main/log/views.py
 > reaches line 55, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('logs_info.html',logs=logs, pagination=pagination, title='借阅信息')

Vulnerability 18:
File: BookLibrary/app/main/user/views.py
 > User input at line 14, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: BookLibrary/app/main/user/views.py
	 > Line 15: pagination = User.query.order_by(User.id.desc()).paginate(page,per_page=10)
	File: BookLibrary/app/main/user/views.py
	 > Line 16: users = pagination.items
File: BookLibrary/app/main/user/views.py
 > reaches line 17, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',users=users, pagination=pagination, title='已注册用户')

Vulnerability 19:
File: BookLibrary/app/main/user/views.py
 > User input at line 28, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: BookLibrary/app/main/user/views.py
	 > Line 29: pagination = the_user.logs.filter_by(returned=show).order_by(Log.borrow_timestamp.desc()).paginate(page,per_page=5)
	File: BookLibrary/app/main/user/views.py
	 > Line 31: logs = pagination.items
File: BookLibrary/app/main/user/views.py
 > reaches line 33, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user_detail.html',user=the_user, logs=logs, pagination=pagination, title='用户: ' + the_user.name)



katietarng/hb-testing-flask
https://github.com/katietarng/hb-testing-flask
Entry file: hb-testing-flask/party.py
Scanned: 2016-10-26 00:07:41.713939
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lkpanganiban/flask-restful-example
https://github.com/lkpanganiban/flask-restful-example
Entry file: flask-restful-example/run.py
Scanned: 2016-10-26 00:07:43.038584
No vulnerabilities found.


qefir/Black-Jack-Flask-game
https://github.com/qefir/Black-Jack-Flask-game
Entry file: Black-Jack-Flask-game/BJenv/lib/python3.4/site-packages/flask_openid.py
Scanned: 2016-10-26 00:07:52.507948
No vulnerabilities found.
An Error occurred while scanning the repo: 'NoneType' object has no attribute 'label'

p00gz/OLD-flask-imdbratings-app
https://github.com/p00gz/OLD-flask-imdbratings-app
Entry file: OLD-flask-imdbratings-app/imdbRatings/__init__.py
Scanned: 2016-10-26 00:07:55.904411
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lysdexia/flask-svg-barcode
https://github.com/lysdexia/flask-svg-barcode
Entry file: None
Scanned: 2016-10-26 00:07:57.324881
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/lysdexia/flask-svg-barcode.

Tiago-Lira/cookiecutter-flask-websocket
https://github.com/Tiago-Lira/cookiecutter-flask-websocket
Entry file: None
Scanned: 2016-10-26 00:07:58.740094
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Tiago-Lira/cookiecutter-flask-websocket.

davejonesbkk/flask_by_example
https://github.com/davejonesbkk/flask_by_example
Entry file: flask_by_example/app.py
Scanned: 2016-10-26 00:08:03.889146
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask_by_example/venv/lib/python3.5/operator.py

efrainmunoz/flask-hello-world
https://github.com/efrainmunoz/flask-hello-world
Entry file: None
Scanned: 2016-10-26 00:08:04.479567
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

pankajkmrgupta/flask-video-stream
https://github.com/pankajkmrgupta/flask-video-stream
Entry file: flask-video-stream/app.py
Scanned: 2016-10-26 00:08:06.283379
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

askiefer/flask-testing-2
https://github.com/askiefer/flask-testing-2
Entry file: flask-testing-2/party.py
Scanned: 2016-10-26 00:08:08.084469
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

apaoing/apaoing-one-flask
https://github.com/apaoing/apaoing-one-flask
Entry file: apaoing-one-flask/hello.py
Scanned: 2016-10-26 00:08:09.435053
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

njurgens/cookbook-api-flask
https://github.com/njurgens/cookbook-api-flask
Entry file: cookbook-api-flask/cookbook_api/app.py
Scanned: 2016-10-26 00:08:11.354814
No vulnerabilities found.


jestoc01/flask-hello-world
https://github.com/jestoc01/flask-hello-world
Entry file: None
Scanned: 2016-10-26 00:08:11.877066
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

responsible/Flask-Restful-Role-Auth
https://github.com/responsible/Flask-Restful-Role-Auth
Entry file: Flask-Restful-Role-Auth/App/__init__.py
Scanned: 2016-10-26 00:08:13.206243
Vulnerability 1:
File: Flask-Restful-Role-Auth/App/__init__.py
 > User input at line 9, trigger word "SQLAlchemy": 
	db = SQLAlchemy(app)
Reassigned in: 
	File: Flask-Restful-Role-Auth/App/__init__.py
	 > Line 15: user_datastore = SQLAlchemyUserDatastore(db, User, Role)
	File: Flask-Restful-Role-Auth/App/__init__.py
	 > Line 16: security = Security().init_app(app, user_datastore,register_blueprint=False)
File: Flask-Restful-Role-Auth/App/__init__.py
 > reaches line 25, trigger word "execute(": 
	db.engine.execute(roles_users.insert(),user_id=1, role_id=1)



dyllanwli/MyFlaskProject
https://github.com/dyllanwli/MyFlaskProject
Entry file: MyFlaskProject/hello.py
Scanned: 2016-10-26 00:08:14.522639
No vulnerabilities found.


Almazi/1.flask_hello_world
https://github.com/Almazi/1.flask_hello_world
Entry file: None
Scanned: 2016-10-26 00:08:19.060641
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/Almazi/1.flask_hello_world.

johnwheeler/flask-ask
https://github.com/johnwheeler/flask-ask
Entry file: flask-ask/samples/session/session.py
Scanned: 2016-10-26 00:08:22.267073
Vulnerability 1:
File: flask-ask/samples/session/session.py
 > User input at line 39, trigger word "get(": 
	color = session.attributes.get(COLOR_KEY)
Reassigned in: 
	File: flask-ask/samples/session/session.py
	 > Line 42: ret_MAYBE_FUNCTION_NAME = statement(statement_text).simple_card(card_title, statement_text)
	File: flask-ask/samples/session/session.py
	 > Line 45: ret_MAYBE_FUNCTION_NAME = question(question_text).reprompt(question_text).simple_card(card_title, question_text)
File: flask-ask/samples/session/session.py
 > reaches line 41, trigger word "render_template(": 
	statement_text = render_template('known_color_bye',color=color)



parampara/flask
https://github.com/parampara/flask
Entry file: None
Scanned: 2016-10-26 00:08:22.811614
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

maxweiber/flask
https://github.com/maxweiber/flask
Entry file: None
Scanned: 2016-10-26 00:08:23.339498
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

syntaxSizer/flask
https://github.com/syntaxSizer/flask
Entry file: None
Scanned: 2016-10-26 00:08:23.881442
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

gabrielecker/Flask
https://github.com/gabrielecker/Flask
Entry file: None
Scanned: 2016-10-26 00:08:24.408281
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

ryanmthompson/flask
https://github.com/ryanmthompson/flask
Entry file: None
Scanned: 2016-10-26 00:08:24.911699
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

miguelgrinberg/flack
https://github.com/miguelgrinberg/flack
Entry file: flack/flack/__init__.py
Scanned: 2016-10-26 00:08:26.485313
Vulnerability 1:
File: flack/flack/api/messages.py
 > User input at line 36, trigger word "get(": 
	since = int(request.args.get('updated_since', '0'))
Reassigned in: 
	File: flack/flack/api/messages.py
	 > Line 40: since = day_ago
File: flack/flack/api/messages.py
 > reaches line 41, trigger word "filter(": 
	msgs = Message.query.filter(Message.updated_at > since).order_by(Message.updated_at)

Vulnerability 2:
File: flack/flack/api/users.py
 > User input at line 38, trigger word "get(": 
	users = users.filter_by(online=request.args.get('online') != '0')
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
File: flack/flack/api/users.py
 > reaches line 40, trigger word "filter(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))

Vulnerability 3:
File: flack/flack/api/users.py
 > User input at line 40, trigger word "get(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
	File: flack/flack/api/users.py
	 > Line 38: users = users.filter_by(online=request.args.get('online') != '0')
File: flack/flack/api/users.py
 > reaches line 40, trigger word "filter(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))

Vulnerability 4:
File: flack/flack/api/users.py
 > User input at line 38, trigger word "get(": 
	users = users.filter_by(online=request.args.get('online') != '0')
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
File: flack/flack/api/users.py
 > reaches line 42, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('users'[user.to_dict() for user in users.all()])

Vulnerability 5:
File: flack/flack/api/users.py
 > User input at line 40, trigger word "get(": 
	users = users.filter(User.updated_at > int(request.args.get('updated_since')))
Reassigned in: 
	File: flack/flack/api/users.py
	 > Line 36: users = User.query.order_by(User.updated_at.asc(), User.nickname.asc())
	File: flack/flack/api/users.py
	 > Line 38: users = users.filter_by(online=request.args.get('online') != '0')
File: flack/flack/api/users.py
 > reaches line 42, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('users'[user.to_dict() for user in users.all()])



TwilioDevEd/sms2fa-flask
https://github.com/TwilioDevEd/sms2fa-flask
Entry file: sms2fa-flask/sms2fa_flask/__init__.py
Scanned: 2016-10-26 00:08:29.288598
Vulnerability 1:
File: sms2fa-flask/sms2fa_flask/views.py
 > User input at line 51, trigger word "get(": 
	user = User.query.get(session.get('user_email', '')) or abort(401)
Reassigned in: 
	File: sms2fa-flask/sms2fa_flask/views.py
	 > Line 56: ret_MAYBE_FUNCTION_NAME = redirect(url_for('secret_page'))
File: sms2fa-flask/sms2fa_flask/views.py
 > reaches line 59, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('confirmation.html',user=user)



RoseOu/Flask-learning
https://github.com/RoseOu/Flask-learning
Entry file: None
Scanned: 2016-10-26 00:08:29.819319
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

YUX-IO/uwsgi-nginx-flask-docker-for-sinaimg
https://github.com/YUX-IO/uwsgi-nginx-flask-docker-for-sinaimg
Entry file: uwsgi-nginx-flask-docker-for-sinaimg/flask/app/main.py
Scanned: 2016-10-26 00:08:31.600523
No vulnerabilities found.


datademofun/heroku-basic-flask
https://github.com/datademofun/heroku-basic-flask
Entry file: heroku-basic-flask/app.py
Scanned: 2016-10-26 00:08:33.644797
No vulnerabilities found.


amey-sam/Flask-MailGun
https://github.com/amey-sam/Flask-MailGun
Entry file: None
Scanned: 2016-10-26 00:08:38.165889
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/amey-sam/Flask-MailGun.

efrainmunoz/flasktaskr
https://github.com/efrainmunoz/flasktaskr
Entry file: None
Scanned: 2016-10-26 00:08:40.677028
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

DullSmile/flasky
https://github.com/DullSmile/flasky
Entry file: None
Scanned: 2016-10-26 00:08:43.678052
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

andresmguk/flasktaskr
https://github.com/andresmguk/flasktaskr
Entry file: None
Scanned: 2016-10-26 00:08:53.216222
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

minc-yang/flaskdemo
https://github.com/minc-yang/flaskdemo
Entry file: None
Scanned: 2016-10-26 00:08:56.741432
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

yvonnendutaw/flaskbook
https://github.com/yvonnendutaw/flaskbook
Entry file: flaskbook/app/__init__.py
Scanned: 2016-10-26 00:08:59.215027
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zjl1110/flaskdemo
https://github.com/zjl1110/flaskdemo
Entry file: None
Scanned: 2016-10-26 00:08:59.758179
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

chestnutme/flaskie
https://github.com/chestnutme/flaskie
Entry file: flaskie/app/__init__.py
Scanned: 2016-10-26 00:09:06.375724
Vulnerability 1:
File: flaskie/app/main/views.py
 > User input at line 18, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 26: pagination = query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 29: posts = pagination.items
	File: flaskie/app/main/views.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskie/app/main/views.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 2:
File: flaskie/app/main/views.py
 > User input at line 21, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 19: show_followed = False
	File: flaskie/app/main/views.py
	 > Line 17: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flaskie/app/main/views.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, show_followed=show_followed, pagination=pagination)

Vulnerability 3:
File: flaskie/app/main/views.py
 > User input at line 36, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 37: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 39: posts = pagination.items
File: flaskie/app/main/views.py
 > reaches line 40, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: flaskie/app/main/views.py
 > User input at line 95, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 97: page = post.comments.count() - 1 / current_app.config['FLASKY_COMMENTS_PER_PAGE'] + 1
	File: flaskie/app/main/views.py
	 > Line 99: pagination = post.comments.order_by(Comment.timestamp.asc()).paginate(page,per_page=current_app.config['FLASKY_COMMENTS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 102: comments = pagination.items
	File: flaskie/app/main/views.py
	 > Line 94: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.post',id=post.id, page=-1))
File: flaskie/app/main/views.py
 > reaches line 103, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('post.html',posts=[post], form=form, comments=comments, pagination=pagination)

Vulnerability 5:
File: flaskie/app/main/views.py
 > User input at line 158, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 159: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flaskie/app/main/views.py
	 > Line 162: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flaskie/app/main/views.py
	 > Line 157: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
File: flaskie/app/main/views.py
 > reaches line 164, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 6:
File: flaskie/app/main/views.py
 > User input at line 174, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flaskie/app/main/views.py
	 > Line 175: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'])
	File: flaskie/app/main/views.py
	 > Line 177: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flaskie/app/main/views.py
	 > Line 173: ret_MAYBE_FUNCTION_NAME = redirect(url_for('index'))
File: flaskie/app/main/views.py
 > reaches line 179, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)



fengyu225/flaskr
https://github.com/fengyu225/flaskr
Entry file: None
Scanned: 2016-10-26 00:09:06.907765
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/fengyu225/flaskr.

jbussdieker/flaskr
https://github.com/jbussdieker/flaskr
Entry file: None
Scanned: 2016-10-26 00:09:07.425537
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/jbussdieker/flaskr.

richardqlin/flaskralchemy
https://github.com/richardqlin/flaskralchemy
Entry file: None
Scanned: 2016-10-26 00:09:08.946938
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/richardqlin/flaskralchemy.

garaud/flask-restplus-meetup
https://github.com/garaud/flask-restplus-meetup
Entry file: flask-restplus-meetup/musicapp.py
Scanned: 2016-10-26 00:09:11.400852
No vulnerabilities found.


ibrahimirdem/flask-numaradan-isim
https://github.com/ibrahimirdem/flask-numaradan-isim
Entry file: flask-numaradan-isim/app.py
Scanned: 2016-10-26 00:09:12.799141
Vulnerability 1:
File: flask-numaradan-isim/app.py
 > User input at line 18, trigger word "form[": 
	gelen = request.form['numara']
Reassigned in: 
	File: flask-numaradan-isim/app.py
	 > Line 22: sonuc = fonksiyonlar.numara_denetim(gelen)
	File: flask-numaradan-isim/app.py
	 > Line 29: ret_MAYBE_FUNCTION_NAME = redirect(url_for('home'))
	File: flask-numaradan-isim/app.py
	 > Line 33: ret_MAYBE_FUNCTION_NAME = redirect(url_for('home'))
File: flask-numaradan-isim/app.py
 > reaches line 25, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('sonuc.html',dogruluk=sonuc[0], isim=sonuc[1], id=sonuc[2])



andresmguk/flasktaskr1
https://github.com/andresmguk/flasktaskr1
Entry file: flasktaskr1/views.py
Scanned: 2016-10-26 00:09:15.990151
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

andresmguk/flasktaskr2
https://github.com/andresmguk/flasktaskr2
Entry file: flasktaskr2/views.py
Scanned: 2016-10-26 00:09:19.313147
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

belljustin/FlaskDeploy
https://github.com/belljustin/FlaskDeploy
Entry file: FlaskDeploy/deploy.py
Scanned: 2016-10-26 00:09:20.652692
No vulnerabilities found.


ArvidQuarshie/FlaskAuthentication
https://github.com/ArvidQuarshie/FlaskAuthentication
Entry file: None
Scanned: 2016-10-26 00:09:23.549071
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/ArvidQuarshie/FlaskAuthentication.

zjyExcelsior/FlaskSkeleton
https://github.com/zjyExcelsior/FlaskSkeleton
Entry file: FlaskSkeleton/myapp/__init__.py
Scanned: 2016-10-26 00:09:24.884187
No vulnerabilities found.


er3456qi/FlaskTutorial
https://github.com/er3456qi/FlaskTutorial
Entry file: FlaskTutorial/flaskr.py
Scanned: 2016-10-26 00:09:26.300329
No vulnerabilities found.


kelvinmuchui/flaskApp
https://github.com/kelvinmuchui/flaskApp
Entry file: flaskApp/app.py
Scanned: 2016-10-26 00:09:29.510769
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ptomelle/flaskNew
https://github.com/ptomelle/flaskNew
Entry file: flaskNew/wsgi/myflaskapp.py
Scanned: 2016-10-26 00:09:31.305153
No vulnerabilities found.


sr77/Restaurant-Web-Application
https://github.com/sr77/Restaurant-Web-Application
Entry file: Restaurant-Web-Application/project.py
Scanned: 2016-10-26 00:09:32.752271
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Almazi/Flask_Project_RealPython
https://github.com/Almazi/Flask_Project_RealPython
Entry file: Flask_Project_RealPython/app.py
Scanned: 2016-10-26 00:09:34.670104
No vulnerabilities found.


hamidfzm/Rest-in-Flask
https://github.com/hamidfzm/Rest-in-Flask
Entry file: Rest-in-Flask/application/__init__.py
Scanned: 2016-10-26 00:09:36.143317
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zhujinliang/flask-based-web-framework
https://github.com/zhujinliang/flask-based-web-framework
Entry file: flask-based-web-framework/core/__init__.py
Scanned: 2016-10-26 00:09:38.798631
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

lipemorais/todo-flask
https://github.com/lipemorais/todo-flask
Entry file: todo-flask/server.py
Scanned: 2016-10-26 00:09:40.106621
No vulnerabilities found.


tonuidavies/Blog-flask
https://github.com/tonuidavies/Blog-flask
Entry file: None
Scanned: 2016-10-26 00:09:48.976528
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

LpanatoPlanzi/flask-app
https://github.com/LpanatoPlanzi/flask-app
Entry file: flask-app/wsgi/myflaskapp.py
Scanned: 2016-10-26 00:09:50.570046
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

ksripathi/flask-app
https://github.com/ksripathi/flask-app
Entry file: flask-app/apilayer.py
Scanned: 2016-10-26 00:09:52.054956
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

maheskett/flask-testing
https://github.com/maheskett/flask-testing
Entry file: flask-testing/party.py
Scanned: 2016-10-26 00:09:53.843421
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

kellyhiggins/Flask-testing
https://github.com/kellyhiggins/Flask-testing
Entry file: Flask-testing/party.py
Scanned: 2016-10-26 00:09:55.708156
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

laurensila/flask-testing
https://github.com/laurensila/flask-testing
Entry file: flask-testing/party.py
Scanned: 2016-10-26 00:09:57.473096
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

jaronoff97/Flask-Boilerplate
https://github.com/jaronoff97/Flask-Boilerplate
Entry file: Flask-Boilerplate/flaskapp.py
Scanned: 2016-10-26 00:09:58.924337
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

zjl1110/flask-demo
https://github.com/zjl1110/flask-demo
Entry file: None
Scanned: 2016-10-26 00:10:03.885769
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

hadesong/Flask_Issues
https://github.com/hadesong/Flask_Issues
Entry file: None
Scanned: 2016-10-26 00:10:05.193312
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/hadesong/Flask_Issues.

jayanth2810/Heroku_Flask
https://github.com/jayanth2810/Heroku_Flask
Entry file: Heroku_Flask/app/app.py
Scanned: 2016-10-26 00:10:06.505511
No vulnerabilities found.


ArvidQuarshie/DiscoverFlask
https://github.com/ArvidQuarshie/DiscoverFlask
Entry file: None
Scanned: 2016-10-26 00:10:10.725640
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

kosma24/labrat-flask
https://github.com/kosma24/labrat-flask
Entry file: labrat-flask/lab.py
Scanned: 2016-10-26 00:10:12.544968
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

paceko/testing-flask
https://github.com/paceko/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:10:14.431727
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

minyisme/flask-testing
https://github.com/minyisme/flask-testing
Entry file: flask-testing/party.py
Scanned: 2016-10-26 00:10:16.320005
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

cristinamclarkin/Flask-testing
https://github.com/cristinamclarkin/Flask-testing
Entry file: Flask-testing/party.py
Scanned: 2016-10-26 00:10:18.284386
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

sangqt/learn-flask
https://github.com/sangqt/learn-flask
Entry file: None
Scanned: 2016-10-26 00:10:18.830988
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

nathanism/flask-app
https://github.com/nathanism/flask-app
Entry file: flask-app/app/__init__.py
Scanned: 2016-10-26 00:10:24.111059
No vulnerabilities found.


iuhsihsow/hello_flask
https://github.com/iuhsihsow/hello_flask
Entry file: hello_flask/app/__init__.py
Scanned: 2016-10-26 00:10:25.531939
No vulnerabilities found.


amsuny/flask-site
https://github.com/amsuny/flask-site
Entry file: flask-site/flask-site.py
Scanned: 2016-10-26 00:10:26.858006
No vulnerabilities found.


bigzhao/Flask-Tasks
https://github.com/bigzhao/Flask-Tasks
Entry file: Flask-Tasks/flasktask/app/__init__.py
Scanned: 2016-10-26 00:10:29.151660
Vulnerability 1:
File: Flask-Tasks/flasktask/app/auth/views.py
 > User input at line 124, trigger word "files[": 
	file = request.files['file']
Reassigned in: 
	File: Flask-Tasks/flasktask/app/auth/views.py
	 > Line 129: filename = secure_filename(file.filename)
File: Flask-Tasks/flasktask/app/auth/views.py
 > reaches line 131, trigger word "url_for(": 
	current_user.image_url = url_for('auth.static',filename='%s/%s' % ('avatar', filename))

Vulnerability 2:
File: Flask-Tasks/flasktask/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 18: next = None
File: Flask-Tasks/flasktask/app/api_1_0/posts.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_posts',page=page - 1, _external=True)

Vulnerability 3:
File: Flask-Tasks/flasktask/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 18: next = None
File: Flask-Tasks/flasktask/app/api_1_0/posts.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_posts',page=page + 1, _external=True)

Vulnerability 4:
File: Flask-Tasks/flasktask/app/api_1_0/posts.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 11: pagination = Post.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 14: posts = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 15: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/posts.py
	 > Line 18: next = None
File: Flask-Tasks/flasktask/app/api_1_0/posts.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 5:
File: Flask-Tasks/flasktask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.create_at.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 23: next = None
File: Flask-Tasks/flasktask/app/api_1_0/users.py
 > reaches line 22, trigger word "url_for(": 
	prev = url_for('api.get_user_posts',page=page - 1, _external=True)

Vulnerability 6:
File: Flask-Tasks/flasktask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.create_at.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 23: next = None
File: Flask-Tasks/flasktask/app/api_1_0/users.py
 > reaches line 25, trigger word "url_for(": 
	next = url_for('api.get_user_posts',page=page + 1, _external=True)

Vulnerability 7:
File: Flask-Tasks/flasktask/app/api_1_0/users.py
 > User input at line 15, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 16: pagination = user.posts.order_by(Post.create_at.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 19: posts = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 20: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/users.py
	 > Line 23: next = None
File: Flask-Tasks/flasktask/app/api_1_0/users.py
 > reaches line 26, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[post.to_json() for post in posts]prevnextpagination.total)

Vulnerability 8:
File: Flask-Tasks/flasktask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.create_at.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 18: next = None
File: Flask-Tasks/flasktask/app/api_1_0/comments.py
 > reaches line 17, trigger word "url_for(": 
	prev = url_for('api.get_comments',page=page - 1, _external=True)

Vulnerability 9:
File: Flask-Tasks/flasktask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.create_at.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 18: next = None
File: Flask-Tasks/flasktask/app/api_1_0/comments.py
 > reaches line 20, trigger word "url_for(": 
	next = url_for('api.get_comments',page=page + 1, _external=True)

Vulnerability 10:
File: Flask-Tasks/flasktask/app/api_1_0/comments.py
 > User input at line 10, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 11: pagination = Comment.query.order_by(Comment.create_at.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 14: comments = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 15: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/comments.py
	 > Line 18: next = None
File: Flask-Tasks/flasktask/app/api_1_0/comments.py
 > reaches line 21, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('posts''prev''next''count'[comment.to_json() for comment in comments]prevnextpagination.total)

Vulnerability 11:
File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 10: pagination = Task.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 13: tasks = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 14: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 17: next = None
File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
 > reaches line 16, trigger word "url_for(": 
	prev = url_for('api.get_tasks',page=page - 1, _external=True)

Vulnerability 12:
File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 10: pagination = Task.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 13: tasks = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 14: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 17: next = None
File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
 > reaches line 19, trigger word "url_for(": 
	next = url_for('api.get_tasks',page=page + 1, _external=True)

Vulnerability 13:
File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
 > User input at line 9, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 10: pagination = Task.query.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 13: tasks = pagination.items
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 14: prev = None
	File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
	 > Line 17: next = None
File: Flask-Tasks/flasktask/app/api_1_0/tasks.py
 > reaches line 20, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify('tasks''prev''next''count'[task.to_json() for task in tasks]prevnextpagination.total)

Vulnerability 14:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 26, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 28: pagination = current_user.circles[-1].tasks.order_by(Task.create_at.desc()).paginate(page,per_page=current_app.config['TASK_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 31: tasks = pagination.items
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, tasks=tasks, pagination=pagination, circle_name=current_user.circles[-1].name, new_messages=int(new_messages))

Vulnerability 15:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 33, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
Reassigned in: 
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 25: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 34, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, tasks=tasks, pagination=pagination, circle_name=current_user.circles[-1].name, new_messages=int(new_messages))

Vulnerability 16:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 53, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 57: pagination = c.tasks.order_by(Task.create_at.desc()).paginate(page,per_page=current_app.config['TASK_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 60: tasks = pagination.items
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 52: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index_circles',circle_id=c.id))
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 63, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, tasks=tasks, pagination=pagination, circle_name=c.name, new_messages=int(new_messages))

Vulnerability 17:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 62, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
Reassigned in: 
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 52: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index_circles',circle_id=c.id))
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 63, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, tasks=tasks, pagination=pagination, circle_name=c.name, new_messages=int(new_messages))

Vulnerability 18:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 167, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 168, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('circle.html',new_messages=int(new_messages))

Vulnerability 19:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 189, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message')
Reassigned in: 
	File: Flask-Tasks/flasktask/app/main/views.py
	 > Line 187: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.circle'))
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 190, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('create_circle.html',new_messages=int(new_messages), form=form)

Vulnerability 20:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 196, trigger word "get(": 
	message = request.form.get('message')
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 200, trigger word "filter(": 
	c = db.session.query(Circle).filter(Circle.name.like('%' + message + '%')).all()

Vulnerability 21:
File: Flask-Tasks/flasktask/app/main/views.py
 > User input at line 202, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
File: Flask-Tasks/flasktask/app/main/views.py
 > reaches line 203, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('search_circle.html',new_messages=int(new_messages), circles=c)

Vulnerability 22:
File: Flask-Tasks/flasktask/app/blog/views.py
 > User input at line 22, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 23: pagination = current_user.circles[-1].posts.order_by(Post.create_at.desc()).paginate(page,per_page=current_app.config['TASK_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 26: posts = pagination.items
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-Tasks/flasktask/app/blog/views.py
 > reaches line 29, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog/blogs.html',postform=postform, posts=posts, pagination=pagination, circle_name=current_user.circles[-1].name, new_messages=int(new_messages))

Vulnerability 23:
File: Flask-Tasks/flasktask/app/blog/views.py
 > User input at line 28, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
Reassigned in: 
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 21: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: Flask-Tasks/flasktask/app/blog/views.py
 > reaches line 29, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog/blogs.html',postform=postform, posts=posts, pagination=pagination, circle_name=current_user.circles[-1].name, new_messages=int(new_messages))

Vulnerability 24:
File: Flask-Tasks/flasktask/app/blog/views.py
 > User input at line 45, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 46: pagination = c.posts.order_by(Post.create_at.desc()).paginate(page,per_page=current_app.config['TASK_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 49: posts = pagination.items
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 44: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index_circles',circle_id=circle_id))
File: Flask-Tasks/flasktask/app/blog/views.py
 > reaches line 52, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog/blogs.html',postform=postform, posts=posts, pagination=pagination, circle_name=c.name, new_messages=int(new_messages))

Vulnerability 25:
File: Flask-Tasks/flasktask/app/blog/views.py
 > User input at line 51, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
Reassigned in: 
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 44: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index_circles',circle_id=circle_id))
File: Flask-Tasks/flasktask/app/blog/views.py
 > reaches line 52, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog/blogs.html',postform=postform, posts=posts, pagination=pagination, circle_name=c.name, new_messages=int(new_messages))

Vulnerability 26:
File: Flask-Tasks/flasktask/app/blog/views.py
 > User input at line 94, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 95: pagination = user.posts.paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 98: posts = pagination.items
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 100: posts = []
	File: Flask-Tasks/flasktask/app/blog/views.py
	 > Line 101: posts = pagination.items
File: Flask-Tasks/flasktask/app/blog/views.py
 > reaches line 104, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog/user_blogs.html',user=user, posts=posts, pagination=pagination, new_messages=int(new_messages))

Vulnerability 27:
File: Flask-Tasks/flasktask/app/blog/views.py
 > User input at line 103, trigger word "get(": 
	new_messages = redis_client.hget(current_user.id, 'new_message').decode('utf-8')
File: Flask-Tasks/flasktask/app/blog/views.py
 > reaches line 104, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('blog/user_blogs.html',user=user, posts=posts, pagination=pagination, new_messages=int(new_messages))



nlesc-sherlock/spark-flask
https://github.com/nlesc-sherlock/spark-flask
Entry file: spark-flask/app.py
Scanned: 2016-10-26 00:10:30.566900
No vulnerabilities found.


linked0/first-flask
https://github.com/linked0/first-flask
Entry file: first-flask/main.py
Scanned: 2016-10-26 00:10:31.881987
No vulnerabilities found.


mprather1/flask_hello
https://github.com/mprather1/flask_hello
Entry file: flask_hello/hello_world.py
Scanned: 2016-10-26 00:10:33.193567
No vulnerabilities found.


9217392354A/flask-stuff
https://github.com/9217392354A/flask-stuff
Entry file: flask-stuff/__init__.py
Scanned: 2016-10-26 00:10:37.211168
No vulnerabilities found.


M4riacg/api-flask
https://github.com/M4riacg/api-flask
Entry file: api-flask/api_flask.py
Scanned: 2016-10-26 00:10:38.522176
No vulnerabilities found.


gpgomes/pyFlask
https://github.com/gpgomes/pyFlask
Entry file: pyFlask/server.py
Scanned: 2016-10-26 00:10:39.834313
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Nana2mini/Flask-Blog
https://github.com/Nana2mini/Flask-Blog
Entry file: None
Scanned: 2016-10-26 00:10:40.495536
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

dencynluv/testing-flask
https://github.com/dencynluv/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:10:42.301526
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

efrainmunoz/flask-blog
https://github.com/efrainmunoz/flask-blog
Entry file: None
Scanned: 2016-10-26 00:10:49.843646
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

BethMwangi/flask-intro
https://github.com/BethMwangi/flask-intro
Entry file: flask-intro/app.py
Scanned: 2016-10-26 00:10:54.341849
No vulnerabilities found.
An Error occurred while scanning the repo: Input needs to be a file. Path: flask-intro/flask/lib/python2.7/sre_compile.py

zjl1110/flask-blogmy
https://github.com/zjl1110/flask-blogmy
Entry file: None
Scanned: 2016-10-26 00:10:58.861506
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

skrillex581/flask-insight
https://github.com/skrillex581/flask-insight
Entry file: flask-insight/app/__init__.py
Scanned: 2016-10-26 00:11:00.352910
No vulnerabilities found.


balalay12/flask-cachlka
https://github.com/balalay12/flask-cachlka
Entry file: flask-cachlka/app/__init__.py
Scanned: 2016-10-26 00:11:02.105224
Vulnerability 1:
File: flask-cachlka/app/views.py
 > User input at line 230, trigger word "get(": 
	repeat = Repeats.query.get(int(id))
Reassigned in: 
	File: flask-cachlka/app/views.py
	 > Line 231: s = Sets.query.get(repeat.set_id)
	File: flask-cachlka/app/views.py
	 > Line 233: ret_MAYBE_FUNCTION_NAME = return_response(404, jsonify(error='Отказано в доступе'))
	File: flask-cachlka/app/views.py
	 > Line 235: ret_MAYBE_FUNCTION_NAME = return_response(500, jsonify(error='Произошлка ошибка во время запроса.'))
File: flask-cachlka/app/views.py
 > reaches line 236, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(repeat=repeat.serialize)

Vulnerability 2:
File: flask-cachlka/app/views.py
 > User input at line 293, trigger word "get(": 
	category = Categories.query.get(int(id))
File: flask-cachlka/app/views.py
 > reaches line 294, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(exercises=[exercise.serialize for exercise in category.exercises.all()])

Vulnerability 3:
File: flask-cachlka/app/views.py
 > User input at line 312, trigger word "get(": 
	body_size = BodySize.query.get(int(id))
Reassigned in: 
	File: flask-cachlka/app/views.py
	 > Line 314: ret_MAYBE_FUNCTION_NAME = return_response(404, jsonify(error='Отказано в доступе'))
	File: flask-cachlka/app/views.py
	 > Line 316: ret_MAYBE_FUNCTION_NAME = return_response(500, jsonify(error='Произошлка ошибка во время запроса.'))
File: flask-cachlka/app/views.py
 > reaches line 317, trigger word "jsonify(": 
	ret_MAYBE_FUNCTION_NAME = jsonify(body_size=body_size.serialize)



mythreyaraj/python-flask
https://github.com/mythreyaraj/python-flask
Entry file: python-flask/app.py
Scanned: 2016-10-26 00:11:03.583590
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Lypzero/flask_studing
https://github.com/Lypzero/flask_studing
Entry file: flask_studing/app/__init__.py
Scanned: 2016-10-26 00:11:05.172535
Vulnerability 1:
File: flask_studing/app/main/views.py
 > User input at line 20, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_studing/app/main/views.py
	 > Line 28: pagination = Post.query.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_studing/app/main/views.py
	 > Line 29: posts = pagination.items
	File: flask_studing/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_studing/app/main/views.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination, show_followed=show_followed)

Vulnerability 2:
File: flask_studing/app/main/views.py
 > User input at line 23, trigger word "get(": 
	show_followed = bool(request.cookies.get('show_followed', ''))
Reassigned in: 
	File: flask_studing/app/main/views.py
	 > Line 21: show_followed = False
	File: flask_studing/app/main/views.py
	 > Line 18: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_studing/app/main/views.py
 > reaches line 30, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('index.html',form=form, posts=posts, pagination=pagination, show_followed=show_followed)

Vulnerability 3:
File: flask_studing/app/main/views.py
 > User input at line 42, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_studing/app/main/views.py
	 > Line 43: pagination = user.posts.order_by(Post.timestamp.desc()).paginate(page,per_page=current_app.config['FLASKY_POSTS_PER_PAGE'], error_out=False)
	File: flask_studing/app/main/views.py
	 > Line 46: posts = pagination.items
File: flask_studing/app/main/views.py
 > reaches line 47, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('user.html',user=user, posts=posts, pagination=pagination)

Vulnerability 4:
File: flask_studing/app/main/views.py
 > User input at line 108, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_studing/app/main/views.py
	 > Line 109: pagination = user.followers.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_studing/app/main/views.py
	 > Line 110: follows = ['user''timestamp'item.followeritem.timestamp for item in pagination.items]
	File: flask_studing/app/main/views.py
	 > Line 107: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_studing/app/main/views.py
 > reaches line 111, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followers of', endpoint='.followers', pagination=pagination, follows=follows)

Vulnerability 5:
File: flask_studing/app/main/views.py
 > User input at line 119, trigger word "get(": 
	page = request.args.get('page', 1,type=int)
Reassigned in: 
	File: flask_studing/app/main/views.py
	 > Line 120: pagination = user.followed.paginate(page,per_page=current_app.config['FLASKY_FOLLOWERS_PER_PAGE'], error_out=False)
	File: flask_studing/app/main/views.py
	 > Line 123: follows = ['user''timestamp'item.followeditem.timestamp for item in pagination.items]
	File: flask_studing/app/main/views.py
	 > Line 118: ret_MAYBE_FUNCTION_NAME = redirect(url_for('.index'))
File: flask_studing/app/main/views.py
 > reaches line 125, trigger word "render_template(": 
	ret_MAYBE_FUNCTION_NAME = render_template('followers.html',user=user, title='Followed by', endpoint='.followed_by', pagination=pagination, follows=follows)



dflee/testing-flask
https://github.com/dflee/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:11:07.094088
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Ihyatt/testing-flask
https://github.com/Ihyatt/testing-flask
Entry file: testing-flask/party.py
Scanned: 2016-10-26 00:11:08.888637
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

stefanbro/flask-circle
https://github.com/stefanbro/flask-circle
Entry file: flask-circle/app/__init__.py
Scanned: 2016-10-26 00:11:10.693165
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

Clemenshemmerling/flask-docker
https://github.com/Clemenshemmerling/flask-docker
Entry file: flask-docker/app/app.py
Scanned: 2016-10-26 00:11:12.058812
No vulnerabilities found.


rajatgermany/Rajat5
https://github.com/rajatgermany/Rajat5
Entry file: Rajat5/newforms.py
Scanned: 2016-10-26 00:11:13.409854
No vulnerabilities found.


amirthn/irpycoderzz
https://github.com/amirthn/irpycoderzz
Entry file: irpycoderzz/app.py
Scanned: 2016-10-26 00:11:14.712784
No vulnerabilities found.


chxy325/studyflask
https://github.com/chxy325/studyflask
Entry file: studyflask/hello.py
Scanned: 2016-10-26 00:11:16.024243
No vulnerabilities found.


moling3650/microblog
https://github.com/moling3650/microblog
Entry file: None
Scanned: 2016-10-26 00:11:17.555613
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/moling3650/microblog.

gekorob/liebraryrest
https://github.com/gekorob/liebraryrest
Entry file: liebraryrest/liebraryrest/app.py
Scanned: 2016-10-26 00:11:20.114302
Vulnerability 1:
File: liebraryrest/liebraryrest/api/authors.py
 > User input at line 14, trigger word "get(": 
	qry = qry.filter(Author.name.contains(request.args.get('name')))
Reassigned in: 
	File: liebraryrest/liebraryrest/api/authors.py
	 > Line 11: qry = Author.query
File: liebraryrest/liebraryrest/api/authors.py
 > reaches line 14, trigger word "filter(": 
	qry = qry.filter(Author.name.contains(request.args.get('name')))



jlanio/Flask-RestlessLoginToken
https://github.com/jlanio/Flask-RestlessLoginToken
Entry file: Flask-RestlessLoginToken/models.py
Scanned: 2016-10-26 00:11:25.446055
No vulnerabilities found.


vibhor1510/COMS-6156-Flask-App
https://github.com/vibhor1510/COMS-6156-Flask-App
Entry file: None
Scanned: 2016-10-26 00:11:29.833980
No vulnerabilities found.
An Error occurred while scanning the repo: No entry path found in repo https://github.com/vibhor1510/COMS-6156-Flask-App.

azedlee/flask_hello_world
https://github.com/azedlee/flask_hello_world
Entry file: flask_hello_world/hello_world.py
Scanned: 2016-10-26 00:11:32.600006
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown :-(

BeenzSyed/flask-random-quote
https://github.com/BeenzSyed/flask-random-quote
Entry file: flask-random-quote/app.py
Scanned: 2016-10-26 00:11:33.920832
No vulnerabilities found.


Firdaus1/Hello_world_Flask
https://github.com/Firdaus1/Hello_world_Flask
Entry file: Hello_world_Flask/FirdausCS3320.py
Scanned: 2016-10-26 00:11:35.235462
No vulnerabilities found.


JesseE/flask-demo-viewer
https://github.com/JesseE/flask-demo-viewer
Entry file: None
Scanned: 2016-10-26 00:11:39.623371
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

katietarng/hb-testing-flask
https://github.com/katietarng/hb-testing-flask
Entry file: None
Scanned: 2016-10-26 00:11:40.162192
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

HenryZivers/Flask-Microblog-App
https://github.com/HenryZivers/Flask-Microblog-App
Entry file: None
Scanned: 2016-10-26 00:11:40.711889
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

stack-templates/cde-flask-init-project
https://github.com/stack-templates/cde-flask-init-project
Entry file: None
Scanned: 2016-10-26 00:11:41.269722
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Skycker/lsa-flask-preview
https://github.com/Skycker/lsa-flask-preview
Entry file: None
Scanned: 2016-10-26 00:11:41.808073
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

aurora71/flask-Smart-seat-realtime
https://github.com/aurora71/flask-Smart-seat-realtime
Entry file: None
Scanned: 2016-10-26 00:11:42.350985
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

s4swadhin/flask-hello-world
https://github.com/s4swadhin/flask-hello-world
Entry file: None
Scanned: 2016-10-26 00:11:42.881762
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

matthewR1993/flask-gant-fun
https://github.com/matthewR1993/flask-gant-fun
Entry file: None
Scanned: 2016-10-26 00:11:50.456578
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

parampara/flask
https://github.com/parampara/flask
Entry file: None
Scanned: 2016-10-26 00:12:00.028840
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

glrh111/flask
https://github.com/glrh111/flask
Entry file: None
Scanned: 2016-10-26 00:12:01.549573
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

rakeshkirola/Flask
https://github.com/rakeshkirola/Flask
Entry file: None
Scanned: 2016-10-26 00:12:03.067923
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

caibitim/Flask
https://github.com/caibitim/Flask
Entry file: None
Scanned: 2016-10-26 00:12:04.598459
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

zhangsen1992/flask
https://github.com/zhangsen1992/flask
Entry file: None
Scanned: 2016-10-26 00:12:06.110296
No vulnerabilities found.
An Error occurred while scanning the repo: Other Error Unknown while cloning :-(

Mufflerman/Flask
https://github.com/Mufflerman/Flask
Entry file: None
Scanned: 2016-10-26 00:12:07